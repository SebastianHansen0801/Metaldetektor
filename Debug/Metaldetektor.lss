
Metaldetektor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000020d0  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000274  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800200  00800200  000020d0  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  000020d0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000250  00000000  00000000  0000212b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003780  00000000  00000000  0000237b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001120  00000000  00000000  00005afb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000014b9  00000000  00000000  00006c1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000061c  00000000  00000000  000080d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004bd  00000000  00000000  000086f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000016aa  00000000  00000000  00008bad  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000268  00000000  00000000  0000a257  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00002018  00002018  000020cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000a4c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.initCTCB1ADC 0000004a  00001c52  00001c52  00001d06  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.enable_int2 0000000e  00001f8c  00001f8c  00002040  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.I2C_Init 00000036  00001dde  00001dde  00001e92  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.I2C_Start 00000048  00001c9c  00001c9c  00001d50  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.I2C_Write 0000002c  00001e14  00001e14  00001ec8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.I2C_Stop 00000010  00001f6c  00001f6c  00002020  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__vector_18 0000004c  00001c06  00001c06  00001cba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__vector_29 00000084  000018b4  000018b4  00001968  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__vector_3 0000001e  00001efa  00001efa  00001fae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.init    0000003e  00001d68  00001d68  00001e1c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.showValues 00000066  00001a94  00001a94  00001b48  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.fourier 000001ea  00000f8c  00000f8c  00001040  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .progmemx.data 0000001b  00000574  00000574  00000628  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 27 .text.main    000002be  00000cce  00000cce  00000d82  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .bss.result.2263 0000000c  00800281  00800281  000020d0  2**0
                  ALLOC
 29 .bss.sampleIndex.2239 00000002  0080028d  0080028d  000020d0  2**0
                  ALLOC
 30 .bss.sigCounter.2233 00000001  0080028f  0080028f  000020d0  2**0
                  ALLOC
 31 .bss.calibrate 00000001  00800290  00800290  000020d0  2**0
                  ALLOC
 32 .bss.samples  00000080  00800201  00800201  000020d0  2**0
                  ALLOC
 33 .text.ssd1306_command 00000020  00001eba  00001eba  00001f6e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.InitializeDisplay 00000098  00001706  00001706  000017ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.SendChar 00000020  00001eda  00001eda  00001f8e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.setXY   0000002c  00001e40  00001e40  00001ef4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.clear_display 0000002c  00001e6c  00001e6c  00001f20  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.sendStrXY 0000006a  00001a2a  00001a2a  00001ade  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.dim     0000001c  00001f18  00001f18  00001fcc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .progmemx.data.myFont 00000300  00000274  00000274  00000328  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 41 .data._i2c_address 00000001  00800291  0000058f  00000643  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 42 .text.initTimer1CTC 000000a4  00001662  00001662  00001716  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.avrlibc.fplib 0000000e  00001f9a  00001f9a  0000204e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.avrlibc.fplib 000000ce  000014d8  000014d8  0000158c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.avrlibc.fplib 00000088  0000182c  0000182c  000018e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.avrlibc.fplib 0000005e  00001b5a  00001b5a  00001c0e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.avrlibc.fplib 00000008  00001ffa  00001ffa  000020ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.avrlibc.fplib 000000de  00001326  00001326  000013da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.avrlibc.fplib 0000007a  00001938  00001938  000019ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.avrlibc.fplib 0000000c  00001fee  00001fee  000020a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.avrlibc.fplib 00000006  00002012  00002012  000020c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.avrlibc.fplib 0000004e  00001bb8  00001bb8  00001c6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.avrlibc.fplib 0000000e  00001fa8  00001fa8  0000205c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.avrlibc.fplib 0000000e  00001fb6  00001fb6  0000206a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.avrlibc.fplib 00000022  00001e98  00001e98  00001f4c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.avrlibc.fplib 00000044  00001ce4  00001ce4  00001d98  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.avrlibc.fplib 0000000e  00001fc4  00001fc4  00002078  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.avrlibc.fplib 00000010  00001f7c  00001f7c  00002030  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.avrlibc.fplib 00000008  00002002  00002002  000020b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.avrlibc.fplib 000000d4  00001404  00001404  000014b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.avrlibc.fplib 0000008e  0000179e  0000179e  00001852  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.avrlibc.fplib 00000008  0000200a  0000200a  000020be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.avrlibc.fplib 0000001c  00001f34  00001f34  00001fe8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.avrlibc.fplib 0000000e  00001fd2  00001fd2  00002086  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.libgcc  0000001c  00001f50  00001f50  00002004  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.avrlibc 00000040  00001d28  00001d28  00001ddc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.avrlibc 00000060  00001afa  00001afa  00001bae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.avrlibc 00000450  00000590  00000590  00000644  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.avrlibc 000002ee  000009e0  000009e0  00000a94  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.avrlibc 000001b0  00001176  00001176  0000122a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.avrlibc 00000038  00001da6  00001da6  00001e5a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.avrlibc 00000078  000019b2  000019b2  00001a66  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.avrlibc 000000bc  000015a6  000015a6  0000165a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.libgcc  0000000e  00001fe0  00001fe0  00002094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 0c 01 	jmp	0x218	; 0x218 <__ctors_end>
   4:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
   8:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
   c:	0c 94 7d 0f 	jmp	0x1efa	; 0x1efa <__vector_3>
  10:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  14:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  18:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  1c:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  20:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  24:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  28:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  2c:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  30:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  34:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  38:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  3c:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  40:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  44:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  48:	0c 94 03 0e 	jmp	0x1c06	; 0x1c06 <__vector_18>
  4c:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  50:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  54:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  58:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  5c:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  60:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  64:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  68:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  6c:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  70:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  74:	0c 94 5a 0c 	jmp	0x18b4	; 0x18b4 <__vector_29>
  78:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  7c:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  80:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  84:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  88:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  8c:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  90:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  94:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  98:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  9c:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  a0:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  a4:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  a8:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  ac:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  b0:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  b4:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  b8:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  bc:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  c0:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  c4:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  c8:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  cc:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  d0:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  d4:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  d8:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  dc:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  e0:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__bad_interrupt>
  e4:	08 4a       	sbci	r16, 0xA8	; 168
  e6:	d7 3b       	cpi	r29, 0xB7	; 183
  e8:	3b ce       	rjmp	.-906    	; 0xfffffd60 <__eeprom_end+0xff7efd60>
  ea:	01 6e       	ori	r16, 0xE1	; 225
  ec:	84 bc       	out	0x24, r8	; 36
  ee:	bf fd       	.word	0xfdbf	; ????
  f0:	c1 2f       	mov	r28, r17
  f2:	3d 6c       	ori	r19, 0xCD	; 205
  f4:	74 31       	cpi	r23, 0x14	; 20
  f6:	9a bd       	out	0x2a, r25	; 42
  f8:	56 83       	std	Z+6, r21	; 0x06
  fa:	3d da       	rcall	.-2950   	; 0xfffff576 <__eeprom_end+0xff7ef576>
  fc:	3d 00       	.word	0x003d	; ????
  fe:	c7 7f       	andi	r28, 0xF7	; 247
 100:	11 be       	out	0x31, r1	; 49
 102:	d9 e4       	ldi	r29, 0x49	; 73
 104:	bb 4c       	sbci	r27, 0xCB	; 203
 106:	3e 91       	ld	r19, -X
 108:	6b aa       	std	Y+51, r6	; 0x33
 10a:	aa be       	out	0x3a, r10	; 58
 10c:	00 00       	nop
 10e:	00 80       	ld	r0, Z
 110:	3f 00       	.word	0x003f	; ????

00000112 <.dinit>:
 112:	02 00       	.word	0x0002	; ????
 114:	02 91       	ld	r16, -Z
 116:	80 02       	muls	r24, r16
 118:	91 02       	muls	r25, r17
 11a:	92 00       	.word	0x0092	; ????
 11c:	05 8f       	std	Z+29, r16	; 0x1d

0000011e <__trampolines_end>:
 11e:	00 40       	sbci	r16, 0x00	; 0
 120:	7a 10       	cpse	r7, r10
 122:	f3 5a       	subi	r31, 0xA3	; 163
 124:	00 a0       	ldd	r0, Z+32	; 0x20
 126:	72 4e       	sbci	r23, 0xE2	; 226
 128:	18 09       	sbc	r17, r8
 12a:	00 10       	cpse	r0, r0
 12c:	a5 d4       	rcall	.+2378   	; 0xa78 <dtoa_prf+0x98>
 12e:	e8 00       	.word	0x00e8	; ????
 130:	00 e8       	ldi	r16, 0x80	; 128
 132:	76 48       	sbci	r23, 0x86	; 134
 134:	17 00       	.word	0x0017	; ????
 136:	00 e4       	ldi	r16, 0x40	; 64
 138:	0b 54       	subi	r16, 0x4B	; 75
 13a:	02 00       	.word	0x0002	; ????
 13c:	00 ca       	rjmp	.-3072   	; 0xfffff53e <__eeprom_end+0xff7ef53e>
 13e:	9a 3b       	cpi	r25, 0xBA	; 186
 140:	00 00       	nop
 142:	00 e1       	ldi	r16, 0x10	; 16
 144:	f5 05       	cpc	r31, r5
 146:	00 00       	nop
 148:	80 96       	adiw	r24, 0x20	; 32
 14a:	98 00       	.word	0x0098	; ????
 14c:	00 00       	nop
 14e:	40 42       	sbci	r20, 0x20	; 32
 150:	0f 00       	.word	0x000f	; ????
 152:	00 00       	nop
 154:	a0 86       	std	Z+8, r10	; 0x08
 156:	01 00       	.word	0x0001	; ????
 158:	00 00       	nop
 15a:	10 27       	eor	r17, r16
 15c:	00 00       	nop
 15e:	00 00       	nop
 160:	e8 03       	fmulsu	r22, r16
 162:	00 00       	nop
 164:	00 00       	nop
 166:	64 00       	.word	0x0064	; ????
 168:	00 00       	nop
 16a:	00 00       	nop
 16c:	0a 00       	.word	0x000a	; ????
 16e:	00 00       	nop
 170:	00 00       	nop
 172:	01 00       	.word	0x0001	; ????
 174:	00 00       	nop
 176:	00 00       	nop
 178:	2c 76       	andi	r18, 0x6C	; 108
 17a:	d8 88       	ldd	r13, Y+16	; 0x10
 17c:	dc 67       	ori	r29, 0x7C	; 124
 17e:	4f 08       	sbc	r4, r15
 180:	23 df       	rcall	.-442    	; 0xffffffc8 <__eeprom_end+0xff7effc8>
 182:	c1 df       	rcall	.-126    	; 0x106 <__SREG__+0xc7>
 184:	ae 59       	subi	r26, 0x9E	; 158
 186:	e1 b1       	in	r30, 0x01	; 1
 188:	b7 96       	adiw	r30, 0x27	; 39
 18a:	e5 e3       	ldi	r30, 0x35	; 53
 18c:	e4 53       	subi	r30, 0x34	; 52
 18e:	c6 3a       	cpi	r28, 0xA6	; 166
 190:	e6 51       	subi	r30, 0x16	; 22
 192:	99 76       	andi	r25, 0x69	; 105
 194:	96 e8       	ldi	r25, 0x86	; 134
 196:	e6 c2       	rjmp	.+1484   	; 0x764 <vfprintf+0x1d4>
 198:	84 26       	eor	r8, r20
 19a:	eb 89       	ldd	r30, Y+19	; 0x13
 19c:	8c 9b       	sbis	0x11, 4	; 17
 19e:	62 ed       	ldi	r22, 0xD2	; 210
 1a0:	40 7c       	andi	r20, 0xC0	; 192
 1a2:	6f fc       	.word	0xfc6f	; ????
 1a4:	ef bc       	out	0x2f, r14	; 47
 1a6:	9c 9f       	mul	r25, r28
 1a8:	40 f2       	brcs	.-112    	; 0x13a <__trampolines_end+0x1c>
 1aa:	ba a5       	ldd	r27, Y+42	; 0x2a
 1ac:	6f a5       	ldd	r22, Y+47	; 0x2f
 1ae:	f4 90       	lpm	r15, Z
 1b0:	05 5a       	subi	r16, 0xA5	; 165
 1b2:	2a f7       	brpl	.-54     	; 0x17e <__trampolines_end+0x60>
 1b4:	5c 93       	st	X, r21
 1b6:	6b 6c       	ori	r22, 0xCB	; 203
 1b8:	f9 67       	ori	r31, 0x79	; 121
 1ba:	6d c1       	rjmp	.+730    	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 1bc:	1b fc       	.word	0xfc1b	; ????
 1be:	e0 e4       	ldi	r30, 0x40	; 64
 1c0:	0d 47       	sbci	r16, 0x7D	; 125
 1c2:	fe f5       	brtc	.+126    	; 0x242 <__do_copy_data+0x1a>
 1c4:	20 e6       	ldi	r18, 0x60	; 96
 1c6:	b5 00       	.word	0x00b5	; ????
 1c8:	d0 ed       	ldi	r29, 0xD0	; 208
 1ca:	90 2e       	mov	r9, r16
 1cc:	03 00       	.word	0x0003	; ????
 1ce:	94 35       	cpi	r25, 0x54	; 84
 1d0:	77 05       	cpc	r23, r7
 1d2:	00 80       	ld	r0, Z
 1d4:	84 1e       	adc	r8, r20
 1d6:	08 00       	.word	0x0008	; ????
 1d8:	00 20       	and	r0, r0
 1da:	4e 0a       	sbc	r4, r30
 1dc:	00 00       	nop
 1de:	00 c8       	rjmp	.-4096   	; 0xfffff1e0 <__eeprom_end+0xff7ef1e0>
 1e0:	0c 33       	cpi	r16, 0x3C	; 60
 1e2:	33 33       	cpi	r19, 0x33	; 51
 1e4:	33 0f       	add	r19, r19
 1e6:	98 6e       	ori	r25, 0xE8	; 232
 1e8:	12 83       	std	Z+2, r17	; 0x02
 1ea:	11 41       	sbci	r17, 0x11	; 17
 1ec:	ef 8d       	ldd	r30, Y+31	; 0x1f
 1ee:	21 14       	cp	r2, r1
 1f0:	89 3b       	cpi	r24, 0xB9	; 185
 1f2:	e6 55       	subi	r30, 0x56	; 86
 1f4:	16 cf       	rjmp	.-468    	; 0x22 <__FUSE_REGION_LENGTH__+0x1f>
 1f6:	fe e6       	ldi	r31, 0x6E	; 110
 1f8:	db 18       	sub	r13, r11
 1fa:	d1 84       	ldd	r13, Z+9	; 0x09
 1fc:	4b 38       	cpi	r20, 0x8B	; 139
 1fe:	1b f7       	brvc	.-58     	; 0x1c6 <__trampolines_end+0xa8>
 200:	7c 1d       	adc	r23, r12
 202:	90 1d       	adc	r25, r0
 204:	a4 bb       	out	0x14, r26	; 20
 206:	e4 24       	eor	r14, r4
 208:	20 32       	cpi	r18, 0x20	; 32
 20a:	84 72       	andi	r24, 0x24	; 36
 20c:	5e 22       	and	r5, r30
 20e:	81 00       	.word	0x0081	; ????
 210:	c9 f1       	breq	.+114    	; 0x284 <_etext+0x10>
 212:	24 ec       	ldi	r18, 0xC4	; 196
 214:	a1 e5       	ldi	r26, 0x51	; 81
 216:	3d 27       	eor	r19, r29

00000218 <__ctors_end>:
 218:	11 24       	eor	r1, r1
 21a:	1f be       	out	0x3f, r1	; 63
 21c:	cf ef       	ldi	r28, 0xFF	; 255
 21e:	d1 e2       	ldi	r29, 0x21	; 33
 220:	de bf       	out	0x3e, r29	; 62
 222:	cd bf       	out	0x3d, r28	; 61
 224:	00 e0       	ldi	r16, 0x00	; 0
 226:	0c bf       	out	0x3c, r16	; 60

00000228 <__do_copy_data>:
 228:	e2 e1       	ldi	r30, 0x12	; 18
 22a:	f1 e0       	ldi	r31, 0x01	; 1
 22c:	41 e0       	ldi	r20, 0x01	; 1
 22e:	19 c0       	rjmp	.+50     	; 0x262 <__do_clear_bss+0x8>
 230:	b7 91       	elpm	r27, Z+
 232:	a7 91       	elpm	r26, Z+
 234:	37 91       	elpm	r19, Z+
 236:	27 91       	elpm	r18, Z+
 238:	07 91       	elpm	r16, Z+
 23a:	07 fd       	sbrc	r16, 7
 23c:	0e c0       	rjmp	.+28     	; 0x25a <__do_clear_bss>
 23e:	97 91       	elpm	r25, Z+
 240:	87 91       	elpm	r24, Z+
 242:	ef 01       	movw	r28, r30
 244:	f9 2f       	mov	r31, r25
 246:	e8 2f       	mov	r30, r24
 248:	0b bf       	out	0x3b, r16	; 59
 24a:	07 90       	elpm	r0, Z+
 24c:	0d 92       	st	X+, r0
 24e:	a2 17       	cp	r26, r18
 250:	b3 07       	cpc	r27, r19
 252:	d9 f7       	brne	.-10     	; 0x24a <__do_copy_data+0x22>
 254:	fe 01       	movw	r30, r28
 256:	1b be       	out	0x3b, r1	; 59
 258:	04 c0       	rjmp	.+8      	; 0x262 <__do_clear_bss+0x8>

0000025a <__do_clear_bss>:
 25a:	1d 92       	st	X+, r1
 25c:	a2 17       	cp	r26, r18
 25e:	b3 07       	cpc	r27, r19
 260:	e1 f7       	brne	.-8      	; 0x25a <__do_clear_bss>
 262:	ee 31       	cpi	r30, 0x1E	; 30
 264:	f4 07       	cpc	r31, r20
 266:	21 f7       	brne	.-56     	; 0x230 <__do_copy_data+0x8>
 268:	0e 94 67 06 	call	0xcce	; 0xcce <main>
 26c:	0c 94 38 01 	jmp	0x270	; 0x270 <_exit>

00000270 <_exit>:
 270:	f8 94       	cli

00000272 <__stop_program>:
 272:	ff cf       	rjmp	.-2      	; 0x272 <__stop_program>

Disassembly of section .text:

00002018 <__bad_interrupt>:
    2018:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.initCTCB1ADC:

00001c52 <initCTCB1ADC>:
	DIDR2 =0xff;
}

//initialize ADC with timer1 comp b as trigger
void initCTCB1ADC(char channel) {
	ADMUX = channel;
    1c52:	ec e7       	ldi	r30, 0x7C	; 124
    1c54:	f0 e0       	ldi	r31, 0x00	; 0
    1c56:	80 83       	st	Z, r24
	ADMUX|=(1<<REFS0); //internal 5v ref
    1c58:	90 81       	ld	r25, Z
    1c5a:	90 64       	ori	r25, 0x40	; 64
    1c5c:	90 83       	st	Z, r25
	ADCSRA|=(1<<ADEN)|(1<<ADATE)|(1<<ADIE); //enable adc, enable autotrigger, enable interupt, start sample;
    1c5e:	ea e7       	ldi	r30, 0x7A	; 122
    1c60:	f0 e0       	ldi	r31, 0x00	; 0
    1c62:	90 81       	ld	r25, Z
    1c64:	98 6a       	ori	r25, 0xA8	; 168
    1c66:	90 83       	st	Z, r25
	ADCSRA|=(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0); //prescaling to get 125kH clock freq
    1c68:	90 81       	ld	r25, Z
    1c6a:	97 60       	ori	r25, 0x07	; 7
    1c6c:	90 83       	st	Z, r25
	ADCSRB|=(1<<ADTS2)|(1<<ADTS0); //setting timer 1 comp b as trigger
    1c6e:	eb e7       	ldi	r30, 0x7B	; 123
    1c70:	f0 e0       	ldi	r31, 0x00	; 0
    1c72:	90 81       	ld	r25, Z
    1c74:	95 60       	ori	r25, 0x05	; 5
    1c76:	90 83       	st	Z, r25
	DIDR0 = (1<<channel); //turning of the digital outputbuffers on all other channels
    1c78:	21 e0       	ldi	r18, 0x01	; 1
    1c7a:	30 e0       	ldi	r19, 0x00	; 0
    1c7c:	a9 01       	movw	r20, r18
    1c7e:	02 c0       	rjmp	.+4      	; 0x1c84 <initCTCB1ADC+0x32>
    1c80:	44 0f       	add	r20, r20
    1c82:	55 1f       	adc	r21, r21
    1c84:	8a 95       	dec	r24
    1c86:	e2 f7       	brpl	.-8      	; 0x1c80 <initCTCB1ADC+0x2e>
    1c88:	ee e7       	ldi	r30, 0x7E	; 126
    1c8a:	f0 e0       	ldi	r31, 0x00	; 0
    1c8c:	40 83       	st	Z, r20
	DIDR0 =~ DIDR0;
    1c8e:	80 81       	ld	r24, Z
    1c90:	80 95       	com	r24
    1c92:	80 83       	st	Z, r24
	DIDR2 =0xff;
    1c94:	8f ef       	ldi	r24, 0xFF	; 255
    1c96:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7c007d>
    1c9a:	08 95       	ret

Disassembly of section .text.enable_int2:

00001f8c <enable_int2>:

#include <avr/io.h>


void enable_int2() {
	EIMSK |= (1 << INT2);
    1f8c:	8d b3       	in	r24, 0x1d	; 29
    1f8e:	84 60       	ori	r24, 0x04	; 4
    1f90:	8d bb       	out	0x1d, r24	; 29
	PORTD |= 0x04;
    1f92:	8b b1       	in	r24, 0x0b	; 11
    1f94:	84 60       	ori	r24, 0x04	; 4
    1f96:	8b b9       	out	0x0b, r24	; 11
    1f98:	08 95       	ret

Disassembly of section .text.I2C_Init:

00001dde <I2C_Init>:
char I2C_Read_Nack()		/* I2C read nack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
	while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
	return TWDR;		/* Return received data */
}
    1dde:	81 b1       	in	r24, 0x01	; 1
    1de0:	81 60       	ori	r24, 0x01	; 1
    1de2:	81 b9       	out	0x01, r24	; 1
    1de4:	82 b1       	in	r24, 0x02	; 2
    1de6:	81 60       	ori	r24, 0x01	; 1
    1de8:	82 b9       	out	0x02, r24	; 2
    1dea:	2f ef       	ldi	r18, 0xFF	; 255
    1dec:	83 ed       	ldi	r24, 0xD3	; 211
    1dee:	90 e3       	ldi	r25, 0x30	; 48
    1df0:	21 50       	subi	r18, 0x01	; 1
    1df2:	80 40       	sbci	r24, 0x00	; 0
    1df4:	90 40       	sbci	r25, 0x00	; 0
    1df6:	e1 f7       	brne	.-8      	; 0x1df0 <I2C_Init+0x12>
    1df8:	00 c0       	rjmp	.+0      	; 0x1dfa <I2C_Init+0x1c>
    1dfa:	00 00       	nop
    1dfc:	82 e1       	ldi	r24, 0x12	; 18
    1dfe:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
    1e02:	e9 eb       	ldi	r30, 0xB9	; 185
    1e04:	f0 e0       	ldi	r31, 0x00	; 0
    1e06:	80 81       	ld	r24, Z
    1e08:	8c 7f       	andi	r24, 0xFC	; 252
    1e0a:	80 83       	st	Z, r24
    1e0c:	85 e0       	ldi	r24, 0x05	; 5
    1e0e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    1e12:	08 95       	ret

Disassembly of section .text.I2C_Start:

00001c9c <I2C_Start>:
    1c9c:	94 ea       	ldi	r25, 0xA4	; 164
    1c9e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    1ca2:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    1ca6:	99 23       	and	r25, r25
    1ca8:	e4 f7       	brge	.-8      	; 0x1ca2 <I2C_Start+0x6>
    1caa:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    1cae:	98 7f       	andi	r25, 0xF8	; 248
    1cb0:	98 30       	cpi	r25, 0x08	; 8
    1cb2:	91 f4       	brne	.+36     	; 0x1cd8 <I2C_Start+0x3c>
    1cb4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    1cb8:	84 e8       	ldi	r24, 0x84	; 132
    1cba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    1cbe:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    1cc2:	88 23       	and	r24, r24
    1cc4:	e4 f7       	brge	.-8      	; 0x1cbe <I2C_Start+0x22>
    1cc6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    1cca:	88 7f       	andi	r24, 0xF8	; 248
    1ccc:	88 31       	cpi	r24, 0x18	; 24
    1cce:	31 f0       	breq	.+12     	; 0x1cdc <I2C_Start+0x40>
    1cd0:	80 32       	cpi	r24, 0x20	; 32
    1cd2:	31 f4       	brne	.+12     	; 0x1ce0 <I2C_Start+0x44>
    1cd4:	82 e0       	ldi	r24, 0x02	; 2
    1cd6:	08 95       	ret
    1cd8:	80 e0       	ldi	r24, 0x00	; 0
    1cda:	08 95       	ret
    1cdc:	81 e0       	ldi	r24, 0x01	; 1
    1cde:	08 95       	ret
    1ce0:	83 e0       	ldi	r24, 0x03	; 3
    1ce2:	08 95       	ret

Disassembly of section .text.I2C_Write:

00001e14 <I2C_Write>:
    1e14:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
    1e18:	84 e8       	ldi	r24, 0x84	; 132
    1e1a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    1e1e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    1e22:	88 23       	and	r24, r24
    1e24:	e4 f7       	brge	.-8      	; 0x1e1e <I2C_Write+0xa>
    1e26:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
    1e2a:	88 7f       	andi	r24, 0xF8	; 248
    1e2c:	88 32       	cpi	r24, 0x28	; 40
    1e2e:	21 f0       	breq	.+8      	; 0x1e38 <I2C_Write+0x24>
    1e30:	80 33       	cpi	r24, 0x30	; 48
    1e32:	21 f4       	brne	.+8      	; 0x1e3c <I2C_Write+0x28>
    1e34:	81 e0       	ldi	r24, 0x01	; 1
    1e36:	08 95       	ret
    1e38:	80 e0       	ldi	r24, 0x00	; 0
    1e3a:	08 95       	ret
    1e3c:	82 e0       	ldi	r24, 0x02	; 2
    1e3e:	08 95       	ret

Disassembly of section .text.I2C_Stop:

00001f6c <I2C_Stop>:

void I2C_Stop()			/* I2C stop function */
{
	TWCR=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);/* Enable TWI, generate stop */
    1f6c:	84 e9       	ldi	r24, 0x94	; 148
    1f6e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
	while(TWCR&(1<<TWSTO));	/* Wait until stop condition execution */
    1f72:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    1f76:	84 fd       	sbrc	r24, 4
    1f78:	fc cf       	rjmp	.-8      	; 0x1f72 <I2C_Stop+0x6>
    1f7a:	08 95       	ret

Disassembly of section .text.__vector_18:

00001c06 <__vector_18>:
			state = idle;
		}
	}
}

ISR(TIMER1_COMPB_vect) {
    1c06:	1f 92       	push	r1
    1c08:	0f 92       	push	r0
    1c0a:	0f b6       	in	r0, 0x3f	; 63
    1c0c:	0f 92       	push	r0
    1c0e:	11 24       	eor	r1, r1
    1c10:	8f 93       	push	r24
    1c12:	9f 93       	push	r25
	static char sigCounter = 0;
	if (sigCounter == 4) {
    1c14:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <sigCounter.2233>
    1c18:	84 30       	cpi	r24, 0x04	; 4
    1c1a:	79 f4       	brne	.+30     	; 0x1c3a <__vector_18+0x34>
		PORTB^=(1<<PB6);
    1c1c:	95 b1       	in	r25, 0x05	; 5
    1c1e:	80 e4       	ldi	r24, 0x40	; 64
    1c20:	89 27       	eor	r24, r25
    1c22:	85 b9       	out	0x05, r24	; 5
		sigCounter = 0;
    1c24:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <sigCounter.2233>
		if(state == idle && ((PORTB)&(1<<PB6)) == 0b01000000) state = sampling;
    1c28:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    1c2c:	81 11       	cpse	r24, r1
    1c2e:	05 c0       	rjmp	.+10     	; 0x1c3a <__vector_18+0x34>
    1c30:	2e 9b       	sbis	0x05, 6	; 5
    1c32:	03 c0       	rjmp	.+6      	; 0x1c3a <__vector_18+0x34>
    1c34:	81 e0       	ldi	r24, 0x01	; 1
    1c36:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
	}
	sigCounter++;
    1c3a:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <sigCounter.2233>
    1c3e:	8f 5f       	subi	r24, 0xFF	; 255
    1c40:	80 93 8f 02 	sts	0x028F, r24	; 0x80028f <sigCounter.2233>
}
    1c44:	9f 91       	pop	r25
    1c46:	8f 91       	pop	r24
    1c48:	0f 90       	pop	r0
    1c4a:	0f be       	out	0x3f, r0	; 63
    1c4c:	0f 90       	pop	r0
    1c4e:	1f 90       	pop	r1
    1c50:	18 95       	reti

Disassembly of section .text.__vector_29:

000018b4 <__vector_29>:

ISR(ADC_vect) {
    18b4:	1f 92       	push	r1
    18b6:	0f 92       	push	r0
    18b8:	0f b6       	in	r0, 0x3f	; 63
    18ba:	0f 92       	push	r0
    18bc:	11 24       	eor	r1, r1
    18be:	0b b6       	in	r0, 0x3b	; 59
    18c0:	0f 92       	push	r0
    18c2:	2f 93       	push	r18
    18c4:	3f 93       	push	r19
    18c6:	8f 93       	push	r24
    18c8:	9f 93       	push	r25
    18ca:	ef 93       	push	r30
    18cc:	ff 93       	push	r31
	static int sampleIndex = 0;
	if(state == sampling) {
    18ce:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    18d2:	81 30       	cpi	r24, 0x01	; 1
    18d4:	21 f5       	brne	.+72     	; 0x191e <__vector_29+0x6a>
		int ADCval = 0;
		ADCval = ADCL + (ADCH<<8);
    18d6:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
    18da:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
    18de:	90 e0       	ldi	r25, 0x00	; 0
    18e0:	98 2f       	mov	r25, r24
    18e2:	88 27       	eor	r24, r24
    18e4:	82 0f       	add	r24, r18
    18e6:	91 1d       	adc	r25, r1
		samples[sampleIndex] = ADCval;
    18e8:	20 91 8d 02 	lds	r18, 0x028D	; 0x80028d <sampleIndex.2239>
    18ec:	30 91 8e 02 	lds	r19, 0x028E	; 0x80028e <sampleIndex.2239+0x1>
    18f0:	f9 01       	movw	r30, r18
    18f2:	ee 0f       	add	r30, r30
    18f4:	ff 1f       	adc	r31, r31
    18f6:	ef 5f       	subi	r30, 0xFF	; 255
    18f8:	fd 4f       	sbci	r31, 0xFD	; 253
    18fa:	91 83       	std	Z+1, r25	; 0x01
    18fc:	80 83       	st	Z, r24
		sampleIndex++;
    18fe:	c9 01       	movw	r24, r18
    1900:	01 96       	adiw	r24, 0x01	; 1
    1902:	90 93 8e 02 	sts	0x028E, r25	; 0x80028e <sampleIndex.2239+0x1>
    1906:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <sampleIndex.2239>
		if(sampleIndex == numberOfSamples) {
    190a:	80 34       	cpi	r24, 0x40	; 64
    190c:	91 05       	cpc	r25, r1
    190e:	39 f4       	brne	.+14     	; 0x191e <__vector_29+0x6a>
			sampleIndex = 0;
    1910:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <sampleIndex.2239+0x1>
    1914:	10 92 8d 02 	sts	0x028D, r1	; 0x80028d <sampleIndex.2239>
			state  = dft;
    1918:	82 e0       	ldi	r24, 0x02	; 2
    191a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
		}
	}
}
    191e:	ff 91       	pop	r31
    1920:	ef 91       	pop	r30
    1922:	9f 91       	pop	r25
    1924:	8f 91       	pop	r24
    1926:	3f 91       	pop	r19
    1928:	2f 91       	pop	r18
    192a:	0f 90       	pop	r0
    192c:	0b be       	out	0x3b, r0	; 59
    192e:	0f 90       	pop	r0
    1930:	0f be       	out	0x3f, r0	; 63
    1932:	0f 90       	pop	r0
    1934:	1f 90       	pop	r1
    1936:	18 95       	reti

Disassembly of section .text.__vector_3:

00001efa <__vector_3>:

ISR(INT2_vect) {
    1efa:	1f 92       	push	r1
    1efc:	0f 92       	push	r0
    1efe:	0f b6       	in	r0, 0x3f	; 63
    1f00:	0f 92       	push	r0
    1f02:	11 24       	eor	r1, r1
    1f04:	8f 93       	push	r24
	calibrate = 1;
    1f06:	81 e0       	ldi	r24, 0x01	; 1
    1f08:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <calibrate>
}
    1f0c:	8f 91       	pop	r24
    1f0e:	0f 90       	pop	r0
    1f10:	0f be       	out	0x3f, r0	; 63
    1f12:	0f 90       	pop	r0
    1f14:	1f 90       	pop	r1
    1f16:	18 95       	reti

Disassembly of section .text.init:

00001d68 <init>:

// function to initialize timer, ADC, display and I/O
void init() {
	initTimer1CTC(124,8);
    1d68:	68 e0       	ldi	r22, 0x08	; 8
    1d6a:	70 e0       	ldi	r23, 0x00	; 0
    1d6c:	8c e7       	ldi	r24, 0x7C	; 124
    1d6e:	90 e0       	ldi	r25, 0x00	; 0
    1d70:	0e 94 31 0b 	call	0x1662	; 0x1662 <initTimer1CTC>
	initCTCB1ADC(0);
    1d74:	80 e0       	ldi	r24, 0x00	; 0
    1d76:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <initCTCB1ADC>
	DDRB|=(1<<DDB6);
    1d7a:	84 b1       	in	r24, 0x04	; 4
    1d7c:	80 64       	ori	r24, 0x40	; 64
    1d7e:	84 b9       	out	0x04, r24	; 4
	PORTB|=(1<<PB6);
    1d80:	85 b1       	in	r24, 0x05	; 5
    1d82:	80 64       	ori	r24, 0x40	; 64
    1d84:	85 b9       	out	0x05, r24	; 5
	enable_int2();
    1d86:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <enable_int2>
	
	_i2c_address = 0X78; // write address for i2c interface
    1d8a:	88 e7       	ldi	r24, 0x78	; 120
    1d8c:	80 93 91 02 	sts	0x0291, r24	; 0x800291 <_i2c_address>
	I2C_Init();  //initialize i2c interface to display
    1d90:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <I2C_Init>
	InitializeDisplay(); //initialize  display
    1d94:	0e 94 83 0b 	call	0x1706	; 0x1706 <InitializeDisplay>
	clear_display();
    1d98:	0e 94 36 0f 	call	0x1e6c	; 0x1e6c <clear_display>
	dim(true);
    1d9c:	81 e0       	ldi	r24, 0x01	; 1
    1d9e:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <dim>
	
	sei();
    1da2:	78 94       	sei
    1da4:	08 95       	ret

Disassembly of section .text.showValues:

00001a94 <showValues>:
}

// function do display the calculated values on the display
void showValues(double value,char selector) {
    1a94:	df 92       	push	r13
    1a96:	ef 92       	push	r14
    1a98:	ff 92       	push	r15
    1a9a:	0f 93       	push	r16
    1a9c:	1f 93       	push	r17
    1a9e:	cf 93       	push	r28
    1aa0:	df 93       	push	r29
    1aa2:	cd b7       	in	r28, 0x3d	; 61
    1aa4:	de b7       	in	r29, 0x3e	; 62
    1aa6:	2a 97       	sbiw	r28, 0x0a	; 10
    1aa8:	0f b6       	in	r0, 0x3f	; 63
    1aaa:	f8 94       	cli
    1aac:	de bf       	out	0x3e, r29	; 62
    1aae:	0f be       	out	0x3f, r0	; 63
    1ab0:	cd bf       	out	0x3d, r28	; 61
    1ab2:	d4 2e       	mov	r13, r20
	char buffer[10] = {'\0'};
    1ab4:	9e 01       	movw	r18, r28
    1ab6:	2f 5f       	subi	r18, 0xFF	; 255
    1ab8:	3f 4f       	sbci	r19, 0xFF	; 255
    1aba:	79 01       	movw	r14, r18
    1abc:	2a e0       	ldi	r18, 0x0A	; 10
    1abe:	f7 01       	movw	r30, r14
    1ac0:	11 92       	st	Z+, r1
    1ac2:	2a 95       	dec	r18
    1ac4:	e9 f7       	brne	.-6      	; 0x1ac0 <showValues+0x2c>
	dtostrf(value,5,1,buffer);
    1ac6:	87 01       	movw	r16, r14
    1ac8:	21 e0       	ldi	r18, 0x01	; 1
    1aca:	45 e0       	ldi	r20, 0x05	; 5
    1acc:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <dtostrf>
	sendStrXY(buffer,selector,7);
    1ad0:	6d 2d       	mov	r22, r13
    1ad2:	70 e0       	ldi	r23, 0x00	; 0
    1ad4:	47 e0       	ldi	r20, 0x07	; 7
    1ad6:	50 e0       	ldi	r21, 0x00	; 0
    1ad8:	c7 01       	movw	r24, r14
    1ada:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <sendStrXY>
}
    1ade:	2a 96       	adiw	r28, 0x0a	; 10
    1ae0:	0f b6       	in	r0, 0x3f	; 63
    1ae2:	f8 94       	cli
    1ae4:	de bf       	out	0x3e, r29	; 62
    1ae6:	0f be       	out	0x3f, r0	; 63
    1ae8:	cd bf       	out	0x3d, r28	; 61
    1aea:	df 91       	pop	r29
    1aec:	cf 91       	pop	r28
    1aee:	1f 91       	pop	r17
    1af0:	0f 91       	pop	r16
    1af2:	ff 90       	pop	r15
    1af4:	ef 90       	pop	r14
    1af6:	df 90       	pop	r13
    1af8:	08 95       	ret

Disassembly of section .text.fourier:

00000f8c <fourier>:

// function to calculate the amp and phase
double * fourier(int * arr) {
     f8c:	4f 92       	push	r4
     f8e:	5f 92       	push	r5
     f90:	6f 92       	push	r6
     f92:	7f 92       	push	r7
     f94:	8f 92       	push	r8
     f96:	9f 92       	push	r9
     f98:	af 92       	push	r10
     f9a:	bf 92       	push	r11
     f9c:	cf 92       	push	r12
     f9e:	df 92       	push	r13
     fa0:	ef 92       	push	r14
     fa2:	ff 92       	push	r15
     fa4:	0f 93       	push	r16
     fa6:	1f 93       	push	r17
     fa8:	cf 93       	push	r28
     faa:	df 93       	push	r29
     fac:	cd b7       	in	r28, 0x3d	; 61
     fae:	de b7       	in	r29, 0x3e	; 62
     fb0:	2a 97       	sbiw	r28, 0x0a	; 10
     fb2:	0f b6       	in	r0, 0x3f	; 63
     fb4:	f8 94       	cli
     fb6:	de bf       	out	0x3e, r29	; 62
     fb8:	0f be       	out	0x3f, r0	; 63
     fba:	cd bf       	out	0x3d, r28	; 61
	char cosValues[5] = {1,0,-1,0};
     fbc:	25 e0       	ldi	r18, 0x05	; 5
     fbe:	fe 01       	movw	r30, r28
     fc0:	31 96       	adiw	r30, 0x01	; 1
     fc2:	df 01       	movw	r26, r30
     fc4:	82 2f       	mov	r24, r18
     fc6:	1d 92       	st	X+, r1
     fc8:	8a 95       	dec	r24
     fca:	e9 f7       	brne	.-6      	; 0xfc6 <fourier+0x3a>
     fcc:	91 e0       	ldi	r25, 0x01	; 1
     fce:	99 83       	std	Y+1, r25	; 0x01
     fd0:	8f ef       	ldi	r24, 0xFF	; 255
     fd2:	8b 83       	std	Y+3, r24	; 0x03
	char sinValues[5] = {0,1,0,-1};
     fd4:	35 96       	adiw	r30, 0x05	; 5
     fd6:	df 01       	movw	r26, r30
     fd8:	1d 92       	st	X+, r1
     fda:	2a 95       	dec	r18
     fdc:	e9 f7       	brne	.-6      	; 0xfd8 <fourier+0x4c>
     fde:	9f 83       	std	Y+7, r25	; 0x07
     fe0:	89 87       	std	Y+9, r24	; 0x09
	double amp = 0;
	double phase = 0;
	double realPart = 0;
	double imaginaryPart = 0;
	static double result[3] = {'\0'};
	for(int n=0; n<numberOfSamples; n++) {
     fe2:	e1 2c       	mov	r14, r1
     fe4:	f1 2c       	mov	r15, r1
	char sinValues[5] = {0,1,0,-1};
	int i = 0;
	double amp = 0;
	double phase = 0;
	double realPart = 0;
	double imaginaryPart = 0;
     fe6:	81 2c       	mov	r8, r1
     fe8:	91 2c       	mov	r9, r1
     fea:	54 01       	movw	r10, r8
	char cosValues[5] = {1,0,-1,0};
	char sinValues[5] = {0,1,0,-1};
	int i = 0;
	double amp = 0;
	double phase = 0;
	double realPart = 0;
     fec:	24 01       	movw	r4, r8
     fee:	35 01       	movw	r6, r10

// function to calculate the amp and phase
double * fourier(int * arr) {
	char cosValues[5] = {1,0,-1,0};
	char sinValues[5] = {0,1,0,-1};
	int i = 0;
     ff0:	00 e0       	ldi	r16, 0x00	; 0
     ff2:	10 e0       	ldi	r17, 0x00	; 0
	double amp = 0;
	double phase = 0;
	double realPart = 0;
	double imaginaryPart = 0;
	static double result[3] = {'\0'};
	for(int n=0; n<numberOfSamples; n++) {
     ff4:	45 c0       	rjmp	.+138    	; 0x1080 <__EEPROM_REGION_LENGTH__+0x80>
		realPart += samples[n]*cosValues[i];
     ff6:	f7 01       	movw	r30, r14
     ff8:	ee 0f       	add	r30, r30
     ffa:	ff 1f       	adc	r31, r31
     ffc:	ef 5f       	subi	r30, 0xFF	; 255
     ffe:	fd 4f       	sbci	r31, 0xFD	; 253
    1000:	c0 80       	ld	r12, Z
    1002:	d1 80       	ldd	r13, Z+1	; 0x01
    1004:	e1 e0       	ldi	r30, 0x01	; 1
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	ec 0f       	add	r30, r28
    100a:	fd 1f       	adc	r31, r29
    100c:	e0 0f       	add	r30, r16
    100e:	f1 1f       	adc	r31, r17
    1010:	80 81       	ld	r24, Z
    1012:	8c 9d       	mul	r24, r12
    1014:	b0 01       	movw	r22, r0
    1016:	8d 9d       	mul	r24, r13
    1018:	70 0d       	add	r23, r0
    101a:	11 24       	eor	r1, r1
    101c:	07 2e       	mov	r0, r23
    101e:	00 0c       	add	r0, r0
    1020:	88 0b       	sbc	r24, r24
    1022:	99 0b       	sbc	r25, r25
    1024:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatsisf>
    1028:	9b 01       	movw	r18, r22
    102a:	ac 01       	movw	r20, r24
    102c:	c3 01       	movw	r24, r6
    102e:	b2 01       	movw	r22, r4
    1030:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <__addsf3>
    1034:	2b 01       	movw	r4, r22
    1036:	3c 01       	movw	r6, r24
		imaginaryPart -= samples[n]*sinValues[i];
    1038:	e6 e0       	ldi	r30, 0x06	; 6
    103a:	f0 e0       	ldi	r31, 0x00	; 0
    103c:	ec 0f       	add	r30, r28
    103e:	fd 1f       	adc	r31, r29
    1040:	e0 0f       	add	r30, r16
    1042:	f1 1f       	adc	r31, r17
    1044:	80 81       	ld	r24, Z
    1046:	8c 9d       	mul	r24, r12
    1048:	b0 01       	movw	r22, r0
    104a:	8d 9d       	mul	r24, r13
    104c:	70 0d       	add	r23, r0
    104e:	11 24       	eor	r1, r1
    1050:	07 2e       	mov	r0, r23
    1052:	00 0c       	add	r0, r0
    1054:	88 0b       	sbc	r24, r24
    1056:	99 0b       	sbc	r25, r25
    1058:	0e 94 9e 0c 	call	0x193c	; 0x193c <__floatsisf>
    105c:	9b 01       	movw	r18, r22
    105e:	ac 01       	movw	r20, r24
    1060:	c5 01       	movw	r24, r10
    1062:	b4 01       	movw	r22, r8
    1064:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__subsf3>
    1068:	4b 01       	movw	r8, r22
    106a:	5c 01       	movw	r10, r24
		i++;
    106c:	0f 5f       	subi	r16, 0xFF	; 255
    106e:	1f 4f       	sbci	r17, 0xFF	; 255
		if(i == 4) i = 0;
    1070:	04 30       	cpi	r16, 0x04	; 4
    1072:	11 05       	cpc	r17, r1
    1074:	11 f4       	brne	.+4      	; 0x107a <__EEPROM_REGION_LENGTH__+0x7a>
    1076:	00 e0       	ldi	r16, 0x00	; 0
    1078:	10 e0       	ldi	r17, 0x00	; 0
	double amp = 0;
	double phase = 0;
	double realPart = 0;
	double imaginaryPart = 0;
	static double result[3] = {'\0'};
	for(int n=0; n<numberOfSamples; n++) {
    107a:	bf ef       	ldi	r27, 0xFF	; 255
    107c:	eb 1a       	sub	r14, r27
    107e:	fb 0a       	sbc	r15, r27
    1080:	80 e4       	ldi	r24, 0x40	; 64
    1082:	e8 16       	cp	r14, r24
    1084:	f1 04       	cpc	r15, r1
    1086:	0c f4       	brge	.+2      	; 0x108a <__EEPROM_REGION_LENGTH__+0x8a>
    1088:	b6 cf       	rjmp	.-148    	; 0xff6 <fourier+0x6a>
		realPart += samples[n]*cosValues[i];
		imaginaryPart -= samples[n]*sinValues[i];
		i++;
		if(i == 4) i = 0;
	}
	realPart = (realPart*5)/1024;
    108a:	20 e0       	ldi	r18, 0x00	; 0
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	40 ea       	ldi	r20, 0xA0	; 160
    1090:	50 e4       	ldi	r21, 0x40	; 64
    1092:	c3 01       	movw	r24, r6
    1094:	b2 01       	movw	r22, r4
    1096:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
    109a:	20 e0       	ldi	r18, 0x00	; 0
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	40 e8       	ldi	r20, 0x80	; 128
    10a0:	5a e3       	ldi	r21, 0x3A	; 58
    10a2:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
    10a6:	2b 01       	movw	r4, r22
    10a8:	3c 01       	movw	r6, r24
	imaginaryPart = (imaginaryPart*5)/1024;
    10aa:	20 e0       	ldi	r18, 0x00	; 0
    10ac:	30 e0       	ldi	r19, 0x00	; 0
    10ae:	40 ea       	ldi	r20, 0xA0	; 160
    10b0:	50 e4       	ldi	r21, 0x40	; 64
    10b2:	c5 01       	movw	r24, r10
    10b4:	b4 01       	movw	r22, r8
    10b6:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
    10ba:	20 e0       	ldi	r18, 0x00	; 0
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	40 e8       	ldi	r20, 0x80	; 128
    10c0:	5a e3       	ldi	r21, 0x3A	; 58
    10c2:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
    10c6:	6b 01       	movw	r12, r22
    10c8:	7c 01       	movw	r14, r24
	amp = sqrt(realPart*realPart+imaginaryPart*imaginaryPart);
    10ca:	a3 01       	movw	r20, r6
    10cc:	92 01       	movw	r18, r4
    10ce:	c3 01       	movw	r24, r6
    10d0:	b2 01       	movw	r22, r4
    10d2:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
    10d6:	4b 01       	movw	r8, r22
    10d8:	5c 01       	movw	r10, r24
    10da:	a7 01       	movw	r20, r14
    10dc:	96 01       	movw	r18, r12
    10de:	c7 01       	movw	r24, r14
    10e0:	b6 01       	movw	r22, r12
    10e2:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
    10e6:	9b 01       	movw	r18, r22
    10e8:	ac 01       	movw	r20, r24
    10ea:	c5 01       	movw	r24, r10
    10ec:	b4 01       	movw	r22, r8
    10ee:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <__addsf3>
    10f2:	0e 94 cf 0b 	call	0x179e	; 0x179e <sqrt>
    10f6:	4b 01       	movw	r8, r22
    10f8:	5c 01       	movw	r10, r24
	phase = atan2(imaginaryPart,realPart)*180/M_PI;
    10fa:	a3 01       	movw	r20, r6
    10fc:	92 01       	movw	r18, r4
    10fe:	c7 01       	movw	r24, r14
    1100:	b6 01       	movw	r22, r12
    1102:	0e 94 16 0c 	call	0x182c	; 0x182c <atan2>
    1106:	20 e0       	ldi	r18, 0x00	; 0
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	44 e3       	ldi	r20, 0x34	; 52
    110c:	53 e4       	ldi	r21, 0x43	; 67
    110e:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
    1112:	2b ed       	ldi	r18, 0xDB	; 219
    1114:	3f e0       	ldi	r19, 0x0F	; 15
    1116:	49 e4       	ldi	r20, 0x49	; 73
    1118:	50 e4       	ldi	r21, 0x40	; 64
    111a:	0e 94 fd 0f 	call	0x1ffa	; 0x1ffa <__divsf3>
    111e:	6b 01       	movw	r12, r22
    1120:	7c 01       	movw	r14, r24
	amp = amp/(numberOfSamples/2);
    1122:	20 e0       	ldi	r18, 0x00	; 0
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	40 e0       	ldi	r20, 0x00	; 0
    1128:	5d e3       	ldi	r21, 0x3D	; 61
    112a:	c5 01       	movw	r24, r10
    112c:	b4 01       	movw	r22, r8
    112e:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
	result[0] = amp;
    1132:	e1 e8       	ldi	r30, 0x81	; 129
    1134:	f2 e0       	ldi	r31, 0x02	; 2
    1136:	60 83       	st	Z, r22
    1138:	71 83       	std	Z+1, r23	; 0x01
    113a:	82 83       	std	Z+2, r24	; 0x02
    113c:	93 83       	std	Z+3, r25	; 0x03
	result[1] = phase;
    113e:	c4 82       	std	Z+4, r12	; 0x04
    1140:	d5 82       	std	Z+5, r13	; 0x05
    1142:	e6 82       	std	Z+6, r14	; 0x06
    1144:	f7 82       	std	Z+7, r15	; 0x07
	
	return result;
}
    1146:	cf 01       	movw	r24, r30
    1148:	2a 96       	adiw	r28, 0x0a	; 10
    114a:	0f b6       	in	r0, 0x3f	; 63
    114c:	f8 94       	cli
    114e:	de bf       	out	0x3e, r29	; 62
    1150:	0f be       	out	0x3f, r0	; 63
    1152:	cd bf       	out	0x3d, r28	; 61
    1154:	df 91       	pop	r29
    1156:	cf 91       	pop	r28
    1158:	1f 91       	pop	r17
    115a:	0f 91       	pop	r16
    115c:	ff 90       	pop	r15
    115e:	ef 90       	pop	r14
    1160:	df 90       	pop	r13
    1162:	cf 90       	pop	r12
    1164:	bf 90       	pop	r11
    1166:	af 90       	pop	r10
    1168:	9f 90       	pop	r9
    116a:	8f 90       	pop	r8
    116c:	7f 90       	pop	r7
    116e:	6f 90       	pop	r6
    1170:	5f 90       	pop	r5
    1172:	4f 90       	pop	r4
    1174:	08 95       	ret

Disassembly of section .text.main:

00000cce <main>:
volatile char state;
volatile char calibrate = 0;

enum state {idle, sampling, dft};

int main(void) {
 cce:	cf 93       	push	r28
 cd0:	df 93       	push	r29
 cd2:	cd b7       	in	r28, 0x3d	; 61
 cd4:	de b7       	in	r29, 0x3e	; 62
 cd6:	c7 57       	subi	r28, 0x77	; 119
 cd8:	d1 09       	sbc	r29, r1
 cda:	0f b6       	in	r0, 0x3f	; 63
 cdc:	f8 94       	cli
 cde:	de bf       	out	0x3e, r29	; 62
 ce0:	0f be       	out	0x3f, r0	; 63
 ce2:	cd bf       	out	0x3d, r28	; 61
	char ampText[5] = "Amp:";
 ce4:	23 e8       	ldi	r18, 0x83	; 131
 ce6:	35 e0       	ldi	r19, 0x05	; 5
 ce8:	40 e0       	ldi	r20, 0x00	; 0
 cea:	85 e0       	ldi	r24, 0x05	; 5
 cec:	f9 01       	movw	r30, r18
 cee:	de 01       	movw	r26, r28
 cf0:	11 96       	adiw	r26, 0x01	; 1
 cf2:	74 2f       	mov	r23, r20
 cf4:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__movmemx_qi>
	char phaseText[7] = "Phase:";
 cf8:	28 e8       	ldi	r18, 0x88	; 136
 cfa:	35 e0       	ldi	r19, 0x05	; 5
 cfc:	40 e0       	ldi	r20, 0x00	; 0
 cfe:	87 e0       	ldi	r24, 0x07	; 7
 d00:	f9 01       	movw	r30, r18
 d02:	de 01       	movw	r26, r28
 d04:	16 96       	adiw	r26, 0x06	; 6
 d06:	74 2f       	mov	r23, r20
 d08:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__movmemx_qi>
	double accAmp = 0;
	double accPhase = 0;
	double refAmp = 0;
	double refPhase = 0;
	
	init();
 d0c:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <init>
	
	char testBuffer[100] = {'\0'};
 d10:	fe 01       	movw	r30, r28
 d12:	3d 96       	adiw	r30, 0x0d	; 13
 d14:	84 e6       	ldi	r24, 0x64	; 100
 d16:	df 01       	movw	r26, r30
 d18:	1d 92       	st	X+, r1
 d1a:	8a 95       	dec	r24
 d1c:	e9 f7       	brne	.-6      	; 0xd18 <main+0x4a>
	
	sendStrXY(ampText,0,0);
 d1e:	40 e0       	ldi	r20, 0x00	; 0
 d20:	50 e0       	ldi	r21, 0x00	; 0
 d22:	60 e0       	ldi	r22, 0x00	; 0
 d24:	70 e0       	ldi	r23, 0x00	; 0
 d26:	ce 01       	movw	r24, r28
 d28:	01 96       	adiw	r24, 0x01	; 1
 d2a:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <sendStrXY>
	sendStrXY(phaseText,1,0);
 d2e:	40 e0       	ldi	r20, 0x00	; 0
 d30:	50 e0       	ldi	r21, 0x00	; 0
 d32:	61 e0       	ldi	r22, 0x01	; 1
 d34:	70 e0       	ldi	r23, 0x00	; 0
 d36:	ce 01       	movw	r24, r28
 d38:	06 96       	adiw	r24, 0x06	; 6
 d3a:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <sendStrXY>
	char ampText[5] = "Amp:";
	char phaseText[7] = "Phase:";
	double accAmp = 0;
	double accPhase = 0;
	double refAmp = 0;
	double refPhase = 0;
 d3e:	21 2c       	mov	r2, r1
 d40:	e6 96       	adiw	r28, 0x36	; 54
 d42:	1f ae       	std	Y+63, r1	; 0x3f
 d44:	e6 97       	sbiw	r28, 0x36	; 54
 d46:	e7 96       	adiw	r28, 0x37	; 55
 d48:	1f ae       	std	Y+63, r1	; 0x3f
 d4a:	e7 97       	sbiw	r28, 0x37	; 55
 d4c:	e8 96       	adiw	r28, 0x38	; 56
 d4e:	1f ae       	std	Y+63, r1	; 0x3f
 d50:	e8 97       	sbiw	r28, 0x38	; 56
int main(void) {
	char ampText[5] = "Amp:";
	char phaseText[7] = "Phase:";
	double accAmp = 0;
	double accPhase = 0;
	double refAmp = 0;
 d52:	e2 96       	adiw	r28, 0x32	; 50
 d54:	1f ae       	std	Y+63, r1	; 0x3f
 d56:	e2 97       	sbiw	r28, 0x32	; 50
 d58:	e3 96       	adiw	r28, 0x33	; 51
 d5a:	1f ae       	std	Y+63, r1	; 0x3f
 d5c:	e3 97       	sbiw	r28, 0x33	; 51
 d5e:	e4 96       	adiw	r28, 0x34	; 52
 d60:	1f ae       	std	Y+63, r1	; 0x3f
 d62:	e4 97       	sbiw	r28, 0x34	; 52
 d64:	e5 96       	adiw	r28, 0x35	; 53
 d66:	1f ae       	std	Y+63, r1	; 0x3f
 d68:	e5 97       	sbiw	r28, 0x35	; 53

int main(void) {
	char ampText[5] = "Amp:";
	char phaseText[7] = "Phase:";
	double accAmp = 0;
	double accPhase = 0;
 d6a:	00 e0       	ldi	r16, 0x00	; 0
 d6c:	10 e0       	ldi	r17, 0x00	; 0
 d6e:	f1 2c       	mov	r15, r1
 d70:	e1 2c       	mov	r14, r1
enum state {idle, sampling, dft};

int main(void) {
	char ampText[5] = "Amp:";
	char phaseText[7] = "Phase:";
	double accAmp = 0;
 d72:	d1 2c       	mov	r13, r1
 d74:	c1 2c       	mov	r12, r1
 d76:	71 2c       	mov	r7, r1
 d78:	31 2c       	mov	r3, r1
	
	sendStrXY(ampText,0,0);
	sendStrXY(phaseText,1,0);
	
	while(1) {
		if(state == dft) {
 d7a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 d7e:	82 30       	cpi	r24, 0x02	; 2
 d80:	e1 f7       	brne	.-8      	; 0xd7a <main+0xac>
			accAmp = 0.9*accAmp+0.1*(fourier(samples)[0]-refAmp);
 d82:	26 e6       	ldi	r18, 0x66	; 102
 d84:	36 e6       	ldi	r19, 0x66	; 102
 d86:	46 e6       	ldi	r20, 0x66	; 102
 d88:	5f e3       	ldi	r21, 0x3F	; 63
 d8a:	6d 2d       	mov	r22, r13
 d8c:	7c 2d       	mov	r23, r12
 d8e:	87 2d       	mov	r24, r7
 d90:	93 2d       	mov	r25, r3
 d92:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
 d96:	4b 01       	movw	r8, r22
 d98:	5c 01       	movw	r10, r24
 d9a:	81 e0       	ldi	r24, 0x01	; 1
 d9c:	92 e0       	ldi	r25, 0x02	; 2
 d9e:	0e 94 c6 07 	call	0xf8c	; 0xf8c <fourier>
 da2:	fc 01       	movw	r30, r24
 da4:	60 81       	ld	r22, Z
 da6:	71 81       	ldd	r23, Z+1	; 0x01
 da8:	82 81       	ldd	r24, Z+2	; 0x02
 daa:	93 81       	ldd	r25, Z+3	; 0x03
 dac:	e2 96       	adiw	r28, 0x32	; 50
 dae:	2f ad       	ldd	r18, Y+63	; 0x3f
 db0:	e2 97       	sbiw	r28, 0x32	; 50
 db2:	e3 96       	adiw	r28, 0x33	; 51
 db4:	3f ad       	ldd	r19, Y+63	; 0x3f
 db6:	e3 97       	sbiw	r28, 0x33	; 51
 db8:	e4 96       	adiw	r28, 0x34	; 52
 dba:	4f ad       	ldd	r20, Y+63	; 0x3f
 dbc:	e4 97       	sbiw	r28, 0x34	; 52
 dbe:	e5 96       	adiw	r28, 0x35	; 53
 dc0:	5f ad       	ldd	r21, Y+63	; 0x3f
 dc2:	e5 97       	sbiw	r28, 0x35	; 53
 dc4:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__subsf3>
 dc8:	2d ec       	ldi	r18, 0xCD	; 205
 dca:	3c ec       	ldi	r19, 0xCC	; 204
 dcc:	4c ec       	ldi	r20, 0xCC	; 204
 dce:	5d e3       	ldi	r21, 0x3D	; 61
 dd0:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
 dd4:	9b 01       	movw	r18, r22
 dd6:	ac 01       	movw	r20, r24
 dd8:	c5 01       	movw	r24, r10
 dda:	b4 01       	movw	r22, r8
 ddc:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <__addsf3>
 de0:	d6 2e       	mov	r13, r22
 de2:	c7 2e       	mov	r12, r23
 de4:	78 2e       	mov	r7, r24
 de6:	39 2e       	mov	r3, r25
			accPhase = 0.9*accPhase+0.1*(fourier(samples)[1]-refPhase);
 de8:	26 e6       	ldi	r18, 0x66	; 102
 dea:	36 e6       	ldi	r19, 0x66	; 102
 dec:	46 e6       	ldi	r20, 0x66	; 102
 dee:	5f e3       	ldi	r21, 0x3F	; 63
 df0:	60 2f       	mov	r22, r16
 df2:	71 2f       	mov	r23, r17
 df4:	8f 2d       	mov	r24, r15
 df6:	9e 2d       	mov	r25, r14
 df8:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
 dfc:	4b 01       	movw	r8, r22
 dfe:	5c 01       	movw	r10, r24
 e00:	81 e0       	ldi	r24, 0x01	; 1
 e02:	92 e0       	ldi	r25, 0x02	; 2
 e04:	0e 94 c6 07 	call	0xf8c	; 0xf8c <fourier>
 e08:	dc 01       	movw	r26, r24
 e0a:	14 96       	adiw	r26, 0x04	; 4
 e0c:	6d 91       	ld	r22, X+
 e0e:	7d 91       	ld	r23, X+
 e10:	8d 91       	ld	r24, X+
 e12:	9c 91       	ld	r25, X
 e14:	17 97       	sbiw	r26, 0x07	; 7
 e16:	22 2d       	mov	r18, r2
 e18:	e6 96       	adiw	r28, 0x36	; 54
 e1a:	3f ad       	ldd	r19, Y+63	; 0x3f
 e1c:	e6 97       	sbiw	r28, 0x36	; 54
 e1e:	e7 96       	adiw	r28, 0x37	; 55
 e20:	4f ad       	ldd	r20, Y+63	; 0x3f
 e22:	e7 97       	sbiw	r28, 0x37	; 55
 e24:	e8 96       	adiw	r28, 0x38	; 56
 e26:	5f ad       	ldd	r21, Y+63	; 0x3f
 e28:	e8 97       	sbiw	r28, 0x38	; 56
 e2a:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__subsf3>
 e2e:	2d ec       	ldi	r18, 0xCD	; 205
 e30:	3c ec       	ldi	r19, 0xCC	; 204
 e32:	4c ec       	ldi	r20, 0xCC	; 204
 e34:	5d e3       	ldi	r21, 0x3D	; 61
 e36:	0e 94 01 10 	call	0x2002	; 0x2002 <__mulsf3>
 e3a:	9b 01       	movw	r18, r22
 e3c:	ac 01       	movw	r20, r24
 e3e:	c5 01       	movw	r24, r10
 e40:	b4 01       	movw	r22, r8
 e42:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <__addsf3>
 e46:	06 2f       	mov	r16, r22
 e48:	17 2f       	mov	r17, r23
 e4a:	f8 2e       	mov	r15, r24
 e4c:	e9 2e       	mov	r14, r25
			
			showValues(accAmp,0);
 e4e:	40 e0       	ldi	r20, 0x00	; 0
 e50:	6d 2d       	mov	r22, r13
 e52:	7c 2d       	mov	r23, r12
 e54:	87 2d       	mov	r24, r7
 e56:	93 2d       	mov	r25, r3
 e58:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <showValues>
			showValues(accPhase,1);
 e5c:	41 e0       	ldi	r20, 0x01	; 1
 e5e:	60 2f       	mov	r22, r16
 e60:	71 2f       	mov	r23, r17
 e62:	8f 2d       	mov	r24, r15
 e64:	9e 2d       	mov	r25, r14
 e66:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <showValues>
			if(calibrate == 1) {
 e6a:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <calibrate>
 e6e:	81 30       	cpi	r24, 0x01	; 1
 e70:	c1 f4       	brne	.+48     	; 0xea2 <main+0x1d4>
				calibrate = 0;
 e72:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <calibrate>
				refAmp = accAmp;
				refPhase = accPhase;
 e76:	20 2e       	mov	r2, r16
 e78:	e6 96       	adiw	r28, 0x36	; 54
 e7a:	1f af       	std	Y+63, r17	; 0x3f
 e7c:	e6 97       	sbiw	r28, 0x36	; 54
 e7e:	e7 96       	adiw	r28, 0x37	; 55
 e80:	ff ae       	std	Y+63, r15	; 0x3f
 e82:	e7 97       	sbiw	r28, 0x37	; 55
 e84:	e8 96       	adiw	r28, 0x38	; 56
 e86:	ef ae       	std	Y+63, r14	; 0x3f
 e88:	e8 97       	sbiw	r28, 0x38	; 56
			
			showValues(accAmp,0);
			showValues(accPhase,1);
			if(calibrate == 1) {
				calibrate = 0;
				refAmp = accAmp;
 e8a:	e2 96       	adiw	r28, 0x32	; 50
 e8c:	df ae       	std	Y+63, r13	; 0x3f
 e8e:	e2 97       	sbiw	r28, 0x32	; 50
 e90:	e3 96       	adiw	r28, 0x33	; 51
 e92:	cf ae       	std	Y+63, r12	; 0x3f
 e94:	e3 97       	sbiw	r28, 0x33	; 51
 e96:	e4 96       	adiw	r28, 0x34	; 52
 e98:	7f ae       	std	Y+63, r7	; 0x3f
 e9a:	e4 97       	sbiw	r28, 0x34	; 52
 e9c:	e5 96       	adiw	r28, 0x35	; 53
 e9e:	3f ae       	std	Y+63, r3	; 0x3f
 ea0:	e5 97       	sbiw	r28, 0x35	; 53
				refPhase = accPhase;
			}
			sprintf(testBuffer,"%d %d %d",samples[0],samples[1],samples[2]);
 ea2:	0f 2e       	mov	r0, r31
 ea4:	f1 e0       	ldi	r31, 0x01	; 1
 ea6:	af 2e       	mov	r10, r31
 ea8:	f2 e0       	ldi	r31, 0x02	; 2
 eaa:	bf 2e       	mov	r11, r31
 eac:	f0 2d       	mov	r31, r0
 eae:	f5 01       	movw	r30, r10
 eb0:	85 81       	ldd	r24, Z+5	; 0x05
 eb2:	8f 93       	push	r24
 eb4:	84 81       	ldd	r24, Z+4	; 0x04
 eb6:	8f 93       	push	r24
 eb8:	83 81       	ldd	r24, Z+3	; 0x03
 eba:	8f 93       	push	r24
 ebc:	82 81       	ldd	r24, Z+2	; 0x02
 ebe:	8f 93       	push	r24
 ec0:	81 81       	ldd	r24, Z+1	; 0x01
 ec2:	8f 93       	push	r24
 ec4:	80 81       	ld	r24, Z
 ec6:	8f 93       	push	r24
 ec8:	0f 2e       	mov	r0, r31
 eca:	f4 e7       	ldi	r31, 0x74	; 116
 ecc:	4f 2e       	mov	r4, r31
 ece:	f5 e0       	ldi	r31, 0x05	; 5
 ed0:	5f 2e       	mov	r5, r31
 ed2:	f0 e0       	ldi	r31, 0x00	; 0
 ed4:	6f 2e       	mov	r6, r31
 ed6:	f0 2d       	mov	r31, r0
 ed8:	6f 92       	push	r6
 eda:	5f 92       	push	r5
 edc:	4f 92       	push	r4
 ede:	4e 01       	movw	r8, r28
 ee0:	fd e0       	ldi	r31, 0x0D	; 13
 ee2:	8f 0e       	add	r8, r31
 ee4:	91 1c       	adc	r9, r1
 ee6:	9f 92       	push	r9
 ee8:	8f 92       	push	r8
 eea:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <sprintf>
			sendStrXY(testBuffer,3,0);
 eee:	40 e0       	ldi	r20, 0x00	; 0
 ef0:	50 e0       	ldi	r21, 0x00	; 0
 ef2:	63 e0       	ldi	r22, 0x03	; 3
 ef4:	70 e0       	ldi	r23, 0x00	; 0
 ef6:	c4 01       	movw	r24, r8
 ef8:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <sendStrXY>
			sprintf(testBuffer,"%d %d %d",samples[3],samples[4],samples[5]);
 efc:	d5 01       	movw	r26, r10
 efe:	1b 96       	adiw	r26, 0x0b	; 11
 f00:	8c 91       	ld	r24, X
 f02:	1b 97       	sbiw	r26, 0x0b	; 11
 f04:	8f 93       	push	r24
 f06:	1a 96       	adiw	r26, 0x0a	; 10
 f08:	8c 91       	ld	r24, X
 f0a:	1a 97       	sbiw	r26, 0x0a	; 10
 f0c:	8f 93       	push	r24
 f0e:	19 96       	adiw	r26, 0x09	; 9
 f10:	8c 91       	ld	r24, X
 f12:	19 97       	sbiw	r26, 0x09	; 9
 f14:	8f 93       	push	r24
 f16:	18 96       	adiw	r26, 0x08	; 8
 f18:	8c 91       	ld	r24, X
 f1a:	18 97       	sbiw	r26, 0x08	; 8
 f1c:	8f 93       	push	r24
 f1e:	17 96       	adiw	r26, 0x07	; 7
 f20:	8c 91       	ld	r24, X
 f22:	17 97       	sbiw	r26, 0x07	; 7
 f24:	8f 93       	push	r24
 f26:	16 96       	adiw	r26, 0x06	; 6
 f28:	8c 91       	ld	r24, X
 f2a:	8f 93       	push	r24
 f2c:	6f 92       	push	r6
 f2e:	5f 92       	push	r5
 f30:	4f 92       	push	r4
 f32:	9f 92       	push	r9
 f34:	8f 92       	push	r8
 f36:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <sprintf>
			sendStrXY(testBuffer,4,0);
 f3a:	40 e0       	ldi	r20, 0x00	; 0
 f3c:	50 e0       	ldi	r21, 0x00	; 0
 f3e:	64 e0       	ldi	r22, 0x04	; 4
 f40:	70 e0       	ldi	r23, 0x00	; 0
 f42:	c4 01       	movw	r24, r8
 f44:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <sendStrXY>
			sprintf(testBuffer,"%d %d",samples[6],samples[7]);
 f48:	f5 01       	movw	r30, r10
 f4a:	87 85       	ldd	r24, Z+15	; 0x0f
 f4c:	8f 93       	push	r24
 f4e:	86 85       	ldd	r24, Z+14	; 0x0e
 f50:	8f 93       	push	r24
 f52:	85 85       	ldd	r24, Z+13	; 0x0d
 f54:	8f 93       	push	r24
 f56:	84 85       	ldd	r24, Z+12	; 0x0c
 f58:	8f 93       	push	r24
 f5a:	8d e7       	ldi	r24, 0x7D	; 125
 f5c:	95 e0       	ldi	r25, 0x05	; 5
 f5e:	a0 e0       	ldi	r26, 0x00	; 0
 f60:	af 93       	push	r26
 f62:	9f 93       	push	r25
 f64:	8f 93       	push	r24
 f66:	9f 92       	push	r9
 f68:	8f 92       	push	r8
 f6a:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <sprintf>
			sendStrXY(testBuffer,5,0);
 f6e:	40 e0       	ldi	r20, 0x00	; 0
 f70:	50 e0       	ldi	r21, 0x00	; 0
 f72:	65 e0       	ldi	r22, 0x05	; 5
 f74:	70 e0       	ldi	r23, 0x00	; 0
 f76:	c4 01       	movw	r24, r8
 f78:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <sendStrXY>
			state = idle;
 f7c:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
 f80:	0f b6       	in	r0, 0x3f	; 63
 f82:	f8 94       	cli
 f84:	de bf       	out	0x3e, r29	; 62
 f86:	0f be       	out	0x3f, r0	; 63
 f88:	cd bf       	out	0x3d, r28	; 61
 f8a:	f7 ce       	rjmp	.-530    	; 0xd7a <main+0xac>

Disassembly of section .text.ssd1306_command:

00001eba <ssd1306_command>:
	ssd1306_command(stop);
	ssd1306_command(0X01);
	ssd1306_command(SSD1306_ACTIVATE_SCROLL);
}
void stopscroll(void){
	ssd1306_command(SSD1306_DEACTIVATE_SCROLL);
    1eba:	cf 93       	push	r28
    1ebc:	c8 2f       	mov	r28, r24
    1ebe:	80 91 91 02 	lds	r24, 0x0291	; 0x800291 <_i2c_address>
    1ec2:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <I2C_Start>
    1ec6:	80 e0       	ldi	r24, 0x00	; 0
    1ec8:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <I2C_Write>
    1ecc:	8c 2f       	mov	r24, r28
    1ece:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <I2C_Write>
    1ed2:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <I2C_Stop>
    1ed6:	cf 91       	pop	r28
    1ed8:	08 95       	ret

Disassembly of section .text.InitializeDisplay:

00001706 <InitializeDisplay>:
    1706:	8e ea       	ldi	r24, 0xAE	; 174
    1708:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    170c:	85 ed       	ldi	r24, 0xD5	; 213
    170e:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1712:	80 e8       	ldi	r24, 0x80	; 128
    1714:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1718:	88 ea       	ldi	r24, 0xA8	; 168
    171a:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    171e:	8f e3       	ldi	r24, 0x3F	; 63
    1720:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1724:	83 ed       	ldi	r24, 0xD3	; 211
    1726:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    172a:	80 e0       	ldi	r24, 0x00	; 0
    172c:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1730:	80 e4       	ldi	r24, 0x40	; 64
    1732:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1736:	8d e8       	ldi	r24, 0x8D	; 141
    1738:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    173c:	84 e1       	ldi	r24, 0x14	; 20
    173e:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1742:	80 e2       	ldi	r24, 0x20	; 32
    1744:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1748:	80 e0       	ldi	r24, 0x00	; 0
    174a:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    174e:	81 ea       	ldi	r24, 0xA1	; 161
    1750:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1754:	88 ec       	ldi	r24, 0xC8	; 200
    1756:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    175a:	8a ed       	ldi	r24, 0xDA	; 218
    175c:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1760:	82 e1       	ldi	r24, 0x12	; 18
    1762:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1766:	81 e8       	ldi	r24, 0x81	; 129
    1768:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    176c:	8f ec       	ldi	r24, 0xCF	; 207
    176e:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1772:	89 ed       	ldi	r24, 0xD9	; 217
    1774:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1778:	81 ef       	ldi	r24, 0xF1	; 241
    177a:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    177e:	8b ed       	ldi	r24, 0xDB	; 219
    1780:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1784:	80 e4       	ldi	r24, 0x40	; 64
    1786:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    178a:	84 ea       	ldi	r24, 0xA4	; 164
    178c:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1790:	86 ea       	ldi	r24, 0xA6	; 166
    1792:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1796:	8f ea       	ldi	r24, 0xAF	; 175
    1798:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    179c:	08 95       	ret

Disassembly of section .text.SendChar:

00001eda <SendChar>:
    1eda:	cf 93       	push	r28
    1edc:	c8 2f       	mov	r28, r24
    1ede:	80 91 91 02 	lds	r24, 0x0291	; 0x800291 <_i2c_address>
    1ee2:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <I2C_Start>
    1ee6:	80 e4       	ldi	r24, 0x40	; 64
    1ee8:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <I2C_Write>
    1eec:	8c 2f       	mov	r24, r28
    1eee:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <I2C_Write>
    1ef2:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <I2C_Stop>
    1ef6:	cf 91       	pop	r28
    1ef8:	08 95       	ret

Disassembly of section .text.setXY:

00001e40 <setXY>:
    1e40:	cf 93       	push	r28
    1e42:	c6 2f       	mov	r28, r22
    1e44:	80 55       	subi	r24, 0x50	; 80
    1e46:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1e4a:	8c 2f       	mov	r24, r28
    1e4c:	88 0f       	add	r24, r24
    1e4e:	88 0f       	add	r24, r24
    1e50:	88 0f       	add	r24, r24
    1e52:	88 70       	andi	r24, 0x08	; 8
    1e54:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1e58:	8c 2f       	mov	r24, r28
    1e5a:	90 e0       	ldi	r25, 0x00	; 0
    1e5c:	96 95       	lsr	r25
    1e5e:	87 95       	ror	r24
    1e60:	8f 70       	andi	r24, 0x0F	; 15
    1e62:	80 5f       	subi	r24, 0xF0	; 240
    1e64:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1e68:	cf 91       	pop	r28
    1e6a:	08 95       	ret

Disassembly of section .text.clear_display:

00001e6c <clear_display>:
    1e6c:	cf 93       	push	r28
    1e6e:	df 93       	push	r29
    1e70:	d0 e0       	ldi	r29, 0x00	; 0
    1e72:	0d c0       	rjmp	.+26     	; 0x1e8e <clear_display+0x22>
    1e74:	60 e0       	ldi	r22, 0x00	; 0
    1e76:	8d 2f       	mov	r24, r29
    1e78:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <setXY>
    1e7c:	c0 e0       	ldi	r28, 0x00	; 0
    1e7e:	04 c0       	rjmp	.+8      	; 0x1e88 <clear_display+0x1c>
    1e80:	80 e0       	ldi	r24, 0x00	; 0
    1e82:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <SendChar>
    1e86:	cf 5f       	subi	r28, 0xFF	; 255
    1e88:	cc 23       	and	r28, r28
    1e8a:	d4 f7       	brge	.-12     	; 0x1e80 <clear_display+0x14>
    1e8c:	df 5f       	subi	r29, 0xFF	; 255
    1e8e:	d8 30       	cpi	r29, 0x08	; 8
    1e90:	88 f3       	brcs	.-30     	; 0x1e74 <clear_display+0x8>
    1e92:	df 91       	pop	r29
    1e94:	cf 91       	pop	r28
    1e96:	08 95       	ret

Disassembly of section .text.sendStrXY:

00001a2a <sendStrXY>:
    1a2a:	0f 93       	push	r16
    1a2c:	1f 93       	push	r17
    1a2e:	cf 93       	push	r28
    1a30:	df 93       	push	r29
    1a32:	ec 01       	movw	r28, r24
    1a34:	86 2f       	mov	r24, r22
    1a36:	06 2f       	mov	r16, r22
    1a38:	64 2f       	mov	r22, r20
    1a3a:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <setXY>
    1a3e:	22 c0       	rjmp	.+68     	; 0x1a84 <sendStrXY+0x5a>
    1a40:	8a 30       	cpi	r24, 0x0A	; 10
    1a42:	31 f4       	brne	.+12     	; 0x1a50 <sendStrXY+0x26>
    1a44:	60 e0       	ldi	r22, 0x00	; 0
    1a46:	81 e0       	ldi	r24, 0x01	; 1
    1a48:	80 0f       	add	r24, r16
    1a4a:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <setXY>
    1a4e:	21 96       	adiw	r28, 0x01	; 1
    1a50:	10 e0       	ldi	r17, 0x00	; 0
    1a52:	15 c0       	rjmp	.+42     	; 0x1a7e <sendStrXY+0x54>
    1a54:	88 81       	ld	r24, Y
    1a56:	90 e0       	ldi	r25, 0x00	; 0
    1a58:	80 97       	sbiw	r24, 0x20	; 32
    1a5a:	88 0f       	add	r24, r24
    1a5c:	99 1f       	adc	r25, r25
    1a5e:	88 0f       	add	r24, r24
    1a60:	99 1f       	adc	r25, r25
    1a62:	88 0f       	add	r24, r24
    1a64:	99 1f       	adc	r25, r25
    1a66:	a0 e0       	ldi	r26, 0x00	; 0
    1a68:	8c 58       	subi	r24, 0x8C	; 140
    1a6a:	9d 4f       	sbci	r25, 0xFD	; 253
    1a6c:	af 4f       	sbci	r26, 0xFF	; 255
    1a6e:	81 0f       	add	r24, r17
    1a70:	91 1d       	adc	r25, r1
    1a72:	a1 1d       	adc	r26, r1
    1a74:	fc 01       	movw	r30, r24
    1a76:	84 91       	lpm	r24, Z
    1a78:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <SendChar>
    1a7c:	1f 5f       	subi	r17, 0xFF	; 255
    1a7e:	18 30       	cpi	r17, 0x08	; 8
    1a80:	48 f3       	brcs	.-46     	; 0x1a54 <sendStrXY+0x2a>
    1a82:	21 96       	adiw	r28, 0x01	; 1
    1a84:	88 81       	ld	r24, Y
    1a86:	81 11       	cpse	r24, r1
    1a88:	db cf       	rjmp	.-74     	; 0x1a40 <sendStrXY+0x16>
    1a8a:	df 91       	pop	r29
    1a8c:	cf 91       	pop	r28
    1a8e:	1f 91       	pop	r17
    1a90:	0f 91       	pop	r16
    1a92:	08 95       	ret

Disassembly of section .text.dim:

00001f18 <dim>:
}

// Dim the display
// dim = true: display is dimmed
// dim = false: display is normal
void dim(bool dim) {
    1f18:	cf 93       	push	r28
	uint8_t contrast;

	if (dim) {
    1f1a:	88 23       	and	r24, r24
    1f1c:	11 f0       	breq	.+4      	; 0x1f22 <dim+0xa>
		contrast = 0; // Dimmed display
    1f1e:	c0 e0       	ldi	r28, 0x00	; 0
    1f20:	01 c0       	rjmp	.+2      	; 0x1f24 <dim+0xc>
		} else {
		if (_vccstate == SSD1306_EXTERNALVCC) {
			contrast = 0x9F;
    1f22:	cf e9       	ldi	r28, 0x9F	; 159
			contrast = 0xCF;
		}
	}
	// the range of contrast to too small to be really useful
	// it is useful to dim the display
	ssd1306_command(SSD1306_SETCONTRAST);
    1f24:	81 e8       	ldi	r24, 0x81	; 129
    1f26:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
	ssd1306_command(contrast);
    1f2a:	8c 2f       	mov	r24, r28
    1f2c:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <ssd1306_command>
    1f30:	cf 91       	pop	r28
    1f32:	08 95       	ret

Disassembly of section .text.initTimer1CTC:

00001662 <initTimer1CTC>:
 * Created: 25-03-2021 14:22:37
 * Author : sebas
 */ 

#include <avr/io.h>
void initTimer1CTC(unsigned int compareValue, unsigned int prescaleValue) {
    1662:	9c 01       	movw	r18, r24
	//set prescale value
	switch (prescaleValue) {
    1664:	68 30       	cpi	r22, 0x08	; 8
    1666:	71 05       	cpc	r23, r1
    1668:	f9 f0       	breq	.+62     	; 0x16a8 <initTimer1CTC+0x46>
    166a:	38 f4       	brcc	.+14     	; 0x167a <initTimer1CTC+0x18>
    166c:	61 15       	cp	r22, r1
    166e:	71 05       	cpc	r23, r1
    1670:	81 f0       	breq	.+32     	; 0x1692 <initTimer1CTC+0x30>
    1672:	61 30       	cpi	r22, 0x01	; 1
    1674:	71 05       	cpc	r23, r1
    1676:	91 f0       	breq	.+36     	; 0x169c <initTimer1CTC+0x3a>
    1678:	2f c0       	rjmp	.+94     	; 0x16d8 <initTimer1CTC+0x76>
    167a:	61 15       	cp	r22, r1
    167c:	81 e0       	ldi	r24, 0x01	; 1
    167e:	78 07       	cpc	r23, r24
    1680:	f9 f0       	breq	.+62     	; 0x16c0 <initTimer1CTC+0x5e>
    1682:	61 15       	cp	r22, r1
    1684:	84 e0       	ldi	r24, 0x04	; 4
    1686:	78 07       	cpc	r23, r24
    1688:	09 f1       	breq	.+66     	; 0x16cc <initTimer1CTC+0x6a>
    168a:	60 34       	cpi	r22, 0x40	; 64
    168c:	71 05       	cpc	r23, r1
    168e:	21 f5       	brne	.+72     	; 0x16d8 <initTimer1CTC+0x76>
    1690:	11 c0       	rjmp	.+34     	; 0x16b4 <initTimer1CTC+0x52>
		case 0:
			TCCR1B |=(0<<CS12)|(0<<CS11)|(0<<CS10);
    1692:	e1 e8       	ldi	r30, 0x81	; 129
    1694:	f0 e0       	ldi	r31, 0x00	; 0
    1696:	80 81       	ld	r24, Z
    1698:	80 83       	st	Z, r24
			break;
    169a:	22 c0       	rjmp	.+68     	; 0x16e0 <initTimer1CTC+0x7e>
		case 1:
			TCCR1B |=(0<<CS12)|(0<<CS11)|(1<<CS10);
    169c:	e1 e8       	ldi	r30, 0x81	; 129
    169e:	f0 e0       	ldi	r31, 0x00	; 0
    16a0:	80 81       	ld	r24, Z
    16a2:	81 60       	ori	r24, 0x01	; 1
    16a4:	80 83       	st	Z, r24
			break;
    16a6:	1c c0       	rjmp	.+56     	; 0x16e0 <initTimer1CTC+0x7e>
		case 8:
			TCCR1B |=(0<<CS12)|(1<<CS11)|(0<<CS10);
    16a8:	e1 e8       	ldi	r30, 0x81	; 129
    16aa:	f0 e0       	ldi	r31, 0x00	; 0
    16ac:	80 81       	ld	r24, Z
    16ae:	82 60       	ori	r24, 0x02	; 2
    16b0:	80 83       	st	Z, r24
			break;
    16b2:	16 c0       	rjmp	.+44     	; 0x16e0 <initTimer1CTC+0x7e>
		case 64:
			TCCR1B |=(0<<CS12)|(1<<CS11)|(1<<CS10);
    16b4:	e1 e8       	ldi	r30, 0x81	; 129
    16b6:	f0 e0       	ldi	r31, 0x00	; 0
    16b8:	80 81       	ld	r24, Z
    16ba:	83 60       	ori	r24, 0x03	; 3
    16bc:	80 83       	st	Z, r24
			break;
    16be:	10 c0       	rjmp	.+32     	; 0x16e0 <initTimer1CTC+0x7e>
		case 256:
			TCCR1B |=(1<<CS12)|(0<<CS11)|(0<<CS10);
    16c0:	e1 e8       	ldi	r30, 0x81	; 129
    16c2:	f0 e0       	ldi	r31, 0x00	; 0
    16c4:	80 81       	ld	r24, Z
    16c6:	84 60       	ori	r24, 0x04	; 4
    16c8:	80 83       	st	Z, r24
			break;
    16ca:	0a c0       	rjmp	.+20     	; 0x16e0 <initTimer1CTC+0x7e>
		case 1024:
			TCCR1B |=(1<<CS12)|(0<<CS11)|(1<<CS10);
    16cc:	e1 e8       	ldi	r30, 0x81	; 129
    16ce:	f0 e0       	ldi	r31, 0x00	; 0
    16d0:	80 81       	ld	r24, Z
    16d2:	85 60       	ori	r24, 0x05	; 5
    16d4:	80 83       	st	Z, r24
			break;
    16d6:	04 c0       	rjmp	.+8      	; 0x16e0 <initTimer1CTC+0x7e>
		default:
			TCCR1B |=(0<<CS12)|(0<<CS11)|(0<<CS10);
    16d8:	e1 e8       	ldi	r30, 0x81	; 129
    16da:	f0 e0       	ldi	r31, 0x00	; 0
    16dc:	80 81       	ld	r24, Z
    16de:	80 83       	st	Z, r24
			break;
			
	}
	TCCR1B |=(1<<WGM12); //CTC mode
    16e0:	e1 e8       	ldi	r30, 0x81	; 129
    16e2:	f0 e0       	ldi	r31, 0x00	; 0
    16e4:	90 81       	ld	r25, Z
    16e6:	98 60       	ori	r25, 0x08	; 8
    16e8:	90 83       	st	Z, r25
	OCR1A =compareValue;
    16ea:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    16ee:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
	OCR1B = compareValue;
    16f2:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
    16f6:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
	TIMSK1 |=(1<<OCIE0B); //interupt enable
    16fa:	ef e6       	ldi	r30, 0x6F	; 111
    16fc:	f0 e0       	ldi	r31, 0x00	; 0
    16fe:	80 81       	ld	r24, Z
    1700:	84 60       	ori	r24, 0x04	; 4
    1702:	80 83       	st	Z, r24
    1704:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f9a <__subsf3>:
    1f9a:	50 58       	subi	r21, 0x80	; 128

00001f9c <__addsf3>:
    1f9c:	bb 27       	eor	r27, r27
    1f9e:	aa 27       	eor	r26, r26
    1fa0:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <__addsf3x>
    1fa4:	0c 94 4c 0f 	jmp	0x1e98	; 0x1e98 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

000014d8 <__addsf3x>:
    14d8:	11 c0       	rjmp	.+34     	; 0x14fc <__addsf3x+0x24>
    14da:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <__fp_pscA>
    14de:	38 f0       	brcs	.+14     	; 0x14ee <__addsf3x+0x16>
    14e0:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <__fp_pscB>
    14e4:	20 f0       	brcs	.+8      	; 0x14ee <__addsf3x+0x16>
    14e6:	39 f4       	brne	.+14     	; 0x14f6 <__addsf3x+0x1e>
    14e8:	9f 3f       	cpi	r25, 0xFF	; 255
    14ea:	19 f4       	brne	.+6      	; 0x14f2 <__addsf3x+0x1a>
    14ec:	26 f4       	brtc	.+8      	; 0x14f6 <__addsf3x+0x1e>
    14ee:	0c 94 09 10 	jmp	0x2012	; 0x2012 <__fp_nan>
    14f2:	0e f4       	brtc	.+2      	; 0x14f6 <__addsf3x+0x1e>
    14f4:	e0 95       	com	r30
    14f6:	e7 fb       	bst	r30, 7
    14f8:	0c 94 f7 0f 	jmp	0x1fee	; 0x1fee <__fp_inf>
    14fc:	e9 2f       	mov	r30, r25
    14fe:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__fp_split3>
    1502:	58 f3       	brcs	.-42     	; 0x14da <__addsf3x+0x2>
    1504:	ba 17       	cp	r27, r26
    1506:	62 07       	cpc	r22, r18
    1508:	73 07       	cpc	r23, r19
    150a:	84 07       	cpc	r24, r20
    150c:	95 07       	cpc	r25, r21
    150e:	20 f0       	brcs	.+8      	; 0x1518 <__addsf3x+0x40>
    1510:	79 f4       	brne	.+30     	; 0x1530 <__addsf3x+0x58>
    1512:	a6 f5       	brtc	.+104    	; 0x157c <__addsf3x+0xa4>
    1514:	0c 94 e2 0f 	jmp	0x1fc4	; 0x1fc4 <__fp_zero>
    1518:	0e f4       	brtc	.+2      	; 0x151c <__addsf3x+0x44>
    151a:	e0 95       	com	r30
    151c:	0b 2e       	mov	r0, r27
    151e:	ba 2f       	mov	r27, r26
    1520:	a0 2d       	mov	r26, r0
    1522:	0b 01       	movw	r0, r22
    1524:	b9 01       	movw	r22, r18
    1526:	90 01       	movw	r18, r0
    1528:	0c 01       	movw	r0, r24
    152a:	ca 01       	movw	r24, r20
    152c:	a0 01       	movw	r20, r0
    152e:	11 24       	eor	r1, r1
    1530:	ff 27       	eor	r31, r31
    1532:	59 1b       	sub	r21, r25
    1534:	99 f0       	breq	.+38     	; 0x155c <__addsf3x+0x84>
    1536:	59 3f       	cpi	r21, 0xF9	; 249
    1538:	50 f4       	brcc	.+20     	; 0x154e <__addsf3x+0x76>
    153a:	50 3e       	cpi	r21, 0xE0	; 224
    153c:	68 f1       	brcs	.+90     	; 0x1598 <__addsf3x+0xc0>
    153e:	1a 16       	cp	r1, r26
    1540:	f0 40       	sbci	r31, 0x00	; 0
    1542:	a2 2f       	mov	r26, r18
    1544:	23 2f       	mov	r18, r19
    1546:	34 2f       	mov	r19, r20
    1548:	44 27       	eor	r20, r20
    154a:	58 5f       	subi	r21, 0xF8	; 248
    154c:	f3 cf       	rjmp	.-26     	; 0x1534 <__addsf3x+0x5c>
    154e:	46 95       	lsr	r20
    1550:	37 95       	ror	r19
    1552:	27 95       	ror	r18
    1554:	a7 95       	ror	r26
    1556:	f0 40       	sbci	r31, 0x00	; 0
    1558:	53 95       	inc	r21
    155a:	c9 f7       	brne	.-14     	; 0x154e <__addsf3x+0x76>
    155c:	7e f4       	brtc	.+30     	; 0x157c <__addsf3x+0xa4>
    155e:	1f 16       	cp	r1, r31
    1560:	ba 0b       	sbc	r27, r26
    1562:	62 0b       	sbc	r22, r18
    1564:	73 0b       	sbc	r23, r19
    1566:	84 0b       	sbc	r24, r20
    1568:	ba f0       	brmi	.+46     	; 0x1598 <__addsf3x+0xc0>
    156a:	91 50       	subi	r25, 0x01	; 1
    156c:	a1 f0       	breq	.+40     	; 0x1596 <__addsf3x+0xbe>
    156e:	ff 0f       	add	r31, r31
    1570:	bb 1f       	adc	r27, r27
    1572:	66 1f       	adc	r22, r22
    1574:	77 1f       	adc	r23, r23
    1576:	88 1f       	adc	r24, r24
    1578:	c2 f7       	brpl	.-16     	; 0x156a <__addsf3x+0x92>
    157a:	0e c0       	rjmp	.+28     	; 0x1598 <__addsf3x+0xc0>
    157c:	ba 0f       	add	r27, r26
    157e:	62 1f       	adc	r22, r18
    1580:	73 1f       	adc	r23, r19
    1582:	84 1f       	adc	r24, r20
    1584:	48 f4       	brcc	.+18     	; 0x1598 <__addsf3x+0xc0>
    1586:	87 95       	ror	r24
    1588:	77 95       	ror	r23
    158a:	67 95       	ror	r22
    158c:	b7 95       	ror	r27
    158e:	f7 95       	ror	r31
    1590:	9e 3f       	cpi	r25, 0xFE	; 254
    1592:	08 f0       	brcs	.+2      	; 0x1596 <__addsf3x+0xbe>
    1594:	b0 cf       	rjmp	.-160    	; 0x14f6 <__addsf3x+0x1e>
    1596:	93 95       	inc	r25
    1598:	88 0f       	add	r24, r24
    159a:	08 f0       	brcs	.+2      	; 0x159e <__addsf3x+0xc6>
    159c:	99 27       	eor	r25, r25
    159e:	ee 0f       	add	r30, r30
    15a0:	97 95       	ror	r25
    15a2:	87 95       	ror	r24
    15a4:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000182c <atan2>:
    182c:	13 c0       	rjmp	.+38     	; 0x1854 <atan2+0x28>
    182e:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <__fp_pscA>
    1832:	60 f0       	brcs	.+24     	; 0x184c <atan2+0x20>
    1834:	80 e8       	ldi	r24, 0x80	; 128
    1836:	91 e0       	ldi	r25, 0x01	; 1
    1838:	09 f4       	brne	.+2      	; 0x183c <atan2+0x10>
    183a:	9e ef       	ldi	r25, 0xFE	; 254
    183c:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <__fp_pscB>
    1840:	28 f0       	brcs	.+10     	; 0x184c <atan2+0x20>
    1842:	40 e8       	ldi	r20, 0x80	; 128
    1844:	51 e0       	ldi	r21, 0x01	; 1
    1846:	71 f4       	brne	.+28     	; 0x1864 <atan2+0x38>
    1848:	5e ef       	ldi	r21, 0xFE	; 254
    184a:	0c c0       	rjmp	.+24     	; 0x1864 <atan2+0x38>
    184c:	0c 94 09 10 	jmp	0x2012	; 0x2012 <__fp_nan>
    1850:	0c 94 e2 0f 	jmp	0x1fc4	; 0x1fc4 <__fp_zero>
    1854:	e9 2f       	mov	r30, r25
    1856:	e0 78       	andi	r30, 0x80	; 128
    1858:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__fp_split3>
    185c:	40 f3       	brcs	.-48     	; 0x182e <atan2+0x2>
    185e:	09 2e       	mov	r0, r25
    1860:	05 2a       	or	r0, r21
    1862:	b1 f3       	breq	.-20     	; 0x1850 <atan2+0x24>
    1864:	26 17       	cp	r18, r22
    1866:	37 07       	cpc	r19, r23
    1868:	48 07       	cpc	r20, r24
    186a:	59 07       	cpc	r21, r25
    186c:	38 f0       	brcs	.+14     	; 0x187c <atan2+0x50>
    186e:	0e 2e       	mov	r0, r30
    1870:	07 f8       	bld	r0, 7
    1872:	e0 25       	eor	r30, r0
    1874:	69 f0       	breq	.+26     	; 0x1890 <atan2+0x64>
    1876:	e0 25       	eor	r30, r0
    1878:	e0 64       	ori	r30, 0x40	; 64
    187a:	0a c0       	rjmp	.+20     	; 0x1890 <atan2+0x64>
    187c:	ef 63       	ori	r30, 0x3F	; 63
    187e:	07 f8       	bld	r0, 7
    1880:	00 94       	com	r0
    1882:	07 fa       	bst	r0, 7
    1884:	db 01       	movw	r26, r22
    1886:	b9 01       	movw	r22, r18
    1888:	9d 01       	movw	r18, r26
    188a:	dc 01       	movw	r26, r24
    188c:	ca 01       	movw	r24, r20
    188e:	ad 01       	movw	r20, r26
    1890:	ef 93       	push	r30
    1892:	0e 94 a7 09 	call	0x134e	; 0x134e <__divsf3_pse>
    1896:	0e 94 4c 0f 	call	0x1e98	; 0x1e98 <__fp_round>
    189a:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <atan>
    189e:	5f 91       	pop	r21
    18a0:	55 23       	and	r21, r21
    18a2:	39 f0       	breq	.+14     	; 0x18b2 <atan2+0x86>
    18a4:	2b ed       	ldi	r18, 0xDB	; 219
    18a6:	3f e0       	ldi	r19, 0x0F	; 15
    18a8:	49 e4       	ldi	r20, 0x49	; 73
    18aa:	50 fd       	sbrc	r21, 0
    18ac:	49 ec       	ldi	r20, 0xC9	; 201
    18ae:	0c 94 ce 0f 	jmp	0x1f9c	; 0x1f9c <__addsf3>
    18b2:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001b5a <atan>:
    1b5a:	df 93       	push	r29
    1b5c:	dd 27       	eor	r29, r29
    1b5e:	b9 2f       	mov	r27, r25
    1b60:	bf 77       	andi	r27, 0x7F	; 127
    1b62:	40 e8       	ldi	r20, 0x80	; 128
    1b64:	5f e3       	ldi	r21, 0x3F	; 63
    1b66:	16 16       	cp	r1, r22
    1b68:	17 06       	cpc	r1, r23
    1b6a:	48 07       	cpc	r20, r24
    1b6c:	5b 07       	cpc	r21, r27
    1b6e:	18 f4       	brcc	.+6      	; 0x1b76 <atan+0x1c>
    1b70:	d9 2f       	mov	r29, r25
    1b72:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <inverse>
    1b76:	9f 93       	push	r25
    1b78:	8f 93       	push	r24
    1b7a:	7f 93       	push	r23
    1b7c:	6f 93       	push	r22
    1b7e:	0e 94 05 10 	call	0x200a	; 0x200a <square>
    1b82:	e4 ee       	ldi	r30, 0xE4	; 228
    1b84:	f0 e0       	ldi	r31, 0x00	; 0
    1b86:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <__fp_powser>
    1b8a:	0e 94 4c 0f 	call	0x1e98	; 0x1e98 <__fp_round>
    1b8e:	2f 91       	pop	r18
    1b90:	3f 91       	pop	r19
    1b92:	4f 91       	pop	r20
    1b94:	5f 91       	pop	r21
    1b96:	0e 94 02 0a 	call	0x1404	; 0x1404 <__mulsf3x>
    1b9a:	dd 23       	and	r29, r29
    1b9c:	51 f0       	breq	.+20     	; 0x1bb2 <atan+0x58>
    1b9e:	90 58       	subi	r25, 0x80	; 128
    1ba0:	a2 ea       	ldi	r26, 0xA2	; 162
    1ba2:	2a ed       	ldi	r18, 0xDA	; 218
    1ba4:	3f e0       	ldi	r19, 0x0F	; 15
    1ba6:	49 ec       	ldi	r20, 0xC9	; 201
    1ba8:	5f e3       	ldi	r21, 0x3F	; 63
    1baa:	d0 78       	andi	r29, 0x80	; 128
    1bac:	5d 27       	eor	r21, r29
    1bae:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <__addsf3x>
    1bb2:	df 91       	pop	r29
    1bb4:	0c 94 4c 0f 	jmp	0x1e98	; 0x1e98 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001ffa <__divsf3>:
    1ffa:	0e 94 93 09 	call	0x1326	; 0x1326 <__divsf3x>
    1ffe:	0c 94 4c 0f 	jmp	0x1e98	; 0x1e98 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001326 <__divsf3x>:
    1326:	10 c0       	rjmp	.+32     	; 0x1348 <__divsf3x+0x22>
    1328:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <__fp_pscB>
    132c:	58 f0       	brcs	.+22     	; 0x1344 <__divsf3x+0x1e>
    132e:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <__fp_pscA>
    1332:	40 f0       	brcs	.+16     	; 0x1344 <__divsf3x+0x1e>
    1334:	29 f4       	brne	.+10     	; 0x1340 <__divsf3x+0x1a>
    1336:	5f 3f       	cpi	r21, 0xFF	; 255
    1338:	29 f0       	breq	.+10     	; 0x1344 <__divsf3x+0x1e>
    133a:	0c 94 f7 0f 	jmp	0x1fee	; 0x1fee <__fp_inf>
    133e:	51 11       	cpse	r21, r1
    1340:	0c 94 e3 0f 	jmp	0x1fc6	; 0x1fc6 <__fp_szero>
    1344:	0c 94 09 10 	jmp	0x2012	; 0x2012 <__fp_nan>
    1348:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__fp_split3>
    134c:	68 f3       	brcs	.-38     	; 0x1328 <__divsf3x+0x2>

0000134e <__divsf3_pse>:
    134e:	99 23       	and	r25, r25
    1350:	b1 f3       	breq	.-20     	; 0x133e <__divsf3x+0x18>
    1352:	55 23       	and	r21, r21
    1354:	91 f3       	breq	.-28     	; 0x133a <__divsf3x+0x14>
    1356:	95 1b       	sub	r25, r21
    1358:	55 0b       	sbc	r21, r21
    135a:	bb 27       	eor	r27, r27
    135c:	aa 27       	eor	r26, r26
    135e:	62 17       	cp	r22, r18
    1360:	73 07       	cpc	r23, r19
    1362:	84 07       	cpc	r24, r20
    1364:	38 f0       	brcs	.+14     	; 0x1374 <__divsf3_pse+0x26>
    1366:	9f 5f       	subi	r25, 0xFF	; 255
    1368:	5f 4f       	sbci	r21, 0xFF	; 255
    136a:	22 0f       	add	r18, r18
    136c:	33 1f       	adc	r19, r19
    136e:	44 1f       	adc	r20, r20
    1370:	aa 1f       	adc	r26, r26
    1372:	a9 f3       	breq	.-22     	; 0x135e <__divsf3_pse+0x10>
    1374:	35 d0       	rcall	.+106    	; 0x13e0 <__divsf3_pse+0x92>
    1376:	0e 2e       	mov	r0, r30
    1378:	3a f0       	brmi	.+14     	; 0x1388 <__divsf3_pse+0x3a>
    137a:	e0 e8       	ldi	r30, 0x80	; 128
    137c:	32 d0       	rcall	.+100    	; 0x13e2 <__divsf3_pse+0x94>
    137e:	91 50       	subi	r25, 0x01	; 1
    1380:	50 40       	sbci	r21, 0x00	; 0
    1382:	e6 95       	lsr	r30
    1384:	00 1c       	adc	r0, r0
    1386:	ca f7       	brpl	.-14     	; 0x137a <__divsf3_pse+0x2c>
    1388:	2b d0       	rcall	.+86     	; 0x13e0 <__divsf3_pse+0x92>
    138a:	fe 2f       	mov	r31, r30
    138c:	29 d0       	rcall	.+82     	; 0x13e0 <__divsf3_pse+0x92>
    138e:	66 0f       	add	r22, r22
    1390:	77 1f       	adc	r23, r23
    1392:	88 1f       	adc	r24, r24
    1394:	bb 1f       	adc	r27, r27
    1396:	26 17       	cp	r18, r22
    1398:	37 07       	cpc	r19, r23
    139a:	48 07       	cpc	r20, r24
    139c:	ab 07       	cpc	r26, r27
    139e:	b0 e8       	ldi	r27, 0x80	; 128
    13a0:	09 f0       	breq	.+2      	; 0x13a4 <__divsf3_pse+0x56>
    13a2:	bb 0b       	sbc	r27, r27
    13a4:	80 2d       	mov	r24, r0
    13a6:	bf 01       	movw	r22, r30
    13a8:	ff 27       	eor	r31, r31
    13aa:	93 58       	subi	r25, 0x83	; 131
    13ac:	5f 4f       	sbci	r21, 0xFF	; 255
    13ae:	3a f0       	brmi	.+14     	; 0x13be <__divsf3_pse+0x70>
    13b0:	9e 3f       	cpi	r25, 0xFE	; 254
    13b2:	51 05       	cpc	r21, r1
    13b4:	78 f0       	brcs	.+30     	; 0x13d4 <__divsf3_pse+0x86>
    13b6:	0c 94 f7 0f 	jmp	0x1fee	; 0x1fee <__fp_inf>
    13ba:	0c 94 e3 0f 	jmp	0x1fc6	; 0x1fc6 <__fp_szero>
    13be:	5f 3f       	cpi	r21, 0xFF	; 255
    13c0:	e4 f3       	brlt	.-8      	; 0x13ba <__divsf3_pse+0x6c>
    13c2:	98 3e       	cpi	r25, 0xE8	; 232
    13c4:	d4 f3       	brlt	.-12     	; 0x13ba <__divsf3_pse+0x6c>
    13c6:	86 95       	lsr	r24
    13c8:	77 95       	ror	r23
    13ca:	67 95       	ror	r22
    13cc:	b7 95       	ror	r27
    13ce:	f7 95       	ror	r31
    13d0:	9f 5f       	subi	r25, 0xFF	; 255
    13d2:	c9 f7       	brne	.-14     	; 0x13c6 <__divsf3_pse+0x78>
    13d4:	88 0f       	add	r24, r24
    13d6:	91 1d       	adc	r25, r1
    13d8:	96 95       	lsr	r25
    13da:	87 95       	ror	r24
    13dc:	97 f9       	bld	r25, 7
    13de:	08 95       	ret
    13e0:	e1 e0       	ldi	r30, 0x01	; 1
    13e2:	66 0f       	add	r22, r22
    13e4:	77 1f       	adc	r23, r23
    13e6:	88 1f       	adc	r24, r24
    13e8:	bb 1f       	adc	r27, r27
    13ea:	62 17       	cp	r22, r18
    13ec:	73 07       	cpc	r23, r19
    13ee:	84 07       	cpc	r24, r20
    13f0:	ba 07       	cpc	r27, r26
    13f2:	20 f0       	brcs	.+8      	; 0x13fc <__divsf3_pse+0xae>
    13f4:	62 1b       	sub	r22, r18
    13f6:	73 0b       	sbc	r23, r19
    13f8:	84 0b       	sbc	r24, r20
    13fa:	ba 0b       	sbc	r27, r26
    13fc:	ee 1f       	adc	r30, r30
    13fe:	88 f7       	brcc	.-30     	; 0x13e2 <__divsf3_pse+0x94>
    1400:	e0 95       	com	r30
    1402:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001938 <__floatunsisf>:
    1938:	e8 94       	clt
    193a:	09 c0       	rjmp	.+18     	; 0x194e <__floatsisf+0x12>

0000193c <__floatsisf>:
    193c:	97 fb       	bst	r25, 7
    193e:	3e f4       	brtc	.+14     	; 0x194e <__floatsisf+0x12>
    1940:	90 95       	com	r25
    1942:	80 95       	com	r24
    1944:	70 95       	com	r23
    1946:	61 95       	neg	r22
    1948:	7f 4f       	sbci	r23, 0xFF	; 255
    194a:	8f 4f       	sbci	r24, 0xFF	; 255
    194c:	9f 4f       	sbci	r25, 0xFF	; 255
    194e:	99 23       	and	r25, r25
    1950:	a9 f0       	breq	.+42     	; 0x197c <__floatsisf+0x40>
    1952:	f9 2f       	mov	r31, r25
    1954:	96 e9       	ldi	r25, 0x96	; 150
    1956:	bb 27       	eor	r27, r27
    1958:	93 95       	inc	r25
    195a:	f6 95       	lsr	r31
    195c:	87 95       	ror	r24
    195e:	77 95       	ror	r23
    1960:	67 95       	ror	r22
    1962:	b7 95       	ror	r27
    1964:	f1 11       	cpse	r31, r1
    1966:	f8 cf       	rjmp	.-16     	; 0x1958 <__floatsisf+0x1c>
    1968:	fa f4       	brpl	.+62     	; 0x19a8 <__floatsisf+0x6c>
    196a:	bb 0f       	add	r27, r27
    196c:	11 f4       	brne	.+4      	; 0x1972 <__floatsisf+0x36>
    196e:	60 ff       	sbrs	r22, 0
    1970:	1b c0       	rjmp	.+54     	; 0x19a8 <__floatsisf+0x6c>
    1972:	6f 5f       	subi	r22, 0xFF	; 255
    1974:	7f 4f       	sbci	r23, 0xFF	; 255
    1976:	8f 4f       	sbci	r24, 0xFF	; 255
    1978:	9f 4f       	sbci	r25, 0xFF	; 255
    197a:	16 c0       	rjmp	.+44     	; 0x19a8 <__floatsisf+0x6c>
    197c:	88 23       	and	r24, r24
    197e:	11 f0       	breq	.+4      	; 0x1984 <__floatsisf+0x48>
    1980:	96 e9       	ldi	r25, 0x96	; 150
    1982:	11 c0       	rjmp	.+34     	; 0x19a6 <__floatsisf+0x6a>
    1984:	77 23       	and	r23, r23
    1986:	21 f0       	breq	.+8      	; 0x1990 <__floatsisf+0x54>
    1988:	9e e8       	ldi	r25, 0x8E	; 142
    198a:	87 2f       	mov	r24, r23
    198c:	76 2f       	mov	r23, r22
    198e:	05 c0       	rjmp	.+10     	; 0x199a <__floatsisf+0x5e>
    1990:	66 23       	and	r22, r22
    1992:	71 f0       	breq	.+28     	; 0x19b0 <__floatsisf+0x74>
    1994:	96 e8       	ldi	r25, 0x86	; 134
    1996:	86 2f       	mov	r24, r22
    1998:	70 e0       	ldi	r23, 0x00	; 0
    199a:	60 e0       	ldi	r22, 0x00	; 0
    199c:	2a f0       	brmi	.+10     	; 0x19a8 <__floatsisf+0x6c>
    199e:	9a 95       	dec	r25
    19a0:	66 0f       	add	r22, r22
    19a2:	77 1f       	adc	r23, r23
    19a4:	88 1f       	adc	r24, r24
    19a6:	da f7       	brpl	.-10     	; 0x199e <__floatsisf+0x62>
    19a8:	88 0f       	add	r24, r24
    19aa:	96 95       	lsr	r25
    19ac:	87 95       	ror	r24
    19ae:	97 f9       	bld	r25, 7
    19b0:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001fee <__fp_inf>:
    1fee:	97 f9       	bld	r25, 7
    1ff0:	9f 67       	ori	r25, 0x7F	; 127
    1ff2:	80 e8       	ldi	r24, 0x80	; 128
    1ff4:	70 e0       	ldi	r23, 0x00	; 0
    1ff6:	60 e0       	ldi	r22, 0x00	; 0
    1ff8:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00002012 <__fp_nan>:
    2012:	9f ef       	ldi	r25, 0xFF	; 255
    2014:	80 ec       	ldi	r24, 0xC0	; 192
    2016:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001bb8 <__fp_powser>:
    1bb8:	df 93       	push	r29
    1bba:	cf 93       	push	r28
    1bbc:	1f 93       	push	r17
    1bbe:	0f 93       	push	r16
    1bc0:	ff 92       	push	r15
    1bc2:	ef 92       	push	r14
    1bc4:	df 92       	push	r13
    1bc6:	7b 01       	movw	r14, r22
    1bc8:	8c 01       	movw	r16, r24
    1bca:	68 94       	set
    1bcc:	06 c0       	rjmp	.+12     	; 0x1bda <__fp_powser+0x22>
    1bce:	da 2e       	mov	r13, r26
    1bd0:	ef 01       	movw	r28, r30
    1bd2:	0e 94 02 0a 	call	0x1404	; 0x1404 <__mulsf3x>
    1bd6:	fe 01       	movw	r30, r28
    1bd8:	e8 94       	clt
    1bda:	a5 91       	lpm	r26, Z+
    1bdc:	25 91       	lpm	r18, Z+
    1bde:	35 91       	lpm	r19, Z+
    1be0:	45 91       	lpm	r20, Z+
    1be2:	55 91       	lpm	r21, Z+
    1be4:	a6 f3       	brts	.-24     	; 0x1bce <__fp_powser+0x16>
    1be6:	ef 01       	movw	r28, r30
    1be8:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <__addsf3x>
    1bec:	fe 01       	movw	r30, r28
    1bee:	97 01       	movw	r18, r14
    1bf0:	a8 01       	movw	r20, r16
    1bf2:	da 94       	dec	r13
    1bf4:	69 f7       	brne	.-38     	; 0x1bd0 <__fp_powser+0x18>
    1bf6:	df 90       	pop	r13
    1bf8:	ef 90       	pop	r14
    1bfa:	ff 90       	pop	r15
    1bfc:	0f 91       	pop	r16
    1bfe:	1f 91       	pop	r17
    1c00:	cf 91       	pop	r28
    1c02:	df 91       	pop	r29
    1c04:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001fa8 <__fp_pscA>:
    1fa8:	00 24       	eor	r0, r0
    1faa:	0a 94       	dec	r0
    1fac:	16 16       	cp	r1, r22
    1fae:	17 06       	cpc	r1, r23
    1fb0:	18 06       	cpc	r1, r24
    1fb2:	09 06       	cpc	r0, r25
    1fb4:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001fb6 <__fp_pscB>:
    1fb6:	00 24       	eor	r0, r0
    1fb8:	0a 94       	dec	r0
    1fba:	12 16       	cp	r1, r18
    1fbc:	13 06       	cpc	r1, r19
    1fbe:	14 06       	cpc	r1, r20
    1fc0:	05 06       	cpc	r0, r21
    1fc2:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001e98 <__fp_round>:
    1e98:	09 2e       	mov	r0, r25
    1e9a:	03 94       	inc	r0
    1e9c:	00 0c       	add	r0, r0
    1e9e:	11 f4       	brne	.+4      	; 0x1ea4 <__fp_round+0xc>
    1ea0:	88 23       	and	r24, r24
    1ea2:	52 f0       	brmi	.+20     	; 0x1eb8 <__fp_round+0x20>
    1ea4:	bb 0f       	add	r27, r27
    1ea6:	40 f4       	brcc	.+16     	; 0x1eb8 <__fp_round+0x20>
    1ea8:	bf 2b       	or	r27, r31
    1eaa:	11 f4       	brne	.+4      	; 0x1eb0 <__fp_round+0x18>
    1eac:	60 ff       	sbrs	r22, 0
    1eae:	04 c0       	rjmp	.+8      	; 0x1eb8 <__fp_round+0x20>
    1eb0:	6f 5f       	subi	r22, 0xFF	; 255
    1eb2:	7f 4f       	sbci	r23, 0xFF	; 255
    1eb4:	8f 4f       	sbci	r24, 0xFF	; 255
    1eb6:	9f 4f       	sbci	r25, 0xFF	; 255
    1eb8:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001ce4 <__fp_split3>:
    1ce4:	57 fd       	sbrc	r21, 7
    1ce6:	90 58       	subi	r25, 0x80	; 128
    1ce8:	44 0f       	add	r20, r20
    1cea:	55 1f       	adc	r21, r21
    1cec:	59 f0       	breq	.+22     	; 0x1d04 <__fp_splitA+0x10>
    1cee:	5f 3f       	cpi	r21, 0xFF	; 255
    1cf0:	71 f0       	breq	.+28     	; 0x1d0e <__fp_splitA+0x1a>
    1cf2:	47 95       	ror	r20

00001cf4 <__fp_splitA>:
    1cf4:	88 0f       	add	r24, r24
    1cf6:	97 fb       	bst	r25, 7
    1cf8:	99 1f       	adc	r25, r25
    1cfa:	61 f0       	breq	.+24     	; 0x1d14 <__fp_splitA+0x20>
    1cfc:	9f 3f       	cpi	r25, 0xFF	; 255
    1cfe:	79 f0       	breq	.+30     	; 0x1d1e <__fp_splitA+0x2a>
    1d00:	87 95       	ror	r24
    1d02:	08 95       	ret
    1d04:	12 16       	cp	r1, r18
    1d06:	13 06       	cpc	r1, r19
    1d08:	14 06       	cpc	r1, r20
    1d0a:	55 1f       	adc	r21, r21
    1d0c:	f2 cf       	rjmp	.-28     	; 0x1cf2 <__fp_split3+0xe>
    1d0e:	46 95       	lsr	r20
    1d10:	f1 df       	rcall	.-30     	; 0x1cf4 <__fp_splitA>
    1d12:	08 c0       	rjmp	.+16     	; 0x1d24 <__fp_splitA+0x30>
    1d14:	16 16       	cp	r1, r22
    1d16:	17 06       	cpc	r1, r23
    1d18:	18 06       	cpc	r1, r24
    1d1a:	99 1f       	adc	r25, r25
    1d1c:	f1 cf       	rjmp	.-30     	; 0x1d00 <__fp_splitA+0xc>
    1d1e:	86 95       	lsr	r24
    1d20:	71 05       	cpc	r23, r1
    1d22:	61 05       	cpc	r22, r1
    1d24:	08 94       	sec
    1d26:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001fc4 <__fp_zero>:
    1fc4:	e8 94       	clt

00001fc6 <__fp_szero>:
    1fc6:	bb 27       	eor	r27, r27
    1fc8:	66 27       	eor	r22, r22
    1fca:	77 27       	eor	r23, r23
    1fcc:	cb 01       	movw	r24, r22
    1fce:	97 f9       	bld	r25, 7
    1fd0:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001f7c <inverse>:
    1f7c:	9b 01       	movw	r18, r22
    1f7e:	ac 01       	movw	r20, r24
    1f80:	60 e0       	ldi	r22, 0x00	; 0
    1f82:	70 e0       	ldi	r23, 0x00	; 0
    1f84:	80 e8       	ldi	r24, 0x80	; 128
    1f86:	9f e3       	ldi	r25, 0x3F	; 63
    1f88:	0c 94 fd 0f 	jmp	0x1ffa	; 0x1ffa <__divsf3>

Disassembly of section .text.avrlibc.fplib:

00002002 <__mulsf3>:
    2002:	0e 94 02 0a 	call	0x1404	; 0x1404 <__mulsf3x>
    2006:	0c 94 4c 0f 	jmp	0x1e98	; 0x1e98 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00001404 <__mulsf3x>:
    1404:	0f c0       	rjmp	.+30     	; 0x1424 <__mulsf3x+0x20>
    1406:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <__fp_pscA>
    140a:	38 f0       	brcs	.+14     	; 0x141a <__mulsf3x+0x16>
    140c:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <__fp_pscB>
    1410:	20 f0       	brcs	.+8      	; 0x141a <__mulsf3x+0x16>
    1412:	95 23       	and	r25, r21
    1414:	11 f0       	breq	.+4      	; 0x141a <__mulsf3x+0x16>
    1416:	0c 94 f7 0f 	jmp	0x1fee	; 0x1fee <__fp_inf>
    141a:	0c 94 09 10 	jmp	0x2012	; 0x2012 <__fp_nan>
    141e:	11 24       	eor	r1, r1
    1420:	0c 94 e3 0f 	jmp	0x1fc6	; 0x1fc6 <__fp_szero>
    1424:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__fp_split3>
    1428:	70 f3       	brcs	.-36     	; 0x1406 <__mulsf3x+0x2>

0000142a <__mulsf3_pse>:
    142a:	95 9f       	mul	r25, r21
    142c:	c1 f3       	breq	.-16     	; 0x141e <__mulsf3x+0x1a>
    142e:	95 0f       	add	r25, r21
    1430:	50 e0       	ldi	r21, 0x00	; 0
    1432:	55 1f       	adc	r21, r21
    1434:	62 9f       	mul	r22, r18
    1436:	f0 01       	movw	r30, r0
    1438:	72 9f       	mul	r23, r18
    143a:	bb 27       	eor	r27, r27
    143c:	f0 0d       	add	r31, r0
    143e:	b1 1d       	adc	r27, r1
    1440:	63 9f       	mul	r22, r19
    1442:	aa 27       	eor	r26, r26
    1444:	f0 0d       	add	r31, r0
    1446:	b1 1d       	adc	r27, r1
    1448:	aa 1f       	adc	r26, r26
    144a:	64 9f       	mul	r22, r20
    144c:	66 27       	eor	r22, r22
    144e:	b0 0d       	add	r27, r0
    1450:	a1 1d       	adc	r26, r1
    1452:	66 1f       	adc	r22, r22
    1454:	82 9f       	mul	r24, r18
    1456:	22 27       	eor	r18, r18
    1458:	b0 0d       	add	r27, r0
    145a:	a1 1d       	adc	r26, r1
    145c:	62 1f       	adc	r22, r18
    145e:	73 9f       	mul	r23, r19
    1460:	b0 0d       	add	r27, r0
    1462:	a1 1d       	adc	r26, r1
    1464:	62 1f       	adc	r22, r18
    1466:	83 9f       	mul	r24, r19
    1468:	a0 0d       	add	r26, r0
    146a:	61 1d       	adc	r22, r1
    146c:	22 1f       	adc	r18, r18
    146e:	74 9f       	mul	r23, r20
    1470:	33 27       	eor	r19, r19
    1472:	a0 0d       	add	r26, r0
    1474:	61 1d       	adc	r22, r1
    1476:	23 1f       	adc	r18, r19
    1478:	84 9f       	mul	r24, r20
    147a:	60 0d       	add	r22, r0
    147c:	21 1d       	adc	r18, r1
    147e:	82 2f       	mov	r24, r18
    1480:	76 2f       	mov	r23, r22
    1482:	6a 2f       	mov	r22, r26
    1484:	11 24       	eor	r1, r1
    1486:	9f 57       	subi	r25, 0x7F	; 127
    1488:	50 40       	sbci	r21, 0x00	; 0
    148a:	9a f0       	brmi	.+38     	; 0x14b2 <__mulsf3_pse+0x88>
    148c:	f1 f0       	breq	.+60     	; 0x14ca <__mulsf3_pse+0xa0>
    148e:	88 23       	and	r24, r24
    1490:	4a f0       	brmi	.+18     	; 0x14a4 <__mulsf3_pse+0x7a>
    1492:	ee 0f       	add	r30, r30
    1494:	ff 1f       	adc	r31, r31
    1496:	bb 1f       	adc	r27, r27
    1498:	66 1f       	adc	r22, r22
    149a:	77 1f       	adc	r23, r23
    149c:	88 1f       	adc	r24, r24
    149e:	91 50       	subi	r25, 0x01	; 1
    14a0:	50 40       	sbci	r21, 0x00	; 0
    14a2:	a9 f7       	brne	.-22     	; 0x148e <__mulsf3_pse+0x64>
    14a4:	9e 3f       	cpi	r25, 0xFE	; 254
    14a6:	51 05       	cpc	r21, r1
    14a8:	80 f0       	brcs	.+32     	; 0x14ca <__mulsf3_pse+0xa0>
    14aa:	0c 94 f7 0f 	jmp	0x1fee	; 0x1fee <__fp_inf>
    14ae:	0c 94 e3 0f 	jmp	0x1fc6	; 0x1fc6 <__fp_szero>
    14b2:	5f 3f       	cpi	r21, 0xFF	; 255
    14b4:	e4 f3       	brlt	.-8      	; 0x14ae <__mulsf3_pse+0x84>
    14b6:	98 3e       	cpi	r25, 0xE8	; 232
    14b8:	d4 f3       	brlt	.-12     	; 0x14ae <__mulsf3_pse+0x84>
    14ba:	86 95       	lsr	r24
    14bc:	77 95       	ror	r23
    14be:	67 95       	ror	r22
    14c0:	b7 95       	ror	r27
    14c2:	f7 95       	ror	r31
    14c4:	e7 95       	ror	r30
    14c6:	9f 5f       	subi	r25, 0xFF	; 255
    14c8:	c1 f7       	brne	.-16     	; 0x14ba <__mulsf3_pse+0x90>
    14ca:	fe 2b       	or	r31, r30
    14cc:	88 0f       	add	r24, r24
    14ce:	91 1d       	adc	r25, r1
    14d0:	96 95       	lsr	r25
    14d2:	87 95       	ror	r24
    14d4:	97 f9       	bld	r25, 7
    14d6:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000179e <sqrt>:
    179e:	06 c0       	rjmp	.+12     	; 0x17ac <sqrt+0xe>
    17a0:	19 f4       	brne	.+6      	; 0x17a8 <sqrt+0xa>
    17a2:	16 f4       	brtc	.+4      	; 0x17a8 <sqrt+0xa>
    17a4:	0c 94 09 10 	jmp	0x2012	; 0x2012 <__fp_nan>
    17a8:	0c 94 9a 0f 	jmp	0x1f34	; 0x1f34 <__fp_mpack>
    17ac:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <__fp_splitA>
    17b0:	b8 f3       	brcs	.-18     	; 0x17a0 <sqrt+0x2>
    17b2:	99 23       	and	r25, r25
    17b4:	c9 f3       	breq	.-14     	; 0x17a8 <sqrt+0xa>
    17b6:	b6 f3       	brts	.-20     	; 0x17a4 <sqrt+0x6>
    17b8:	9f 57       	subi	r25, 0x7F	; 127
    17ba:	55 0b       	sbc	r21, r21
    17bc:	87 ff       	sbrs	r24, 7
    17be:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <__fp_norm2>
    17c2:	00 24       	eor	r0, r0
    17c4:	a0 e6       	ldi	r26, 0x60	; 96
    17c6:	40 ea       	ldi	r20, 0xA0	; 160
    17c8:	90 01       	movw	r18, r0
    17ca:	80 58       	subi	r24, 0x80	; 128
    17cc:	56 95       	lsr	r21
    17ce:	97 95       	ror	r25
    17d0:	28 f4       	brcc	.+10     	; 0x17dc <sqrt+0x3e>
    17d2:	80 5c       	subi	r24, 0xC0	; 192
    17d4:	66 0f       	add	r22, r22
    17d6:	77 1f       	adc	r23, r23
    17d8:	88 1f       	adc	r24, r24
    17da:	20 f0       	brcs	.+8      	; 0x17e4 <sqrt+0x46>
    17dc:	26 17       	cp	r18, r22
    17de:	37 07       	cpc	r19, r23
    17e0:	48 07       	cpc	r20, r24
    17e2:	30 f4       	brcc	.+12     	; 0x17f0 <sqrt+0x52>
    17e4:	62 1b       	sub	r22, r18
    17e6:	73 0b       	sbc	r23, r19
    17e8:	84 0b       	sbc	r24, r20
    17ea:	20 29       	or	r18, r0
    17ec:	31 29       	or	r19, r1
    17ee:	4a 2b       	or	r20, r26
    17f0:	a6 95       	lsr	r26
    17f2:	17 94       	ror	r1
    17f4:	07 94       	ror	r0
    17f6:	20 25       	eor	r18, r0
    17f8:	31 25       	eor	r19, r1
    17fa:	4a 27       	eor	r20, r26
    17fc:	58 f7       	brcc	.-42     	; 0x17d4 <sqrt+0x36>
    17fe:	66 0f       	add	r22, r22
    1800:	77 1f       	adc	r23, r23
    1802:	88 1f       	adc	r24, r24
    1804:	20 f0       	brcs	.+8      	; 0x180e <sqrt+0x70>
    1806:	26 17       	cp	r18, r22
    1808:	37 07       	cpc	r19, r23
    180a:	48 07       	cpc	r20, r24
    180c:	30 f4       	brcc	.+12     	; 0x181a <sqrt+0x7c>
    180e:	62 0b       	sbc	r22, r18
    1810:	73 0b       	sbc	r23, r19
    1812:	84 0b       	sbc	r24, r20
    1814:	20 0d       	add	r18, r0
    1816:	31 1d       	adc	r19, r1
    1818:	41 1d       	adc	r20, r1
    181a:	a0 95       	com	r26
    181c:	81 f7       	brne	.-32     	; 0x17fe <sqrt+0x60>
    181e:	b9 01       	movw	r22, r18
    1820:	84 2f       	mov	r24, r20
    1822:	91 58       	subi	r25, 0x81	; 129
    1824:	88 0f       	add	r24, r24
    1826:	96 95       	lsr	r25
    1828:	87 95       	ror	r24
    182a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000200a <square>:
    200a:	9b 01       	movw	r18, r22
    200c:	ac 01       	movw	r20, r24
    200e:	0c 94 01 10 	jmp	0x2002	; 0x2002 <__mulsf3>

Disassembly of section .text.avrlibc.fplib:

00001f34 <__fp_mpack>:
    1f34:	9f 3f       	cpi	r25, 0xFF	; 255
    1f36:	31 f0       	breq	.+12     	; 0x1f44 <__fp_mpack_finite+0xc>

00001f38 <__fp_mpack_finite>:
    1f38:	91 50       	subi	r25, 0x01	; 1
    1f3a:	20 f4       	brcc	.+8      	; 0x1f44 <__fp_mpack_finite+0xc>
    1f3c:	87 95       	ror	r24
    1f3e:	77 95       	ror	r23
    1f40:	67 95       	ror	r22
    1f42:	b7 95       	ror	r27
    1f44:	88 0f       	add	r24, r24
    1f46:	91 1d       	adc	r25, r1
    1f48:	96 95       	lsr	r25
    1f4a:	87 95       	ror	r24
    1f4c:	97 f9       	bld	r25, 7
    1f4e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00001fd2 <__fp_norm2>:
    1fd2:	91 50       	subi	r25, 0x01	; 1
    1fd4:	50 40       	sbci	r21, 0x00	; 0
    1fd6:	66 0f       	add	r22, r22
    1fd8:	77 1f       	adc	r23, r23
    1fda:	88 1f       	adc	r24, r24
    1fdc:	d2 f7       	brpl	.-12     	; 0x1fd2 <__fp_norm2>
    1fde:	08 95       	ret

Disassembly of section .text.libgcc:

00001f50 <__movmemx_qi>:
    1f50:	99 27       	eor	r25, r25

00001f52 <__movmemx_hi>:
    1f52:	77 fd       	sbrc	r23, 7
    1f54:	06 c0       	rjmp	.+12     	; 0x1f62 <__movmemx_hi+0x10>
    1f56:	7b bf       	out	0x3b, r23	; 59
    1f58:	07 90       	elpm	r0, Z+
    1f5a:	0d 92       	st	X+, r0
    1f5c:	01 97       	sbiw	r24, 0x01	; 1
    1f5e:	e1 f7       	brne	.-8      	; 0x1f58 <__movmemx_hi+0x6>
    1f60:	08 95       	ret
    1f62:	01 90       	ld	r0, Z+
    1f64:	0d 92       	st	X+, r0
    1f66:	01 97       	sbiw	r24, 0x01	; 1
    1f68:	e1 f7       	brne	.-8      	; 0x1f62 <__movmemx_hi+0x10>
    1f6a:	08 95       	ret

Disassembly of section .text.avrlibc:

00001d28 <dtostrf>:
    1d28:	ef 92       	push	r14
    1d2a:	0f 93       	push	r16
    1d2c:	1f 93       	push	r17
    1d2e:	cf 93       	push	r28
    1d30:	df 93       	push	r29
    1d32:	e8 01       	movw	r28, r16
    1d34:	47 fd       	sbrc	r20, 7
    1d36:	02 c0       	rjmp	.+4      	; 0x1d3c <dtostrf+0x14>
    1d38:	34 e0       	ldi	r19, 0x04	; 4
    1d3a:	01 c0       	rjmp	.+2      	; 0x1d3e <dtostrf+0x16>
    1d3c:	34 e1       	ldi	r19, 0x14	; 20
    1d3e:	04 2e       	mov	r0, r20
    1d40:	00 0c       	add	r0, r0
    1d42:	55 0b       	sbc	r21, r21
    1d44:	57 ff       	sbrs	r21, 7
    1d46:	03 c0       	rjmp	.+6      	; 0x1d4e <dtostrf+0x26>
    1d48:	51 95       	neg	r21
    1d4a:	41 95       	neg	r20
    1d4c:	51 09       	sbc	r21, r1
    1d4e:	e3 2e       	mov	r14, r19
    1d50:	02 2f       	mov	r16, r18
    1d52:	24 2f       	mov	r18, r20
    1d54:	ae 01       	movw	r20, r28
    1d56:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <dtoa_prf>
    1d5a:	ce 01       	movw	r24, r28
    1d5c:	df 91       	pop	r29
    1d5e:	cf 91       	pop	r28
    1d60:	1f 91       	pop	r17
    1d62:	0f 91       	pop	r16
    1d64:	ef 90       	pop	r14
    1d66:	08 95       	ret

Disassembly of section .text.avrlibc:

00001afa <sprintf>:
    1afa:	0f 93       	push	r16
    1afc:	1f 93       	push	r17
    1afe:	cf 93       	push	r28
    1b00:	df 93       	push	r29
    1b02:	cd b7       	in	r28, 0x3d	; 61
    1b04:	de b7       	in	r29, 0x3e	; 62
    1b06:	2f 97       	sbiw	r28, 0x0f	; 15
    1b08:	0f b6       	in	r0, 0x3f	; 63
    1b0a:	f8 94       	cli
    1b0c:	de bf       	out	0x3e, r29	; 62
    1b0e:	0f be       	out	0x3f, r0	; 63
    1b10:	cd bf       	out	0x3d, r28	; 61
    1b12:	0f 89       	ldd	r16, Y+23	; 0x17
    1b14:	18 8d       	ldd	r17, Y+24	; 0x18
    1b16:	86 e0       	ldi	r24, 0x06	; 6
    1b18:	8d 83       	std	Y+5, r24	; 0x05
    1b1a:	1a 83       	std	Y+2, r17	; 0x02
    1b1c:	09 83       	std	Y+1, r16	; 0x01
    1b1e:	8f ef       	ldi	r24, 0xFF	; 255
    1b20:	9f e7       	ldi	r25, 0x7F	; 127
    1b22:	9f 83       	std	Y+7, r25	; 0x07
    1b24:	8e 83       	std	Y+6, r24	; 0x06
    1b26:	9e 01       	movw	r18, r28
    1b28:	24 5e       	subi	r18, 0xE4	; 228
    1b2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b2c:	49 8d       	ldd	r20, Y+25	; 0x19
    1b2e:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1b30:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1b32:	ce 01       	movw	r24, r28
    1b34:	01 96       	adiw	r24, 0x01	; 1
    1b36:	0e 94 c8 02 	call	0x590	; 0x590 <vfprintf>
    1b3a:	e8 85       	ldd	r30, Y+8	; 0x08
    1b3c:	f9 85       	ldd	r31, Y+9	; 0x09
    1b3e:	e0 0f       	add	r30, r16
    1b40:	f1 1f       	adc	r31, r17
    1b42:	10 82       	st	Z, r1
    1b44:	2f 96       	adiw	r28, 0x0f	; 15
    1b46:	0f b6       	in	r0, 0x3f	; 63
    1b48:	f8 94       	cli
    1b4a:	de bf       	out	0x3e, r29	; 62
    1b4c:	0f be       	out	0x3f, r0	; 63
    1b4e:	cd bf       	out	0x3d, r28	; 61
    1b50:	df 91       	pop	r29
    1b52:	cf 91       	pop	r28
    1b54:	1f 91       	pop	r17
    1b56:	0f 91       	pop	r16
    1b58:	08 95       	ret

Disassembly of section .text.avrlibc:

00000590 <vfprintf>:
 590:	2f 92       	push	r2
 592:	3f 92       	push	r3
 594:	4f 92       	push	r4
 596:	6f 92       	push	r6
 598:	7f 92       	push	r7
 59a:	8f 92       	push	r8
 59c:	9f 92       	push	r9
 59e:	af 92       	push	r10
 5a0:	bf 92       	push	r11
 5a2:	cf 92       	push	r12
 5a4:	df 92       	push	r13
 5a6:	ef 92       	push	r14
 5a8:	ff 92       	push	r15
 5aa:	0f 93       	push	r16
 5ac:	1f 93       	push	r17
 5ae:	cf 93       	push	r28
 5b0:	df 93       	push	r29
 5b2:	cd b7       	in	r28, 0x3d	; 61
 5b4:	de b7       	in	r29, 0x3e	; 62
 5b6:	62 97       	sbiw	r28, 0x12	; 18
 5b8:	0f b6       	in	r0, 0x3f	; 63
 5ba:	f8 94       	cli
 5bc:	de bf       	out	0x3e, r29	; 62
 5be:	0f be       	out	0x3f, r0	; 63
 5c0:	cd bf       	out	0x3d, r28	; 61
 5c2:	6c 01       	movw	r12, r24
 5c4:	3a 01       	movw	r6, r20
 5c6:	86 2e       	mov	r8, r22
 5c8:	79 01       	movw	r14, r18
 5ca:	fc 01       	movw	r30, r24
 5cc:	10 86       	std	Z+8, r1	; 0x08
 5ce:	17 82       	std	Z+7, r1	; 0x07
 5d0:	84 81       	ldd	r24, Z+4	; 0x04
 5d2:	81 ff       	sbrs	r24, 1
 5d4:	eb c1       	rjmp	.+982    	; 0x9ac <vfprintf+0x41c>
 5d6:	9e 01       	movw	r18, r28
 5d8:	2f 5f       	subi	r18, 0xFF	; 255
 5da:	3f 4f       	sbci	r19, 0xFF	; 255
 5dc:	3d 87       	std	Y+13, r19	; 0x0d
 5de:	2c 87       	std	Y+12, r18	; 0x0c
 5e0:	c9 01       	movw	r24, r18
 5e2:	a0 e8       	ldi	r26, 0x80	; 128
 5e4:	88 8b       	std	Y+16, r24	; 0x10
 5e6:	99 8b       	std	Y+17, r25	; 0x11
 5e8:	aa 8b       	std	Y+18, r26	; 0x12
 5ea:	9f e3       	ldi	r25, 0x3F	; 63
 5ec:	99 2e       	mov	r9, r25
 5ee:	f3 01       	movw	r30, r6
 5f0:	58 2d       	mov	r21, r8
 5f2:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <__xload_1>
 5f6:	86 2f       	mov	r24, r22
 5f8:	66 23       	and	r22, r22
 5fa:	09 f4       	brne	.+2      	; 0x5fe <vfprintf+0x6e>
 5fc:	d3 c1       	rjmp	.+934    	; 0x9a4 <vfprintf+0x414>
 5fe:	48 2d       	mov	r20, r8
 600:	93 01       	movw	r18, r6
 602:	2f 5f       	subi	r18, 0xFF	; 255
 604:	3f 4f       	sbci	r19, 0xFF	; 255
 606:	4f 4f       	sbci	r20, 0xFF	; 255
 608:	65 32       	cpi	r22, 0x25	; 37
 60a:	19 f0       	breq	.+6      	; 0x612 <vfprintf+0x82>
 60c:	39 01       	movw	r6, r18
 60e:	84 2e       	mov	r8, r20
 610:	0b c0       	rjmp	.+22     	; 0x628 <vfprintf+0x98>
 612:	f9 01       	movw	r30, r18
 614:	54 2f       	mov	r21, r20
 616:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <__xload_1>
 61a:	86 2f       	mov	r24, r22
 61c:	92 e0       	ldi	r25, 0x02	; 2
 61e:	69 0e       	add	r6, r25
 620:	71 1c       	adc	r7, r1
 622:	81 1c       	adc	r8, r1
 624:	65 32       	cpi	r22, 0x25	; 37
 626:	29 f4       	brne	.+10     	; 0x632 <vfprintf+0xa2>
 628:	b6 01       	movw	r22, r12
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <fputc>
 630:	de cf       	rjmp	.-68     	; 0x5ee <vfprintf+0x5e>
 632:	b1 2c       	mov	r11, r1
 634:	00 e0       	ldi	r16, 0x00	; 0
 636:	10 e0       	ldi	r17, 0x00	; 0
 638:	10 32       	cpi	r17, 0x20	; 32
 63a:	a0 f4       	brcc	.+40     	; 0x664 <vfprintf+0xd4>
 63c:	8b 32       	cpi	r24, 0x2B	; 43
 63e:	69 f0       	breq	.+26     	; 0x65a <vfprintf+0xca>
 640:	30 f4       	brcc	.+12     	; 0x64e <vfprintf+0xbe>
 642:	80 32       	cpi	r24, 0x20	; 32
 644:	59 f0       	breq	.+22     	; 0x65c <vfprintf+0xcc>
 646:	83 32       	cpi	r24, 0x23	; 35
 648:	69 f4       	brne	.+26     	; 0x664 <vfprintf+0xd4>
 64a:	10 61       	ori	r17, 0x10	; 16
 64c:	2c c0       	rjmp	.+88     	; 0x6a6 <vfprintf+0x116>
 64e:	8d 32       	cpi	r24, 0x2D	; 45
 650:	39 f0       	breq	.+14     	; 0x660 <vfprintf+0xd0>
 652:	80 33       	cpi	r24, 0x30	; 48
 654:	39 f4       	brne	.+14     	; 0x664 <vfprintf+0xd4>
 656:	11 60       	ori	r17, 0x01	; 1
 658:	26 c0       	rjmp	.+76     	; 0x6a6 <vfprintf+0x116>
 65a:	12 60       	ori	r17, 0x02	; 2
 65c:	14 60       	ori	r17, 0x04	; 4
 65e:	23 c0       	rjmp	.+70     	; 0x6a6 <vfprintf+0x116>
 660:	18 60       	ori	r17, 0x08	; 8
 662:	21 c0       	rjmp	.+66     	; 0x6a6 <vfprintf+0x116>
 664:	17 fd       	sbrc	r17, 7
 666:	2a c0       	rjmp	.+84     	; 0x6bc <vfprintf+0x12c>
 668:	90 ed       	ldi	r25, 0xD0	; 208
 66a:	98 0f       	add	r25, r24
 66c:	9a 30       	cpi	r25, 0x0A	; 10
 66e:	78 f4       	brcc	.+30     	; 0x68e <vfprintf+0xfe>
 670:	16 ff       	sbrs	r17, 6
 672:	06 c0       	rjmp	.+12     	; 0x680 <vfprintf+0xf0>
 674:	aa e0       	ldi	r26, 0x0A	; 10
 676:	ba 9e       	mul	r11, r26
 678:	90 0d       	add	r25, r0
 67a:	11 24       	eor	r1, r1
 67c:	b9 2e       	mov	r11, r25
 67e:	13 c0       	rjmp	.+38     	; 0x6a6 <vfprintf+0x116>
 680:	ea e0       	ldi	r30, 0x0A	; 10
 682:	0e 9f       	mul	r16, r30
 684:	90 0d       	add	r25, r0
 686:	11 24       	eor	r1, r1
 688:	09 2f       	mov	r16, r25
 68a:	10 62       	ori	r17, 0x20	; 32
 68c:	0c c0       	rjmp	.+24     	; 0x6a6 <vfprintf+0x116>
 68e:	8e 32       	cpi	r24, 0x2E	; 46
 690:	21 f4       	brne	.+8      	; 0x69a <vfprintf+0x10a>
 692:	16 fd       	sbrc	r17, 6
 694:	87 c1       	rjmp	.+782    	; 0x9a4 <vfprintf+0x414>
 696:	10 64       	ori	r17, 0x40	; 64
 698:	06 c0       	rjmp	.+12     	; 0x6a6 <vfprintf+0x116>
 69a:	8c 36       	cpi	r24, 0x6C	; 108
 69c:	11 f4       	brne	.+4      	; 0x6a2 <vfprintf+0x112>
 69e:	10 68       	ori	r17, 0x80	; 128
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <vfprintf+0x116>
 6a2:	88 36       	cpi	r24, 0x68	; 104
 6a4:	59 f4       	brne	.+22     	; 0x6bc <vfprintf+0x12c>
 6a6:	f3 01       	movw	r30, r6
 6a8:	58 2d       	mov	r21, r8
 6aa:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <__xload_1>
 6ae:	86 2f       	mov	r24, r22
 6b0:	ff ef       	ldi	r31, 0xFF	; 255
 6b2:	6f 1a       	sub	r6, r31
 6b4:	7f 0a       	sbc	r7, r31
 6b6:	8f 0a       	sbc	r8, r31
 6b8:	61 11       	cpse	r22, r1
 6ba:	be cf       	rjmp	.-132    	; 0x638 <vfprintf+0xa8>
 6bc:	98 2f       	mov	r25, r24
 6be:	9f 7d       	andi	r25, 0xDF	; 223
 6c0:	95 54       	subi	r25, 0x45	; 69
 6c2:	93 30       	cpi	r25, 0x03	; 3
 6c4:	28 f4       	brcc	.+10     	; 0x6d0 <vfprintf+0x140>
 6c6:	24 e0       	ldi	r18, 0x04	; 4
 6c8:	e2 0e       	add	r14, r18
 6ca:	f1 1c       	adc	r15, r1
 6cc:	99 82       	std	Y+1, r9	; 0x01
 6ce:	0f c0       	rjmp	.+30     	; 0x6ee <vfprintf+0x15e>
 6d0:	83 36       	cpi	r24, 0x63	; 99
 6d2:	31 f0       	breq	.+12     	; 0x6e0 <vfprintf+0x150>
 6d4:	83 37       	cpi	r24, 0x73	; 115
 6d6:	91 f0       	breq	.+36     	; 0x6fc <vfprintf+0x16c>
 6d8:	83 35       	cpi	r24, 0x53	; 83
 6da:	09 f0       	breq	.+2      	; 0x6de <vfprintf+0x14e>
 6dc:	64 c0       	rjmp	.+200    	; 0x7a6 <vfprintf+0x216>
 6de:	27 c0       	rjmp	.+78     	; 0x72e <vfprintf+0x19e>
 6e0:	f7 01       	movw	r30, r14
 6e2:	80 81       	ld	r24, Z
 6e4:	89 83       	std	Y+1, r24	; 0x01
 6e6:	97 01       	movw	r18, r14
 6e8:	2e 5f       	subi	r18, 0xFE	; 254
 6ea:	3f 4f       	sbci	r19, 0xFF	; 255
 6ec:	79 01       	movw	r14, r18
 6ee:	28 88       	ldd	r2, Y+16	; 0x10
 6f0:	39 88       	ldd	r3, Y+17	; 0x11
 6f2:	4a 88       	ldd	r4, Y+18	; 0x12
 6f4:	aa 24       	eor	r10, r10
 6f6:	a3 94       	inc	r10
 6f8:	b1 2c       	mov	r11, r1
 6fa:	17 c0       	rjmp	.+46     	; 0x72a <vfprintf+0x19a>
 6fc:	a7 01       	movw	r20, r14
 6fe:	4d 5f       	subi	r20, 0xFD	; 253
 700:	5f 4f       	sbci	r21, 0xFF	; 255
 702:	5f 87       	std	Y+15, r21	; 0x0f
 704:	4e 87       	std	Y+14, r20	; 0x0e
 706:	f7 01       	movw	r30, r14
 708:	20 80       	ld	r2, Z
 70a:	31 80       	ldd	r3, Z+1	; 0x01
 70c:	42 80       	ldd	r4, Z+2	; 0x02
 70e:	16 ff       	sbrs	r17, 6
 710:	03 c0       	rjmp	.+6      	; 0x718 <vfprintf+0x188>
 712:	4b 2d       	mov	r20, r11
 714:	50 e0       	ldi	r21, 0x00	; 0
 716:	02 c0       	rjmp	.+4      	; 0x71c <vfprintf+0x18c>
 718:	4f ef       	ldi	r20, 0xFF	; 255
 71a:	5f ef       	ldi	r21, 0xFF	; 255
 71c:	84 2d       	mov	r24, r4
 71e:	b1 01       	movw	r22, r2
 720:	0e 94 d3 0e 	call	0x1da6	; 0x1da6 <strnlen>
 724:	5c 01       	movw	r10, r24
 726:	ee 84       	ldd	r14, Y+14	; 0x0e
 728:	ff 84       	ldd	r15, Y+15	; 0x0f
 72a:	1f 77       	andi	r17, 0x7F	; 127
 72c:	18 c0       	rjmp	.+48     	; 0x75e <vfprintf+0x1ce>
 72e:	97 01       	movw	r18, r14
 730:	2d 5f       	subi	r18, 0xFD	; 253
 732:	3f 4f       	sbci	r19, 0xFF	; 255
 734:	3f 87       	std	Y+15, r19	; 0x0f
 736:	2e 87       	std	Y+14, r18	; 0x0e
 738:	f7 01       	movw	r30, r14
 73a:	20 80       	ld	r2, Z
 73c:	31 80       	ldd	r3, Z+1	; 0x01
 73e:	42 80       	ldd	r4, Z+2	; 0x02
 740:	16 ff       	sbrs	r17, 6
 742:	03 c0       	rjmp	.+6      	; 0x74a <vfprintf+0x1ba>
 744:	4b 2d       	mov	r20, r11
 746:	50 e0       	ldi	r21, 0x00	; 0
 748:	02 c0       	rjmp	.+4      	; 0x74e <vfprintf+0x1be>
 74a:	4f ef       	ldi	r20, 0xFF	; 255
 74c:	5f ef       	ldi	r21, 0xFF	; 255
 74e:	84 2d       	mov	r24, r4
 750:	b1 01       	movw	r22, r2
 752:	0e 94 d3 0e 	call	0x1da6	; 0x1da6 <strnlen>
 756:	5c 01       	movw	r10, r24
 758:	10 68       	ori	r17, 0x80	; 128
 75a:	ee 84       	ldd	r14, Y+14	; 0x0e
 75c:	ff 84       	ldd	r15, Y+15	; 0x0f
 75e:	13 fd       	sbrc	r17, 3
 760:	1e c0       	rjmp	.+60     	; 0x79e <vfprintf+0x20e>
 762:	80 2f       	mov	r24, r16
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	a8 16       	cp	r10, r24
 768:	b9 06       	cpc	r11, r25
 76a:	c8 f4       	brcc	.+50     	; 0x79e <vfprintf+0x20e>
 76c:	b6 01       	movw	r22, r12
 76e:	80 e2       	ldi	r24, 0x20	; 32
 770:	90 e0       	ldi	r25, 0x00	; 0
 772:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <fputc>
 776:	01 50       	subi	r16, 0x01	; 1
 778:	f4 cf       	rjmp	.-24     	; 0x762 <vfprintf+0x1d2>
 77a:	f1 01       	movw	r30, r2
 77c:	54 2d       	mov	r21, r4
 77e:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <__xload_1>
 782:	86 2f       	mov	r24, r22
 784:	ff ef       	ldi	r31, 0xFF	; 255
 786:	2f 1a       	sub	r2, r31
 788:	3f 0a       	sbc	r3, r31
 78a:	4f 0a       	sbc	r4, r31
 78c:	b6 01       	movw	r22, r12
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <fputc>
 794:	01 11       	cpse	r16, r1
 796:	01 50       	subi	r16, 0x01	; 1
 798:	21 e0       	ldi	r18, 0x01	; 1
 79a:	a2 1a       	sub	r10, r18
 79c:	b1 08       	sbc	r11, r1
 79e:	a1 14       	cp	r10, r1
 7a0:	b1 04       	cpc	r11, r1
 7a2:	59 f7       	brne	.-42     	; 0x77a <vfprintf+0x1ea>
 7a4:	f5 c0       	rjmp	.+490    	; 0x990 <vfprintf+0x400>
 7a6:	84 36       	cpi	r24, 0x64	; 100
 7a8:	11 f0       	breq	.+4      	; 0x7ae <vfprintf+0x21e>
 7aa:	89 36       	cpi	r24, 0x69	; 105
 7ac:	71 f5       	brne	.+92     	; 0x80a <vfprintf+0x27a>
 7ae:	f7 01       	movw	r30, r14
 7b0:	17 ff       	sbrs	r17, 7
 7b2:	08 c0       	rjmp	.+16     	; 0x7c4 <vfprintf+0x234>
 7b4:	60 81       	ld	r22, Z
 7b6:	71 81       	ldd	r23, Z+1	; 0x01
 7b8:	82 81       	ldd	r24, Z+2	; 0x02
 7ba:	93 81       	ldd	r25, Z+3	; 0x03
 7bc:	97 01       	movw	r18, r14
 7be:	2c 5f       	subi	r18, 0xFC	; 252
 7c0:	3f 4f       	sbci	r19, 0xFF	; 255
 7c2:	09 c0       	rjmp	.+18     	; 0x7d6 <vfprintf+0x246>
 7c4:	60 81       	ld	r22, Z
 7c6:	71 81       	ldd	r23, Z+1	; 0x01
 7c8:	07 2e       	mov	r0, r23
 7ca:	00 0c       	add	r0, r0
 7cc:	88 0b       	sbc	r24, r24
 7ce:	99 0b       	sbc	r25, r25
 7d0:	97 01       	movw	r18, r14
 7d2:	2e 5f       	subi	r18, 0xFE	; 254
 7d4:	3f 4f       	sbci	r19, 0xFF	; 255
 7d6:	79 01       	movw	r14, r18
 7d8:	1f 76       	andi	r17, 0x6F	; 111
 7da:	31 2e       	mov	r3, r17
 7dc:	97 ff       	sbrs	r25, 7
 7de:	0a c0       	rjmp	.+20     	; 0x7f4 <vfprintf+0x264>
 7e0:	90 95       	com	r25
 7e2:	80 95       	com	r24
 7e4:	70 95       	com	r23
 7e6:	61 95       	neg	r22
 7e8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ea:	8f 4f       	sbci	r24, 0xFF	; 255
 7ec:	9f 4f       	sbci	r25, 0xFF	; 255
 7ee:	31 2f       	mov	r19, r17
 7f0:	30 68       	ori	r19, 0x80	; 128
 7f2:	33 2e       	mov	r3, r19
 7f4:	2a e0       	ldi	r18, 0x0A	; 10
 7f6:	30 e0       	ldi	r19, 0x00	; 0
 7f8:	ae 01       	movw	r20, r28
 7fa:	4f 5f       	subi	r20, 0xFF	; 255
 7fc:	5f 4f       	sbci	r21, 0xFF	; 255
 7fe:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <__ultoa_invert>
 802:	48 2e       	mov	r4, r24
 804:	4c 85       	ldd	r20, Y+12	; 0x0c
 806:	44 1a       	sub	r4, r20
 808:	4a c0       	rjmp	.+148    	; 0x89e <vfprintf+0x30e>
 80a:	85 37       	cpi	r24, 0x75	; 117
 80c:	29 f4       	brne	.+10     	; 0x818 <vfprintf+0x288>
 80e:	1f 7e       	andi	r17, 0xEF	; 239
 810:	a1 2e       	mov	r10, r17
 812:	2a e0       	ldi	r18, 0x0A	; 10
 814:	30 e0       	ldi	r19, 0x00	; 0
 816:	25 c0       	rjmp	.+74     	; 0x862 <vfprintf+0x2d2>
 818:	51 2f       	mov	r21, r17
 81a:	59 7f       	andi	r21, 0xF9	; 249
 81c:	a5 2e       	mov	r10, r21
 81e:	8f 36       	cpi	r24, 0x6F	; 111
 820:	c1 f0       	breq	.+48     	; 0x852 <vfprintf+0x2c2>
 822:	18 f4       	brcc	.+6      	; 0x82a <vfprintf+0x29a>
 824:	88 35       	cpi	r24, 0x58	; 88
 826:	79 f0       	breq	.+30     	; 0x846 <vfprintf+0x2b6>
 828:	bd c0       	rjmp	.+378    	; 0x9a4 <vfprintf+0x414>
 82a:	80 37       	cpi	r24, 0x70	; 112
 82c:	19 f0       	breq	.+6      	; 0x834 <vfprintf+0x2a4>
 82e:	88 37       	cpi	r24, 0x78	; 120
 830:	21 f0       	breq	.+8      	; 0x83a <vfprintf+0x2aa>
 832:	b8 c0       	rjmp	.+368    	; 0x9a4 <vfprintf+0x414>
 834:	85 2f       	mov	r24, r21
 836:	80 61       	ori	r24, 0x10	; 16
 838:	a8 2e       	mov	r10, r24
 83a:	a4 fe       	sbrs	r10, 4
 83c:	0d c0       	rjmp	.+26     	; 0x858 <vfprintf+0x2c8>
 83e:	9a 2d       	mov	r25, r10
 840:	94 60       	ori	r25, 0x04	; 4
 842:	a9 2e       	mov	r10, r25
 844:	09 c0       	rjmp	.+18     	; 0x858 <vfprintf+0x2c8>
 846:	14 ff       	sbrs	r17, 4
 848:	0a c0       	rjmp	.+20     	; 0x85e <vfprintf+0x2ce>
 84a:	a5 2f       	mov	r26, r21
 84c:	a6 60       	ori	r26, 0x06	; 6
 84e:	aa 2e       	mov	r10, r26
 850:	06 c0       	rjmp	.+12     	; 0x85e <vfprintf+0x2ce>
 852:	28 e0       	ldi	r18, 0x08	; 8
 854:	30 e0       	ldi	r19, 0x00	; 0
 856:	05 c0       	rjmp	.+10     	; 0x862 <vfprintf+0x2d2>
 858:	20 e1       	ldi	r18, 0x10	; 16
 85a:	30 e0       	ldi	r19, 0x00	; 0
 85c:	02 c0       	rjmp	.+4      	; 0x862 <vfprintf+0x2d2>
 85e:	20 e1       	ldi	r18, 0x10	; 16
 860:	32 e0       	ldi	r19, 0x02	; 2
 862:	f7 01       	movw	r30, r14
 864:	a7 fe       	sbrs	r10, 7
 866:	08 c0       	rjmp	.+16     	; 0x878 <vfprintf+0x2e8>
 868:	60 81       	ld	r22, Z
 86a:	71 81       	ldd	r23, Z+1	; 0x01
 86c:	82 81       	ldd	r24, Z+2	; 0x02
 86e:	93 81       	ldd	r25, Z+3	; 0x03
 870:	a7 01       	movw	r20, r14
 872:	4c 5f       	subi	r20, 0xFC	; 252
 874:	5f 4f       	sbci	r21, 0xFF	; 255
 876:	07 c0       	rjmp	.+14     	; 0x886 <vfprintf+0x2f6>
 878:	60 81       	ld	r22, Z
 87a:	71 81       	ldd	r23, Z+1	; 0x01
 87c:	80 e0       	ldi	r24, 0x00	; 0
 87e:	90 e0       	ldi	r25, 0x00	; 0
 880:	a7 01       	movw	r20, r14
 882:	4e 5f       	subi	r20, 0xFE	; 254
 884:	5f 4f       	sbci	r21, 0xFF	; 255
 886:	7a 01       	movw	r14, r20
 888:	ae 01       	movw	r20, r28
 88a:	4f 5f       	subi	r20, 0xFF	; 255
 88c:	5f 4f       	sbci	r21, 0xFF	; 255
 88e:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <__ultoa_invert>
 892:	48 2e       	mov	r4, r24
 894:	5c 85       	ldd	r21, Y+12	; 0x0c
 896:	45 1a       	sub	r4, r21
 898:	8a 2d       	mov	r24, r10
 89a:	8f 77       	andi	r24, 0x7F	; 127
 89c:	38 2e       	mov	r3, r24
 89e:	36 fe       	sbrs	r3, 6
 8a0:	0d c0       	rjmp	.+26     	; 0x8bc <vfprintf+0x32c>
 8a2:	93 2d       	mov	r25, r3
 8a4:	9e 7f       	andi	r25, 0xFE	; 254
 8a6:	a9 2e       	mov	r10, r25
 8a8:	4b 14       	cp	r4, r11
 8aa:	58 f4       	brcc	.+22     	; 0x8c2 <vfprintf+0x332>
 8ac:	34 fe       	sbrs	r3, 4
 8ae:	0b c0       	rjmp	.+22     	; 0x8c6 <vfprintf+0x336>
 8b0:	32 fc       	sbrc	r3, 2
 8b2:	09 c0       	rjmp	.+18     	; 0x8c6 <vfprintf+0x336>
 8b4:	a3 2d       	mov	r26, r3
 8b6:	ae 7e       	andi	r26, 0xEE	; 238
 8b8:	aa 2e       	mov	r10, r26
 8ba:	05 c0       	rjmp	.+10     	; 0x8c6 <vfprintf+0x336>
 8bc:	14 2d       	mov	r17, r4
 8be:	a3 2c       	mov	r10, r3
 8c0:	03 c0       	rjmp	.+6      	; 0x8c8 <vfprintf+0x338>
 8c2:	14 2d       	mov	r17, r4
 8c4:	01 c0       	rjmp	.+2      	; 0x8c8 <vfprintf+0x338>
 8c6:	1b 2d       	mov	r17, r11
 8c8:	a4 fe       	sbrs	r10, 4
 8ca:	0e c0       	rjmp	.+28     	; 0x8e8 <vfprintf+0x358>
 8cc:	fe 01       	movw	r30, r28
 8ce:	e4 0d       	add	r30, r4
 8d0:	f1 1d       	adc	r31, r1
 8d2:	80 81       	ld	r24, Z
 8d4:	80 33       	cpi	r24, 0x30	; 48
 8d6:	21 f4       	brne	.+8      	; 0x8e0 <vfprintf+0x350>
 8d8:	ea 2d       	mov	r30, r10
 8da:	e9 7e       	andi	r30, 0xE9	; 233
 8dc:	ae 2e       	mov	r10, r30
 8de:	08 c0       	rjmp	.+16     	; 0x8f0 <vfprintf+0x360>
 8e0:	a2 fe       	sbrs	r10, 2
 8e2:	05 c0       	rjmp	.+10     	; 0x8ee <vfprintf+0x35e>
 8e4:	1e 5f       	subi	r17, 0xFE	; 254
 8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <vfprintf+0x360>
 8e8:	8a 2d       	mov	r24, r10
 8ea:	86 78       	andi	r24, 0x86	; 134
 8ec:	09 f0       	breq	.+2      	; 0x8f0 <vfprintf+0x360>
 8ee:	1f 5f       	subi	r17, 0xFF	; 255
 8f0:	a3 fc       	sbrc	r10, 3
 8f2:	11 c0       	rjmp	.+34     	; 0x916 <vfprintf+0x386>
 8f4:	a0 fe       	sbrs	r10, 0
 8f6:	06 c0       	rjmp	.+12     	; 0x904 <vfprintf+0x374>
 8f8:	10 17       	cp	r17, r16
 8fa:	88 f4       	brcc	.+34     	; 0x91e <vfprintf+0x38e>
 8fc:	04 0d       	add	r16, r4
 8fe:	b0 2e       	mov	r11, r16
 900:	b1 1a       	sub	r11, r17
 902:	0e c0       	rjmp	.+28     	; 0x920 <vfprintf+0x390>
 904:	10 17       	cp	r17, r16
 906:	60 f4       	brcc	.+24     	; 0x920 <vfprintf+0x390>
 908:	b6 01       	movw	r22, r12
 90a:	80 e2       	ldi	r24, 0x20	; 32
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <fputc>
 912:	1f 5f       	subi	r17, 0xFF	; 255
 914:	f7 cf       	rjmp	.-18     	; 0x904 <vfprintf+0x374>
 916:	10 17       	cp	r17, r16
 918:	18 f4       	brcc	.+6      	; 0x920 <vfprintf+0x390>
 91a:	01 1b       	sub	r16, r17
 91c:	02 c0       	rjmp	.+4      	; 0x922 <vfprintf+0x392>
 91e:	b4 2c       	mov	r11, r4
 920:	00 e0       	ldi	r16, 0x00	; 0
 922:	a4 fe       	sbrs	r10, 4
 924:	10 c0       	rjmp	.+32     	; 0x946 <vfprintf+0x3b6>
 926:	b6 01       	movw	r22, r12
 928:	80 e3       	ldi	r24, 0x30	; 48
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <fputc>
 930:	a2 fe       	sbrs	r10, 2
 932:	17 c0       	rjmp	.+46     	; 0x962 <vfprintf+0x3d2>
 934:	a1 fc       	sbrc	r10, 1
 936:	03 c0       	rjmp	.+6      	; 0x93e <vfprintf+0x3ae>
 938:	88 e7       	ldi	r24, 0x78	; 120
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	02 c0       	rjmp	.+4      	; 0x942 <vfprintf+0x3b2>
 93e:	88 e5       	ldi	r24, 0x58	; 88
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	b6 01       	movw	r22, r12
 944:	0c c0       	rjmp	.+24     	; 0x95e <vfprintf+0x3ce>
 946:	8a 2d       	mov	r24, r10
 948:	86 78       	andi	r24, 0x86	; 134
 94a:	59 f0       	breq	.+22     	; 0x962 <vfprintf+0x3d2>
 94c:	a1 fe       	sbrs	r10, 1
 94e:	02 c0       	rjmp	.+4      	; 0x954 <vfprintf+0x3c4>
 950:	8b e2       	ldi	r24, 0x2B	; 43
 952:	01 c0       	rjmp	.+2      	; 0x956 <vfprintf+0x3c6>
 954:	80 e2       	ldi	r24, 0x20	; 32
 956:	a7 fc       	sbrc	r10, 7
 958:	8d e2       	ldi	r24, 0x2D	; 45
 95a:	b6 01       	movw	r22, r12
 95c:	90 e0       	ldi	r25, 0x00	; 0
 95e:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <fputc>
 962:	4b 14       	cp	r4, r11
 964:	38 f4       	brcc	.+14     	; 0x974 <vfprintf+0x3e4>
 966:	b6 01       	movw	r22, r12
 968:	80 e3       	ldi	r24, 0x30	; 48
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <fputc>
 970:	ba 94       	dec	r11
 972:	f7 cf       	rjmp	.-18     	; 0x962 <vfprintf+0x3d2>
 974:	4a 94       	dec	r4
 976:	e1 e0       	ldi	r30, 0x01	; 1
 978:	f0 e0       	ldi	r31, 0x00	; 0
 97a:	ec 0f       	add	r30, r28
 97c:	fd 1f       	adc	r31, r29
 97e:	e4 0d       	add	r30, r4
 980:	f1 1d       	adc	r31, r1
 982:	80 81       	ld	r24, Z
 984:	b6 01       	movw	r22, r12
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <fputc>
 98c:	41 10       	cpse	r4, r1
 98e:	f2 cf       	rjmp	.-28     	; 0x974 <vfprintf+0x3e4>
 990:	00 23       	and	r16, r16
 992:	09 f4       	brne	.+2      	; 0x996 <vfprintf+0x406>
 994:	2c ce       	rjmp	.-936    	; 0x5ee <vfprintf+0x5e>
 996:	b6 01       	movw	r22, r12
 998:	80 e2       	ldi	r24, 0x20	; 32
 99a:	90 e0       	ldi	r25, 0x00	; 0
 99c:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <fputc>
 9a0:	01 50       	subi	r16, 0x01	; 1
 9a2:	f6 cf       	rjmp	.-20     	; 0x990 <vfprintf+0x400>
 9a4:	f6 01       	movw	r30, r12
 9a6:	87 81       	ldd	r24, Z+7	; 0x07
 9a8:	90 85       	ldd	r25, Z+8	; 0x08
 9aa:	02 c0       	rjmp	.+4      	; 0x9b0 <vfprintf+0x420>
 9ac:	8f ef       	ldi	r24, 0xFF	; 255
 9ae:	9f ef       	ldi	r25, 0xFF	; 255
 9b0:	62 96       	adiw	r28, 0x12	; 18
 9b2:	0f b6       	in	r0, 0x3f	; 63
 9b4:	f8 94       	cli
 9b6:	de bf       	out	0x3e, r29	; 62
 9b8:	0f be       	out	0x3f, r0	; 63
 9ba:	cd bf       	out	0x3d, r28	; 61
 9bc:	df 91       	pop	r29
 9be:	cf 91       	pop	r28
 9c0:	1f 91       	pop	r17
 9c2:	0f 91       	pop	r16
 9c4:	ff 90       	pop	r15
 9c6:	ef 90       	pop	r14
 9c8:	df 90       	pop	r13
 9ca:	cf 90       	pop	r12
 9cc:	bf 90       	pop	r11
 9ce:	af 90       	pop	r10
 9d0:	9f 90       	pop	r9
 9d2:	8f 90       	pop	r8
 9d4:	7f 90       	pop	r7
 9d6:	6f 90       	pop	r6
 9d8:	4f 90       	pop	r4
 9da:	3f 90       	pop	r3
 9dc:	2f 90       	pop	r2
 9de:	08 95       	ret

Disassembly of section .text.avrlibc:

000009e0 <dtoa_prf>:
 9e0:	8f 92       	push	r8
 9e2:	9f 92       	push	r9
 9e4:	af 92       	push	r10
 9e6:	bf 92       	push	r11
 9e8:	cf 92       	push	r12
 9ea:	df 92       	push	r13
 9ec:	ef 92       	push	r14
 9ee:	ff 92       	push	r15
 9f0:	0f 93       	push	r16
 9f2:	1f 93       	push	r17
 9f4:	cf 93       	push	r28
 9f6:	df 93       	push	r29
 9f8:	cd b7       	in	r28, 0x3d	; 61
 9fa:	de b7       	in	r29, 0x3e	; 62
 9fc:	29 97       	sbiw	r28, 0x09	; 9
 9fe:	0f b6       	in	r0, 0x3f	; 63
 a00:	f8 94       	cli
 a02:	de bf       	out	0x3e, r29	; 62
 a04:	0f be       	out	0x3f, r0	; 63
 a06:	cd bf       	out	0x3d, r28	; 61
 a08:	6a 01       	movw	r12, r20
 a0a:	12 2f       	mov	r17, r18
 a0c:	b0 2e       	mov	r11, r16
 a0e:	2b e3       	ldi	r18, 0x3B	; 59
 a10:	20 17       	cp	r18, r16
 a12:	20 f0       	brcs	.+8      	; 0xa1c <dtoa_prf+0x3c>
 a14:	ff 24       	eor	r15, r15
 a16:	f3 94       	inc	r15
 a18:	f0 0e       	add	r15, r16
 a1a:	02 c0       	rjmp	.+4      	; 0xa20 <dtoa_prf+0x40>
 a1c:	2c e3       	ldi	r18, 0x3C	; 60
 a1e:	f2 2e       	mov	r15, r18
 a20:	0f 2d       	mov	r16, r15
 a22:	27 e0       	ldi	r18, 0x07	; 7
 a24:	ae 01       	movw	r20, r28
 a26:	4f 5f       	subi	r20, 0xFF	; 255
 a28:	5f 4f       	sbci	r21, 0xFF	; 255
 a2a:	0e 94 bb 08 	call	0x1176	; 0x1176 <__ftoa_engine>
 a2e:	bc 01       	movw	r22, r24
 a30:	49 81       	ldd	r20, Y+1	; 0x01
 a32:	84 2f       	mov	r24, r20
 a34:	89 70       	andi	r24, 0x09	; 9
 a36:	81 30       	cpi	r24, 0x01	; 1
 a38:	31 f0       	breq	.+12     	; 0xa46 <dtoa_prf+0x66>
 a3a:	e1 fc       	sbrc	r14, 1
 a3c:	06 c0       	rjmp	.+12     	; 0xa4a <dtoa_prf+0x6a>
 a3e:	e0 fe       	sbrs	r14, 0
 a40:	06 c0       	rjmp	.+12     	; 0xa4e <dtoa_prf+0x6e>
 a42:	90 e2       	ldi	r25, 0x20	; 32
 a44:	05 c0       	rjmp	.+10     	; 0xa50 <dtoa_prf+0x70>
 a46:	9d e2       	ldi	r25, 0x2D	; 45
 a48:	03 c0       	rjmp	.+6      	; 0xa50 <dtoa_prf+0x70>
 a4a:	9b e2       	ldi	r25, 0x2B	; 43
 a4c:	01 c0       	rjmp	.+2      	; 0xa50 <dtoa_prf+0x70>
 a4e:	90 e0       	ldi	r25, 0x00	; 0
 a50:	5e 2d       	mov	r21, r14
 a52:	50 71       	andi	r21, 0x10	; 16
 a54:	43 ff       	sbrs	r20, 3
 a56:	3c c0       	rjmp	.+120    	; 0xad0 <dtoa_prf+0xf0>
 a58:	91 11       	cpse	r25, r1
 a5a:	02 c0       	rjmp	.+4      	; 0xa60 <dtoa_prf+0x80>
 a5c:	83 e0       	ldi	r24, 0x03	; 3
 a5e:	01 c0       	rjmp	.+2      	; 0xa62 <dtoa_prf+0x82>
 a60:	84 e0       	ldi	r24, 0x04	; 4
 a62:	81 17       	cp	r24, r17
 a64:	18 f4       	brcc	.+6      	; 0xa6c <dtoa_prf+0x8c>
 a66:	21 2f       	mov	r18, r17
 a68:	28 1b       	sub	r18, r24
 a6a:	01 c0       	rjmp	.+2      	; 0xa6e <dtoa_prf+0x8e>
 a6c:	20 e0       	ldi	r18, 0x00	; 0
 a6e:	51 11       	cpse	r21, r1
 a70:	0b c0       	rjmp	.+22     	; 0xa88 <dtoa_prf+0xa8>
 a72:	f6 01       	movw	r30, r12
 a74:	82 2f       	mov	r24, r18
 a76:	30 e2       	ldi	r19, 0x20	; 32
 a78:	88 23       	and	r24, r24
 a7a:	19 f0       	breq	.+6      	; 0xa82 <dtoa_prf+0xa2>
 a7c:	31 93       	st	Z+, r19
 a7e:	81 50       	subi	r24, 0x01	; 1
 a80:	fb cf       	rjmp	.-10     	; 0xa78 <dtoa_prf+0x98>
 a82:	c2 0e       	add	r12, r18
 a84:	d1 1c       	adc	r13, r1
 a86:	20 e0       	ldi	r18, 0x00	; 0
 a88:	99 23       	and	r25, r25
 a8a:	29 f0       	breq	.+10     	; 0xa96 <dtoa_prf+0xb6>
 a8c:	d6 01       	movw	r26, r12
 a8e:	9c 93       	st	X, r25
 a90:	f6 01       	movw	r30, r12
 a92:	31 96       	adiw	r30, 0x01	; 1
 a94:	6f 01       	movw	r12, r30
 a96:	c6 01       	movw	r24, r12
 a98:	03 96       	adiw	r24, 0x03	; 3
 a9a:	e2 fe       	sbrs	r14, 2
 a9c:	0a c0       	rjmp	.+20     	; 0xab2 <dtoa_prf+0xd2>
 a9e:	3e e4       	ldi	r19, 0x4E	; 78
 aa0:	d6 01       	movw	r26, r12
 aa2:	3c 93       	st	X, r19
 aa4:	41 e4       	ldi	r20, 0x41	; 65
 aa6:	11 96       	adiw	r26, 0x01	; 1
 aa8:	4c 93       	st	X, r20
 aaa:	11 97       	sbiw	r26, 0x01	; 1
 aac:	12 96       	adiw	r26, 0x02	; 2
 aae:	3c 93       	st	X, r19
 ab0:	06 c0       	rjmp	.+12     	; 0xabe <dtoa_prf+0xde>
 ab2:	3e e6       	ldi	r19, 0x6E	; 110
 ab4:	f6 01       	movw	r30, r12
 ab6:	30 83       	st	Z, r19
 ab8:	41 e6       	ldi	r20, 0x61	; 97
 aba:	41 83       	std	Z+1, r20	; 0x01
 abc:	32 83       	std	Z+2, r19	; 0x02
 abe:	fc 01       	movw	r30, r24
 ac0:	32 2f       	mov	r19, r18
 ac2:	40 e2       	ldi	r20, 0x20	; 32
 ac4:	33 23       	and	r19, r19
 ac6:	09 f4       	brne	.+2      	; 0xaca <dtoa_prf+0xea>
 ac8:	42 c0       	rjmp	.+132    	; 0xb4e <dtoa_prf+0x16e>
 aca:	41 93       	st	Z+, r20
 acc:	31 50       	subi	r19, 0x01	; 1
 ace:	fa cf       	rjmp	.-12     	; 0xac4 <dtoa_prf+0xe4>
 ad0:	42 ff       	sbrs	r20, 2
 ad2:	44 c0       	rjmp	.+136    	; 0xb5c <dtoa_prf+0x17c>
 ad4:	91 11       	cpse	r25, r1
 ad6:	02 c0       	rjmp	.+4      	; 0xadc <dtoa_prf+0xfc>
 ad8:	83 e0       	ldi	r24, 0x03	; 3
 ada:	01 c0       	rjmp	.+2      	; 0xade <dtoa_prf+0xfe>
 adc:	84 e0       	ldi	r24, 0x04	; 4
 ade:	81 17       	cp	r24, r17
 ae0:	18 f4       	brcc	.+6      	; 0xae8 <dtoa_prf+0x108>
 ae2:	21 2f       	mov	r18, r17
 ae4:	28 1b       	sub	r18, r24
 ae6:	01 c0       	rjmp	.+2      	; 0xaea <dtoa_prf+0x10a>
 ae8:	20 e0       	ldi	r18, 0x00	; 0
 aea:	51 11       	cpse	r21, r1
 aec:	0b c0       	rjmp	.+22     	; 0xb04 <dtoa_prf+0x124>
 aee:	f6 01       	movw	r30, r12
 af0:	82 2f       	mov	r24, r18
 af2:	30 e2       	ldi	r19, 0x20	; 32
 af4:	88 23       	and	r24, r24
 af6:	19 f0       	breq	.+6      	; 0xafe <dtoa_prf+0x11e>
 af8:	31 93       	st	Z+, r19
 afa:	81 50       	subi	r24, 0x01	; 1
 afc:	fb cf       	rjmp	.-10     	; 0xaf4 <dtoa_prf+0x114>
 afe:	c2 0e       	add	r12, r18
 b00:	d1 1c       	adc	r13, r1
 b02:	20 e0       	ldi	r18, 0x00	; 0
 b04:	99 23       	and	r25, r25
 b06:	29 f0       	breq	.+10     	; 0xb12 <dtoa_prf+0x132>
 b08:	d6 01       	movw	r26, r12
 b0a:	9c 93       	st	X, r25
 b0c:	f6 01       	movw	r30, r12
 b0e:	31 96       	adiw	r30, 0x01	; 1
 b10:	6f 01       	movw	r12, r30
 b12:	c6 01       	movw	r24, r12
 b14:	03 96       	adiw	r24, 0x03	; 3
 b16:	e2 fe       	sbrs	r14, 2
 b18:	0b c0       	rjmp	.+22     	; 0xb30 <dtoa_prf+0x150>
 b1a:	39 e4       	ldi	r19, 0x49	; 73
 b1c:	d6 01       	movw	r26, r12
 b1e:	3c 93       	st	X, r19
 b20:	3e e4       	ldi	r19, 0x4E	; 78
 b22:	11 96       	adiw	r26, 0x01	; 1
 b24:	3c 93       	st	X, r19
 b26:	11 97       	sbiw	r26, 0x01	; 1
 b28:	36 e4       	ldi	r19, 0x46	; 70
 b2a:	12 96       	adiw	r26, 0x02	; 2
 b2c:	3c 93       	st	X, r19
 b2e:	07 c0       	rjmp	.+14     	; 0xb3e <dtoa_prf+0x15e>
 b30:	39 e6       	ldi	r19, 0x69	; 105
 b32:	f6 01       	movw	r30, r12
 b34:	30 83       	st	Z, r19
 b36:	3e e6       	ldi	r19, 0x6E	; 110
 b38:	31 83       	std	Z+1, r19	; 0x01
 b3a:	36 e6       	ldi	r19, 0x66	; 102
 b3c:	32 83       	std	Z+2, r19	; 0x02
 b3e:	fc 01       	movw	r30, r24
 b40:	32 2f       	mov	r19, r18
 b42:	40 e2       	ldi	r20, 0x20	; 32
 b44:	33 23       	and	r19, r19
 b46:	19 f0       	breq	.+6      	; 0xb4e <dtoa_prf+0x16e>
 b48:	41 93       	st	Z+, r20
 b4a:	31 50       	subi	r19, 0x01	; 1
 b4c:	fb cf       	rjmp	.-10     	; 0xb44 <dtoa_prf+0x164>
 b4e:	fc 01       	movw	r30, r24
 b50:	e2 0f       	add	r30, r18
 b52:	f1 1d       	adc	r31, r1
 b54:	10 82       	st	Z, r1
 b56:	8e ef       	ldi	r24, 0xFE	; 254
 b58:	9f ef       	ldi	r25, 0xFF	; 255
 b5a:	a6 c0       	rjmp	.+332    	; 0xca8 <dtoa_prf+0x2c8>
 b5c:	21 e0       	ldi	r18, 0x01	; 1
 b5e:	30 e0       	ldi	r19, 0x00	; 0
 b60:	91 11       	cpse	r25, r1
 b62:	02 c0       	rjmp	.+4      	; 0xb68 <dtoa_prf+0x188>
 b64:	20 e0       	ldi	r18, 0x00	; 0
 b66:	30 e0       	ldi	r19, 0x00	; 0
 b68:	16 16       	cp	r1, r22
 b6a:	17 06       	cpc	r1, r23
 b6c:	1c f4       	brge	.+6      	; 0xb74 <dtoa_prf+0x194>
 b6e:	fb 01       	movw	r30, r22
 b70:	31 96       	adiw	r30, 0x01	; 1
 b72:	02 c0       	rjmp	.+4      	; 0xb78 <dtoa_prf+0x198>
 b74:	e1 e0       	ldi	r30, 0x01	; 1
 b76:	f0 e0       	ldi	r31, 0x00	; 0
 b78:	2e 0f       	add	r18, r30
 b7a:	3f 1f       	adc	r19, r31
 b7c:	bb 20       	and	r11, r11
 b7e:	21 f0       	breq	.+8      	; 0xb88 <dtoa_prf+0x1a8>
 b80:	eb 2d       	mov	r30, r11
 b82:	f0 e0       	ldi	r31, 0x00	; 0
 b84:	31 96       	adiw	r30, 0x01	; 1
 b86:	02 c0       	rjmp	.+4      	; 0xb8c <dtoa_prf+0x1ac>
 b88:	e0 e0       	ldi	r30, 0x00	; 0
 b8a:	f0 e0       	ldi	r31, 0x00	; 0
 b8c:	2e 0f       	add	r18, r30
 b8e:	3f 1f       	adc	r19, r31
 b90:	e1 2f       	mov	r30, r17
 b92:	f0 e0       	ldi	r31, 0x00	; 0
 b94:	2e 17       	cp	r18, r30
 b96:	3f 07       	cpc	r19, r31
 b98:	1c f4       	brge	.+6      	; 0xba0 <dtoa_prf+0x1c0>
 b9a:	12 1b       	sub	r17, r18
 b9c:	21 2f       	mov	r18, r17
 b9e:	01 c0       	rjmp	.+2      	; 0xba2 <dtoa_prf+0x1c2>
 ba0:	20 e0       	ldi	r18, 0x00	; 0
 ba2:	8e 2d       	mov	r24, r14
 ba4:	88 71       	andi	r24, 0x18	; 24
 ba6:	59 f4       	brne	.+22     	; 0xbbe <dtoa_prf+0x1de>
 ba8:	f6 01       	movw	r30, r12
 baa:	82 2f       	mov	r24, r18
 bac:	30 e2       	ldi	r19, 0x20	; 32
 bae:	88 23       	and	r24, r24
 bb0:	19 f0       	breq	.+6      	; 0xbb8 <dtoa_prf+0x1d8>
 bb2:	31 93       	st	Z+, r19
 bb4:	81 50       	subi	r24, 0x01	; 1
 bb6:	fb cf       	rjmp	.-10     	; 0xbae <dtoa_prf+0x1ce>
 bb8:	c2 0e       	add	r12, r18
 bba:	d1 1c       	adc	r13, r1
 bbc:	20 e0       	ldi	r18, 0x00	; 0
 bbe:	99 23       	and	r25, r25
 bc0:	29 f0       	breq	.+10     	; 0xbcc <dtoa_prf+0x1ec>
 bc2:	d6 01       	movw	r26, r12
 bc4:	9c 93       	st	X, r25
 bc6:	f6 01       	movw	r30, r12
 bc8:	31 96       	adiw	r30, 0x01	; 1
 bca:	6f 01       	movw	r12, r30
 bcc:	51 11       	cpse	r21, r1
 bce:	0b c0       	rjmp	.+22     	; 0xbe6 <dtoa_prf+0x206>
 bd0:	f6 01       	movw	r30, r12
 bd2:	82 2f       	mov	r24, r18
 bd4:	90 e3       	ldi	r25, 0x30	; 48
 bd6:	88 23       	and	r24, r24
 bd8:	19 f0       	breq	.+6      	; 0xbe0 <dtoa_prf+0x200>
 bda:	91 93       	st	Z+, r25
 bdc:	81 50       	subi	r24, 0x01	; 1
 bde:	fb cf       	rjmp	.-10     	; 0xbd6 <dtoa_prf+0x1f6>
 be0:	c2 0e       	add	r12, r18
 be2:	d1 1c       	adc	r13, r1
 be4:	20 e0       	ldi	r18, 0x00	; 0
 be6:	0f 2d       	mov	r16, r15
 be8:	06 0f       	add	r16, r22
 bea:	9a 81       	ldd	r25, Y+2	; 0x02
 bec:	34 2f       	mov	r19, r20
 bee:	30 71       	andi	r19, 0x10	; 16
 bf0:	44 ff       	sbrs	r20, 4
 bf2:	03 c0       	rjmp	.+6      	; 0xbfa <dtoa_prf+0x21a>
 bf4:	91 33       	cpi	r25, 0x31	; 49
 bf6:	09 f4       	brne	.+2      	; 0xbfa <dtoa_prf+0x21a>
 bf8:	01 50       	subi	r16, 0x01	; 1
 bfa:	10 16       	cp	r1, r16
 bfc:	24 f4       	brge	.+8      	; 0xc06 <dtoa_prf+0x226>
 bfe:	09 30       	cpi	r16, 0x09	; 9
 c00:	18 f0       	brcs	.+6      	; 0xc08 <dtoa_prf+0x228>
 c02:	08 e0       	ldi	r16, 0x08	; 8
 c04:	01 c0       	rjmp	.+2      	; 0xc08 <dtoa_prf+0x228>
 c06:	01 e0       	ldi	r16, 0x01	; 1
 c08:	ab 01       	movw	r20, r22
 c0a:	77 ff       	sbrs	r23, 7
 c0c:	02 c0       	rjmp	.+4      	; 0xc12 <dtoa_prf+0x232>
 c0e:	40 e0       	ldi	r20, 0x00	; 0
 c10:	50 e0       	ldi	r21, 0x00	; 0
 c12:	fb 01       	movw	r30, r22
 c14:	e4 1b       	sub	r30, r20
 c16:	f5 0b       	sbc	r31, r21
 c18:	a1 e0       	ldi	r26, 0x01	; 1
 c1a:	b0 e0       	ldi	r27, 0x00	; 0
 c1c:	ac 0f       	add	r26, r28
 c1e:	bd 1f       	adc	r27, r29
 c20:	ea 0f       	add	r30, r26
 c22:	fb 1f       	adc	r31, r27
 c24:	8e e2       	ldi	r24, 0x2E	; 46
 c26:	a8 2e       	mov	r10, r24
 c28:	4b 01       	movw	r8, r22
 c2a:	80 1a       	sub	r8, r16
 c2c:	91 08       	sbc	r9, r1
 c2e:	0b 2d       	mov	r16, r11
 c30:	10 e0       	ldi	r17, 0x00	; 0
 c32:	11 95       	neg	r17
 c34:	01 95       	neg	r16
 c36:	11 09       	sbc	r17, r1
 c38:	4f 3f       	cpi	r20, 0xFF	; 255
 c3a:	bf ef       	ldi	r27, 0xFF	; 255
 c3c:	5b 07       	cpc	r21, r27
 c3e:	21 f4       	brne	.+8      	; 0xc48 <dtoa_prf+0x268>
 c40:	d6 01       	movw	r26, r12
 c42:	ac 92       	st	X, r10
 c44:	11 96       	adiw	r26, 0x01	; 1
 c46:	6d 01       	movw	r12, r26
 c48:	64 17       	cp	r22, r20
 c4a:	75 07       	cpc	r23, r21
 c4c:	2c f0       	brlt	.+10     	; 0xc58 <dtoa_prf+0x278>
 c4e:	84 16       	cp	r8, r20
 c50:	95 06       	cpc	r9, r21
 c52:	14 f4       	brge	.+4      	; 0xc58 <dtoa_prf+0x278>
 c54:	81 81       	ldd	r24, Z+1	; 0x01
 c56:	01 c0       	rjmp	.+2      	; 0xc5a <dtoa_prf+0x27a>
 c58:	80 e3       	ldi	r24, 0x30	; 48
 c5a:	41 50       	subi	r20, 0x01	; 1
 c5c:	51 09       	sbc	r21, r1
 c5e:	31 96       	adiw	r30, 0x01	; 1
 c60:	d6 01       	movw	r26, r12
 c62:	11 96       	adiw	r26, 0x01	; 1
 c64:	7d 01       	movw	r14, r26
 c66:	40 17       	cp	r20, r16
 c68:	51 07       	cpc	r21, r17
 c6a:	24 f0       	brlt	.+8      	; 0xc74 <dtoa_prf+0x294>
 c6c:	d6 01       	movw	r26, r12
 c6e:	8c 93       	st	X, r24
 c70:	67 01       	movw	r12, r14
 c72:	e2 cf       	rjmp	.-60     	; 0xc38 <dtoa_prf+0x258>
 c74:	64 17       	cp	r22, r20
 c76:	75 07       	cpc	r23, r21
 c78:	39 f4       	brne	.+14     	; 0xc88 <dtoa_prf+0x2a8>
 c7a:	96 33       	cpi	r25, 0x36	; 54
 c7c:	20 f4       	brcc	.+8      	; 0xc86 <dtoa_prf+0x2a6>
 c7e:	95 33       	cpi	r25, 0x35	; 53
 c80:	19 f4       	brne	.+6      	; 0xc88 <dtoa_prf+0x2a8>
 c82:	31 11       	cpse	r19, r1
 c84:	01 c0       	rjmp	.+2      	; 0xc88 <dtoa_prf+0x2a8>
 c86:	81 e3       	ldi	r24, 0x31	; 49
 c88:	f6 01       	movw	r30, r12
 c8a:	80 83       	st	Z, r24
 c8c:	f7 01       	movw	r30, r14
 c8e:	82 2f       	mov	r24, r18
 c90:	90 e2       	ldi	r25, 0x20	; 32
 c92:	88 23       	and	r24, r24
 c94:	19 f0       	breq	.+6      	; 0xc9c <dtoa_prf+0x2bc>
 c96:	91 93       	st	Z+, r25
 c98:	81 50       	subi	r24, 0x01	; 1
 c9a:	fb cf       	rjmp	.-10     	; 0xc92 <dtoa_prf+0x2b2>
 c9c:	f7 01       	movw	r30, r14
 c9e:	e2 0f       	add	r30, r18
 ca0:	f1 1d       	adc	r31, r1
 ca2:	10 82       	st	Z, r1
 ca4:	80 e0       	ldi	r24, 0x00	; 0
 ca6:	90 e0       	ldi	r25, 0x00	; 0
 ca8:	29 96       	adiw	r28, 0x09	; 9
 caa:	0f b6       	in	r0, 0x3f	; 63
 cac:	f8 94       	cli
 cae:	de bf       	out	0x3e, r29	; 62
 cb0:	0f be       	out	0x3f, r0	; 63
 cb2:	cd bf       	out	0x3d, r28	; 61
 cb4:	df 91       	pop	r29
 cb6:	cf 91       	pop	r28
 cb8:	1f 91       	pop	r17
 cba:	0f 91       	pop	r16
 cbc:	ff 90       	pop	r15
 cbe:	ef 90       	pop	r14
 cc0:	df 90       	pop	r13
 cc2:	cf 90       	pop	r12
 cc4:	bf 90       	pop	r11
 cc6:	af 90       	pop	r10
 cc8:	9f 90       	pop	r9
 cca:	8f 90       	pop	r8
 ccc:	08 95       	ret

Disassembly of section .text.avrlibc:

00001176 <__ftoa_engine>:
    1176:	28 30       	cpi	r18, 0x08	; 8
    1178:	08 f0       	brcs	.+2      	; 0x117c <__ftoa_engine+0x6>
    117a:	27 e0       	ldi	r18, 0x07	; 7
    117c:	33 27       	eor	r19, r19
    117e:	da 01       	movw	r26, r20
    1180:	99 0f       	add	r25, r25
    1182:	31 1d       	adc	r19, r1
    1184:	87 fd       	sbrc	r24, 7
    1186:	91 60       	ori	r25, 0x01	; 1
    1188:	00 96       	adiw	r24, 0x00	; 0
    118a:	61 05       	cpc	r22, r1
    118c:	71 05       	cpc	r23, r1
    118e:	39 f4       	brne	.+14     	; 0x119e <__ftoa_engine+0x28>
    1190:	32 60       	ori	r19, 0x02	; 2
    1192:	2e 5f       	subi	r18, 0xFE	; 254
    1194:	3d 93       	st	X+, r19
    1196:	30 e3       	ldi	r19, 0x30	; 48
    1198:	2a 95       	dec	r18
    119a:	e1 f7       	brne	.-8      	; 0x1194 <__ftoa_engine+0x1e>
    119c:	08 95       	ret
    119e:	9f 3f       	cpi	r25, 0xFF	; 255
    11a0:	30 f0       	brcs	.+12     	; 0x11ae <__ftoa_engine+0x38>
    11a2:	80 38       	cpi	r24, 0x80	; 128
    11a4:	71 05       	cpc	r23, r1
    11a6:	61 05       	cpc	r22, r1
    11a8:	09 f0       	breq	.+2      	; 0x11ac <__ftoa_engine+0x36>
    11aa:	3c 5f       	subi	r19, 0xFC	; 252
    11ac:	3c 5f       	subi	r19, 0xFC	; 252
    11ae:	3d 93       	st	X+, r19
    11b0:	91 30       	cpi	r25, 0x01	; 1
    11b2:	08 f0       	brcs	.+2      	; 0x11b6 <__ftoa_engine+0x40>
    11b4:	80 68       	ori	r24, 0x80	; 128
    11b6:	91 1d       	adc	r25, r1
    11b8:	df 93       	push	r29
    11ba:	cf 93       	push	r28
    11bc:	1f 93       	push	r17
    11be:	0f 93       	push	r16
    11c0:	ff 92       	push	r15
    11c2:	ef 92       	push	r14
    11c4:	19 2f       	mov	r17, r25
    11c6:	98 7f       	andi	r25, 0xF8	; 248
    11c8:	96 95       	lsr	r25
    11ca:	e9 2f       	mov	r30, r25
    11cc:	96 95       	lsr	r25
    11ce:	96 95       	lsr	r25
    11d0:	e9 0f       	add	r30, r25
    11d2:	ff 27       	eor	r31, r31
    11d4:	e8 58       	subi	r30, 0x88	; 136
    11d6:	fe 4f       	sbci	r31, 0xFE	; 254
    11d8:	99 27       	eor	r25, r25
    11da:	33 27       	eor	r19, r19
    11dc:	ee 24       	eor	r14, r14
    11de:	ff 24       	eor	r15, r15
    11e0:	a7 01       	movw	r20, r14
    11e2:	e7 01       	movw	r28, r14
    11e4:	05 90       	lpm	r0, Z+
    11e6:	08 94       	sec
    11e8:	07 94       	ror	r0
    11ea:	28 f4       	brcc	.+10     	; 0x11f6 <__ftoa_engine+0x80>
    11ec:	36 0f       	add	r19, r22
    11ee:	e7 1e       	adc	r14, r23
    11f0:	f8 1e       	adc	r15, r24
    11f2:	49 1f       	adc	r20, r25
    11f4:	51 1d       	adc	r21, r1
    11f6:	66 0f       	add	r22, r22
    11f8:	77 1f       	adc	r23, r23
    11fa:	88 1f       	adc	r24, r24
    11fc:	99 1f       	adc	r25, r25
    11fe:	06 94       	lsr	r0
    1200:	a1 f7       	brne	.-24     	; 0x11ea <__ftoa_engine+0x74>
    1202:	05 90       	lpm	r0, Z+
    1204:	07 94       	ror	r0
    1206:	28 f4       	brcc	.+10     	; 0x1212 <__ftoa_engine+0x9c>
    1208:	e7 0e       	add	r14, r23
    120a:	f8 1e       	adc	r15, r24
    120c:	49 1f       	adc	r20, r25
    120e:	56 1f       	adc	r21, r22
    1210:	c1 1d       	adc	r28, r1
    1212:	77 0f       	add	r23, r23
    1214:	88 1f       	adc	r24, r24
    1216:	99 1f       	adc	r25, r25
    1218:	66 1f       	adc	r22, r22
    121a:	06 94       	lsr	r0
    121c:	a1 f7       	brne	.-24     	; 0x1206 <__ftoa_engine+0x90>
    121e:	05 90       	lpm	r0, Z+
    1220:	07 94       	ror	r0
    1222:	28 f4       	brcc	.+10     	; 0x122e <__ftoa_engine+0xb8>
    1224:	f8 0e       	add	r15, r24
    1226:	49 1f       	adc	r20, r25
    1228:	56 1f       	adc	r21, r22
    122a:	c7 1f       	adc	r28, r23
    122c:	d1 1d       	adc	r29, r1
    122e:	88 0f       	add	r24, r24
    1230:	99 1f       	adc	r25, r25
    1232:	66 1f       	adc	r22, r22
    1234:	77 1f       	adc	r23, r23
    1236:	06 94       	lsr	r0
    1238:	a1 f7       	brne	.-24     	; 0x1222 <__ftoa_engine+0xac>
    123a:	05 90       	lpm	r0, Z+
    123c:	07 94       	ror	r0
    123e:	20 f4       	brcc	.+8      	; 0x1248 <__ftoa_engine+0xd2>
    1240:	49 0f       	add	r20, r25
    1242:	56 1f       	adc	r21, r22
    1244:	c7 1f       	adc	r28, r23
    1246:	d8 1f       	adc	r29, r24
    1248:	99 0f       	add	r25, r25
    124a:	66 1f       	adc	r22, r22
    124c:	77 1f       	adc	r23, r23
    124e:	88 1f       	adc	r24, r24
    1250:	06 94       	lsr	r0
    1252:	a9 f7       	brne	.-22     	; 0x123e <__ftoa_engine+0xc8>
    1254:	84 91       	lpm	r24, Z
    1256:	10 95       	com	r17
    1258:	17 70       	andi	r17, 0x07	; 7
    125a:	41 f0       	breq	.+16     	; 0x126c <__ftoa_engine+0xf6>
    125c:	d6 95       	lsr	r29
    125e:	c7 95       	ror	r28
    1260:	57 95       	ror	r21
    1262:	47 95       	ror	r20
    1264:	f7 94       	ror	r15
    1266:	e7 94       	ror	r14
    1268:	1a 95       	dec	r17
    126a:	c1 f7       	brne	.-16     	; 0x125c <__ftoa_engine+0xe6>
    126c:	ee e1       	ldi	r30, 0x1E	; 30
    126e:	f1 e0       	ldi	r31, 0x01	; 1
    1270:	68 94       	set
    1272:	15 90       	lpm	r1, Z+
    1274:	15 91       	lpm	r17, Z+
    1276:	35 91       	lpm	r19, Z+
    1278:	65 91       	lpm	r22, Z+
    127a:	95 91       	lpm	r25, Z+
    127c:	05 90       	lpm	r0, Z+
    127e:	7f e2       	ldi	r23, 0x2F	; 47
    1280:	73 95       	inc	r23
    1282:	e1 18       	sub	r14, r1
    1284:	f1 0a       	sbc	r15, r17
    1286:	43 0b       	sbc	r20, r19
    1288:	56 0b       	sbc	r21, r22
    128a:	c9 0b       	sbc	r28, r25
    128c:	d0 09       	sbc	r29, r0
    128e:	c0 f7       	brcc	.-16     	; 0x1280 <__ftoa_engine+0x10a>
    1290:	e1 0c       	add	r14, r1
    1292:	f1 1e       	adc	r15, r17
    1294:	43 1f       	adc	r20, r19
    1296:	56 1f       	adc	r21, r22
    1298:	c9 1f       	adc	r28, r25
    129a:	d0 1d       	adc	r29, r0
    129c:	7e f4       	brtc	.+30     	; 0x12bc <__ftoa_engine+0x146>
    129e:	70 33       	cpi	r23, 0x30	; 48
    12a0:	11 f4       	brne	.+4      	; 0x12a6 <__ftoa_engine+0x130>
    12a2:	8a 95       	dec	r24
    12a4:	e6 cf       	rjmp	.-52     	; 0x1272 <__ftoa_engine+0xfc>
    12a6:	e8 94       	clt
    12a8:	01 50       	subi	r16, 0x01	; 1
    12aa:	30 f0       	brcs	.+12     	; 0x12b8 <__ftoa_engine+0x142>
    12ac:	08 0f       	add	r16, r24
    12ae:	0a f4       	brpl	.+2      	; 0x12b2 <__ftoa_engine+0x13c>
    12b0:	00 27       	eor	r16, r16
    12b2:	02 17       	cp	r16, r18
    12b4:	08 f4       	brcc	.+2      	; 0x12b8 <__ftoa_engine+0x142>
    12b6:	20 2f       	mov	r18, r16
    12b8:	23 95       	inc	r18
    12ba:	02 2f       	mov	r16, r18
    12bc:	7a 33       	cpi	r23, 0x3A	; 58
    12be:	28 f0       	brcs	.+10     	; 0x12ca <__ftoa_engine+0x154>
    12c0:	79 e3       	ldi	r23, 0x39	; 57
    12c2:	7d 93       	st	X+, r23
    12c4:	2a 95       	dec	r18
    12c6:	e9 f7       	brne	.-6      	; 0x12c2 <__ftoa_engine+0x14c>
    12c8:	10 c0       	rjmp	.+32     	; 0x12ea <__ftoa_engine+0x174>
    12ca:	7d 93       	st	X+, r23
    12cc:	2a 95       	dec	r18
    12ce:	89 f6       	brne	.-94     	; 0x1272 <__ftoa_engine+0xfc>
    12d0:	06 94       	lsr	r0
    12d2:	97 95       	ror	r25
    12d4:	67 95       	ror	r22
    12d6:	37 95       	ror	r19
    12d8:	17 95       	ror	r17
    12da:	17 94       	ror	r1
    12dc:	e1 18       	sub	r14, r1
    12de:	f1 0a       	sbc	r15, r17
    12e0:	43 0b       	sbc	r20, r19
    12e2:	56 0b       	sbc	r21, r22
    12e4:	c9 0b       	sbc	r28, r25
    12e6:	d0 09       	sbc	r29, r0
    12e8:	98 f0       	brcs	.+38     	; 0x1310 <__ftoa_engine+0x19a>
    12ea:	23 95       	inc	r18
    12ec:	7e 91       	ld	r23, -X
    12ee:	73 95       	inc	r23
    12f0:	7a 33       	cpi	r23, 0x3A	; 58
    12f2:	08 f0       	brcs	.+2      	; 0x12f6 <__ftoa_engine+0x180>
    12f4:	70 e3       	ldi	r23, 0x30	; 48
    12f6:	7c 93       	st	X, r23
    12f8:	20 13       	cpse	r18, r16
    12fa:	b8 f7       	brcc	.-18     	; 0x12ea <__ftoa_engine+0x174>
    12fc:	7e 91       	ld	r23, -X
    12fe:	70 61       	ori	r23, 0x10	; 16
    1300:	7d 93       	st	X+, r23
    1302:	30 f0       	brcs	.+12     	; 0x1310 <__ftoa_engine+0x19a>
    1304:	83 95       	inc	r24
    1306:	71 e3       	ldi	r23, 0x31	; 49
    1308:	7d 93       	st	X+, r23
    130a:	70 e3       	ldi	r23, 0x30	; 48
    130c:	2a 95       	dec	r18
    130e:	e1 f7       	brne	.-8      	; 0x1308 <__ftoa_engine+0x192>
    1310:	11 24       	eor	r1, r1
    1312:	ef 90       	pop	r14
    1314:	ff 90       	pop	r15
    1316:	0f 91       	pop	r16
    1318:	1f 91       	pop	r17
    131a:	cf 91       	pop	r28
    131c:	df 91       	pop	r29
    131e:	99 27       	eor	r25, r25
    1320:	87 fd       	sbrc	r24, 7
    1322:	90 95       	com	r25
    1324:	08 95       	ret

Disassembly of section .text.avrlibc:

00001da6 <strnlen>:
    1da6:	cf 92       	push	r12
    1da8:	df 92       	push	r13
    1daa:	ef 92       	push	r14
    1dac:	6b 01       	movw	r12, r22
    1dae:	e8 2e       	mov	r14, r24
    1db0:	9a 01       	movw	r18, r20
    1db2:	a8 2f       	mov	r26, r24
    1db4:	cb 01       	movw	r24, r22
    1db6:	21 15       	cp	r18, r1
    1db8:	31 05       	cpc	r19, r1
    1dba:	31 f4       	brne	.+12     	; 0x1dc8 <strnlen+0x22>
    1dbc:	8c 19       	sub	r24, r12
    1dbe:	9d 09       	sbc	r25, r13
    1dc0:	ef 90       	pop	r14
    1dc2:	df 90       	pop	r13
    1dc4:	cf 90       	pop	r12
    1dc6:	08 95       	ret
    1dc8:	fc 01       	movw	r30, r24
    1dca:	5a 2f       	mov	r21, r26
    1dcc:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <__xload_1>
    1dd0:	66 23       	and	r22, r22
    1dd2:	a1 f3       	breq	.-24     	; 0x1dbc <strnlen+0x16>
    1dd4:	01 96       	adiw	r24, 0x01	; 1
    1dd6:	a1 1d       	adc	r26, r1
    1dd8:	21 50       	subi	r18, 0x01	; 1
    1dda:	31 09       	sbc	r19, r1
    1ddc:	ec cf       	rjmp	.-40     	; 0x1db6 <strnlen+0x10>

Disassembly of section .text.avrlibc:

000019b2 <fputc>:
    19b2:	0f 93       	push	r16
    19b4:	1f 93       	push	r17
    19b6:	cf 93       	push	r28
    19b8:	df 93       	push	r29
    19ba:	fb 01       	movw	r30, r22
    19bc:	24 81       	ldd	r18, Z+4	; 0x04
    19be:	21 fd       	sbrc	r18, 1
    19c0:	03 c0       	rjmp	.+6      	; 0x19c8 <fputc+0x16>
    19c2:	8f ef       	ldi	r24, 0xFF	; 255
    19c4:	9f ef       	ldi	r25, 0xFF	; 255
    19c6:	2c c0       	rjmp	.+88     	; 0x1a20 <fputc+0x6e>
    19c8:	22 ff       	sbrs	r18, 2
    19ca:	16 c0       	rjmp	.+44     	; 0x19f8 <fputc+0x46>
    19cc:	47 81       	ldd	r20, Z+7	; 0x07
    19ce:	50 85       	ldd	r21, Z+8	; 0x08
    19d0:	25 81       	ldd	r18, Z+5	; 0x05
    19d2:	36 81       	ldd	r19, Z+6	; 0x06
    19d4:	42 17       	cp	r20, r18
    19d6:	53 07       	cpc	r21, r19
    19d8:	44 f4       	brge	.+16     	; 0x19ea <fputc+0x38>
    19da:	a0 81       	ld	r26, Z
    19dc:	b1 81       	ldd	r27, Z+1	; 0x01
    19de:	9d 01       	movw	r18, r26
    19e0:	2f 5f       	subi	r18, 0xFF	; 255
    19e2:	3f 4f       	sbci	r19, 0xFF	; 255
    19e4:	31 83       	std	Z+1, r19	; 0x01
    19e6:	20 83       	st	Z, r18
    19e8:	8c 93       	st	X, r24
    19ea:	27 81       	ldd	r18, Z+7	; 0x07
    19ec:	30 85       	ldd	r19, Z+8	; 0x08
    19ee:	2f 5f       	subi	r18, 0xFF	; 255
    19f0:	3f 4f       	sbci	r19, 0xFF	; 255
    19f2:	30 87       	std	Z+8, r19	; 0x08
    19f4:	27 83       	std	Z+7, r18	; 0x07
    19f6:	14 c0       	rjmp	.+40     	; 0x1a20 <fputc+0x6e>
    19f8:	8b 01       	movw	r16, r22
    19fa:	ec 01       	movw	r28, r24
    19fc:	fb 01       	movw	r30, r22
    19fe:	01 84       	ldd	r0, Z+9	; 0x09
    1a00:	f2 85       	ldd	r31, Z+10	; 0x0a
    1a02:	e0 2d       	mov	r30, r0
    1a04:	19 95       	eicall
    1a06:	89 2b       	or	r24, r25
    1a08:	e1 f6       	brne	.-72     	; 0x19c2 <fputc+0x10>
    1a0a:	d8 01       	movw	r26, r16
    1a0c:	17 96       	adiw	r26, 0x07	; 7
    1a0e:	8d 91       	ld	r24, X+
    1a10:	9c 91       	ld	r25, X
    1a12:	18 97       	sbiw	r26, 0x08	; 8
    1a14:	01 96       	adiw	r24, 0x01	; 1
    1a16:	18 96       	adiw	r26, 0x08	; 8
    1a18:	9c 93       	st	X, r25
    1a1a:	8e 93       	st	-X, r24
    1a1c:	17 97       	sbiw	r26, 0x07	; 7
    1a1e:	ce 01       	movw	r24, r28
    1a20:	df 91       	pop	r29
    1a22:	cf 91       	pop	r28
    1a24:	1f 91       	pop	r17
    1a26:	0f 91       	pop	r16
    1a28:	08 95       	ret

Disassembly of section .text.avrlibc:

000015a6 <__ultoa_invert>:
    15a6:	fa 01       	movw	r30, r20
    15a8:	aa 27       	eor	r26, r26
    15aa:	28 30       	cpi	r18, 0x08	; 8
    15ac:	51 f1       	breq	.+84     	; 0x1602 <__ultoa_invert+0x5c>
    15ae:	20 31       	cpi	r18, 0x10	; 16
    15b0:	81 f1       	breq	.+96     	; 0x1612 <__ultoa_invert+0x6c>
    15b2:	e8 94       	clt
    15b4:	6f 93       	push	r22
    15b6:	6e 7f       	andi	r22, 0xFE	; 254
    15b8:	6e 5f       	subi	r22, 0xFE	; 254
    15ba:	7f 4f       	sbci	r23, 0xFF	; 255
    15bc:	8f 4f       	sbci	r24, 0xFF	; 255
    15be:	9f 4f       	sbci	r25, 0xFF	; 255
    15c0:	af 4f       	sbci	r26, 0xFF	; 255
    15c2:	b1 e0       	ldi	r27, 0x01	; 1
    15c4:	3e d0       	rcall	.+124    	; 0x1642 <__ultoa_invert+0x9c>
    15c6:	b4 e0       	ldi	r27, 0x04	; 4
    15c8:	3c d0       	rcall	.+120    	; 0x1642 <__ultoa_invert+0x9c>
    15ca:	67 0f       	add	r22, r23
    15cc:	78 1f       	adc	r23, r24
    15ce:	89 1f       	adc	r24, r25
    15d0:	9a 1f       	adc	r25, r26
    15d2:	a1 1d       	adc	r26, r1
    15d4:	68 0f       	add	r22, r24
    15d6:	79 1f       	adc	r23, r25
    15d8:	8a 1f       	adc	r24, r26
    15da:	91 1d       	adc	r25, r1
    15dc:	a1 1d       	adc	r26, r1
    15de:	6a 0f       	add	r22, r26
    15e0:	71 1d       	adc	r23, r1
    15e2:	81 1d       	adc	r24, r1
    15e4:	91 1d       	adc	r25, r1
    15e6:	a1 1d       	adc	r26, r1
    15e8:	20 d0       	rcall	.+64     	; 0x162a <__ultoa_invert+0x84>
    15ea:	09 f4       	brne	.+2      	; 0x15ee <__ultoa_invert+0x48>
    15ec:	68 94       	set
    15ee:	3f 91       	pop	r19
    15f0:	2a e0       	ldi	r18, 0x0A	; 10
    15f2:	26 9f       	mul	r18, r22
    15f4:	11 24       	eor	r1, r1
    15f6:	30 19       	sub	r19, r0
    15f8:	30 5d       	subi	r19, 0xD0	; 208
    15fa:	31 93       	st	Z+, r19
    15fc:	de f6       	brtc	.-74     	; 0x15b4 <__ultoa_invert+0xe>
    15fe:	cf 01       	movw	r24, r30
    1600:	08 95       	ret
    1602:	46 2f       	mov	r20, r22
    1604:	47 70       	andi	r20, 0x07	; 7
    1606:	40 5d       	subi	r20, 0xD0	; 208
    1608:	41 93       	st	Z+, r20
    160a:	b3 e0       	ldi	r27, 0x03	; 3
    160c:	0f d0       	rcall	.+30     	; 0x162c <__ultoa_invert+0x86>
    160e:	c9 f7       	brne	.-14     	; 0x1602 <__ultoa_invert+0x5c>
    1610:	f6 cf       	rjmp	.-20     	; 0x15fe <__ultoa_invert+0x58>
    1612:	46 2f       	mov	r20, r22
    1614:	4f 70       	andi	r20, 0x0F	; 15
    1616:	40 5d       	subi	r20, 0xD0	; 208
    1618:	4a 33       	cpi	r20, 0x3A	; 58
    161a:	18 f0       	brcs	.+6      	; 0x1622 <__ultoa_invert+0x7c>
    161c:	49 5d       	subi	r20, 0xD9	; 217
    161e:	31 fd       	sbrc	r19, 1
    1620:	40 52       	subi	r20, 0x20	; 32
    1622:	41 93       	st	Z+, r20
    1624:	02 d0       	rcall	.+4      	; 0x162a <__ultoa_invert+0x84>
    1626:	a9 f7       	brne	.-22     	; 0x1612 <__ultoa_invert+0x6c>
    1628:	ea cf       	rjmp	.-44     	; 0x15fe <__ultoa_invert+0x58>
    162a:	b4 e0       	ldi	r27, 0x04	; 4
    162c:	a6 95       	lsr	r26
    162e:	97 95       	ror	r25
    1630:	87 95       	ror	r24
    1632:	77 95       	ror	r23
    1634:	67 95       	ror	r22
    1636:	ba 95       	dec	r27
    1638:	c9 f7       	brne	.-14     	; 0x162c <__ultoa_invert+0x86>
    163a:	00 97       	sbiw	r24, 0x00	; 0
    163c:	61 05       	cpc	r22, r1
    163e:	71 05       	cpc	r23, r1
    1640:	08 95       	ret
    1642:	9b 01       	movw	r18, r22
    1644:	ac 01       	movw	r20, r24
    1646:	0a 2e       	mov	r0, r26
    1648:	06 94       	lsr	r0
    164a:	57 95       	ror	r21
    164c:	47 95       	ror	r20
    164e:	37 95       	ror	r19
    1650:	27 95       	ror	r18
    1652:	ba 95       	dec	r27
    1654:	c9 f7       	brne	.-14     	; 0x1648 <__ultoa_invert+0xa2>
    1656:	62 0f       	add	r22, r18
    1658:	73 1f       	adc	r23, r19
    165a:	84 1f       	adc	r24, r20
    165c:	95 1f       	adc	r25, r21
    165e:	a0 1d       	adc	r26, r0
    1660:	08 95       	ret

Disassembly of section .text.libgcc:

00001fe0 <__xload_1>:
    1fe0:	57 fd       	sbrc	r21, 7
    1fe2:	03 c0       	rjmp	.+6      	; 0x1fea <__xload_1+0xa>
    1fe4:	5b bf       	out	0x3b, r21	; 59
    1fe6:	67 91       	elpm	r22, Z+
    1fe8:	08 95       	ret
    1fea:	60 81       	ld	r22, Z
    1fec:	08 95       	ret
